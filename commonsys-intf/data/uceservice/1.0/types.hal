/*********************************************************************
 Copyright (c) 2017 Qualcomm Technologies, Inc.
 All Rights Reserved.
 Confidential and Proprietary - Qualcomm Technologies, Inc.
**********************************************************************/

package com.qualcomm.qti.uceservice@1.0;


enum UceStatusCode : uint32_t {
  UCE_SUCCESS,
  UCE_FAILURE,
  UCE_SUCCESS_ASYNC_UPDATE,
  UCE_INVALID_SERVICE_HANDLE,
  UCE_INVALID_LISTENER_HANDLE,
  UCE_INVALID_PARAM,
  UCE_FETCH_ERROR,
  UCE_REQUEST_TIMEOUT,
  UCE_INSUFFICIENT_MEMORY,
  UCE_LOST_NET,
  UCE_NOT_SUPPORTED,
  UCE_NOT_FOUND,
  UCE_SERVICE_UNAVAILABLE,
  UCE_NO_CHANGE_IN_CAP,
  UCE_INVALID_FEATURE_TAG,
  UCE_SERVICE_UNKNOWN
};


struct UceStatus {
  UceStatusCode status;
  string description;
};

struct RcsFeatureTag {
  string featureTag;
};


struct CapabilityInfo {
  /** IM session support. */
  bool mImSupported;

  /** File transfer support. */
  bool mFtSupported;

  /** File transfer Thumbnail support. */
  bool mFtThumbSupported;

  /** File transfer Store and forward support. */
  bool mFtSnFSupported;

  /** File transfer HTTP support. */
  bool mFtHttpSupported;

  /** Image sharing support. */
  bool mIsSupported;

  /** Video sharing during a CS call support -- IR-74. */
  bool mVsDuringCSSupported;

  /** Video sharing outside of voice call support -- IR-84. */
  bool mVsSupported;

  /** Social presence support. */
  bool mSpSupported;

  /** Presence discovery support. */
  bool mCdViaPresenceSupported;

  /** IP voice call support (IR-92/IR-58). */
  bool mIpVoiceSupported;

  /** IP video call support (IR-92/IR-58). */
  bool mIpVideoSupported;

  /** IP Geo location Pull using File Transfer support. */
  bool mGeoPullFtSupported;

  /** IP Geo location Pull support. */
  bool mGeoPullSupported;

  /** IP Geo location Push support. */
  bool mGeoPushSupported;

  /** Standalone messaging support. */
  bool mSmSupported;

  /** Full Store and Forward Group Chat information. */
  bool mFullSnFGroupChatSupported;

  /** RCS IP Voice call support .  */
  bool mRcsIpVoiceCallSupported;

  /** RCS IP Video call support .  */
  bool mRcsIpVideoCallSupported;

  /** RCS IP Video call support .  */
  bool mRcsIpVideoOnlyCallSupported;

  /** List of supported extensions. */
  vec<string> mExts;

  /** Time used to compute when to query again. */
  int64_t mCapTimestamp;
};




/** *************************************
 * Start of Presence Service Data Types *
 ****************************************/

struct PresenceCapabilityInfo {
  string mContactUri;
  CapabilityInfo mCapInfo;
};

enum PresenceCmdId : int32_t {
  /** Command ID corresponding to function GetVersion(). */
  UCE_PRES_CMD_GET_VERSION,

  /** Command ID corresponding to function Publish(). */
  UCE_PRES_CMD_PUBLISHMYCAP,

  /** Command ID corresponding to function GetContactCap(). */
  UCE_PRES_CMD_GETCONTACTCAP,

  /** Command ID corresponding to function GetContactListCap(). */
  UCE_PRES_CMD_GETCONTACTLISTCAP,

  /** Command ID corresponding to function SetNewFeatureTag(). */
  UCE_PRES_CMD_SETNEWFEATURETAG,

  /** Command ID corresponding to API ReenableService(). */
  UCE_PRES_CMD_REENABLE_SERVICE,

  /** Command ID is unknown. */
  UCE_PRES_CMD_UNKNOWN,
};

struct PresCmdStatus {
  PresenceCmdId mCmdId;
  UceStatusCode mStatus;
  int64_t mUserData;
  int32_t mRequestId;
};

enum PresPublishTriggerType : int32_t {
  /** ETag expired. */
  UCE_PRES_PUBLISH_TRIGGER_ETAG_EXPIRED,
  /** Move to LTE with VoPS disabled. */
  UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_LTE_VOPS_DISABLED,
  /** Move to LTE with VoPS enabled. */
  UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_LTE_VOPS_ENABLED,
  /** Move to eHRPD. */
  UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_EHRPD,
  /** Move to HSPA+. */
  UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_HSPAPLUS,
  /** Move to 3G. */
  UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_3G,
  /** Move to 2G. */
  UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_2G,
  /** Move to WLAN */
  UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_WLAN,
  /** Move to IWLAN */
  UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_IWLAN,
  /** Trigger is unknown. */
  UCE_PRES_PUBLISH_TRIGGER_UNKNOWN,
};

enum ResInstantceState : int32_t {
  UCE_PRES_RES_INSTANCE_STATE_ACTIVE,
  UCE_PRES_RES_INSTANCE_STATE_PENDING,
  UCE_PRES_RES_INSTANCE_STATE_TERMINATED,
  UCE_PRES_RES_INSTANCE_STATE_UNKNOWN,
  UCE_PRES_RES_INSTANCE_UNKNOWN,
};

struct PresTupleInfo {
  string mFeatureTag;
  string mContactUri;
  string mTimestamp;
};

struct PresResInstanceInfo {
  ResInstantceState mResInstanceState;
  string mId;
  string mReason;
  string mPresentityUri;
  vec<PresTupleInfo> mTupleInfoArray;
};

struct PresResInfo {
  string mResUri;
  string mDisplayName;
  PresResInstanceInfo mInstanceInfo;
};

enum PresSubscriptionState : int32_t {
  UCE_PRES_SUBSCRIPTION_STATE_ACTIVE,
  UCE_PRES_SUBSCRIPTION_STATE_PENDING,
  UCE_PRES_SUBSCRIPTION_STATE_TERMINATED,
  UCE_PRES_SUBSCRIPTION_STATE_UNKNOWN,
};

struct PresRlmiInfo {
  string mUri;
  int32_t mVersion;
  bool mFullState;
  string mListname;
  int32_t mRequestId;
  PresSubscriptionState mPresSubscriptionState;
  int32_t mSubscriptionExpireTime;
  string mSubscriptionTerminatedReason;
};

enum MediaInfoType : int32_t {
  UCE_PRES_MEDIA_CAP_NONE,
  UCE_PRES_MEDIA_CAP_FULL_AUDIO_ONLY,
  UCE_PRES_MEDIA_CAP_FULL_AUDIO_AND_VIDEO,
  UCE_PRES_MEDIA_CAP_UNKNOWN,
};

struct PresServiceInfo {
  MediaInfoType mMediaCap;
  string mServiceId;
  string mServiceDesc;
  string mServiceVer;
};

struct PresSipResponse {
  PresenceCmdId mCmdId;
  int32_t mRequestId;
  uint16_t mSipResponseCode;
  uint16_t mRetryAfter;
  string mReasonPhrase;
};

/** *************************************
 * End of Presence Service Data Types   *
 ****************************************/





/** ************************************
 * Start of Options Service Data Types *
 ***************************************/


enum OptionsCmdId : int32_t {
  /** Command ID corresponding to API GetMyInfo(). */
  UCE_OPTIONS_CMD_GETMYCDINFO,

  /** Command ID corresponding to API SetMyInfo(). */
  UCE_OPTIONS_CMD_SETMYCDINFO,

  /** Command ID corresponding to API GetContactCap(). */
  UCE_OPTIONS_CMD_GETCONTACTCAP,

  /** Command ID corresponding to API GetContactListCap(). */
  UCE_OPTIONS_CMD_GETCONTACTLISTCAP,

  /** Command ID corresponding to API ResponseIncomingOptions(). */
  UCE_OPTIONS_CMD_RESPONSEINCOMINGOPTIONS,

  /** Command ID corresponding to API GetVersion(). */
  UCE_OPTIONS_CMD_GET_VERSION,

  /** Default Command ID as Unknown. */
  UCE_OPTIONS_CMD_UNKNOWN,
};

struct OptionsCapabilityInfo {
  string          sdp;
  CapabilityInfo  capInfo;
};

struct OptionsCmdStatus {
  OptionsCmdId mCmdId;
  UceStatusCode mStatus;
  int64_t mUserData;
  OptionsCapabilityInfo mCapInfo;
};

struct OptionsSipResponse {
  OptionsCmdId mCmdId;
  int32_t mRequestId;
  uint16_t mSipResponseCode;
  uint16_t mRetryAfter;
  string mReasonPhrase;
};

/* ************************************
 * End of Options Service Data Types   *
 ***************************************/

/********************************************************************
 * Copyright (c) 2017 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 *********************************************************************/

package vendor.qti.hardware.qteeconnector@1.0;

interface IGPApp {
    /**
     * Unload the GP App
     *
     * @return status 0 on success, errorcode otherwise
     */
    unload() generates(int32_t status);
    /**
     * invoke a Command
     *
     * @param req the request to be sent to the app
     * @param rspLen size of the response buffer
     * @param info file descriptors to be mapped in the command buffer
     * @return status status of the call, 0 on success, errorcode otherwise
     * @return rsp the response to this request
     */
    invokeCommand(vec<uint8_t> req, uint32_t rspLen, QTEECom_ion_fd_info info) generates(int32_t status, vec<uint8_t> rsp);
    /**
     * open a session
     * @param req the request to be sent to the app
     * @param rspLen size of the response buffer
     * @param info file descriptors to be mapped in the command buffer
     * @return status status of the call, 0 on success, errorcode otherwise
     * @return rsp the response to this request
     */
    openSession(vec<uint8_t> req, uint32_t rspLen, QTEECom_ion_fd_info info) generates(int32_t status, vec<uint8_t> rsp);
    /**
     * close the session
     *
     * @param req the command to be sent to the app
     * @param rspLen size of the response buffer
     * @return status status of the call, 0 on success, errorcode otherwise
     * @return rsp the response to the close session
     */
    closeSession(vec<uint8_t> req, uint32_t rspLen) generates(int32_t status, vec<uint8_t> rsp);
    /**
     * requestCancellation
     *
     * @param sessionId id of the session to be cancelled
     * @return status status of the call, 0 on success, errorcode otherwise
     * @return rsp the response to the close session
     */
     requestCancellation(uint32_t sessionId) generates(int32_t status);
};

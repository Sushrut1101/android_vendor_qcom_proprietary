/* -------------------------------------------------------------------------------------------------
** Copyright (c) 2015 Qualcomm Technologies, Inc.
** All Rights Reserved.
** Confidential and Proprietary - Qualcomm Technologies, Inc.
**
** FILE: batch.sli
** DESC: stream service, optional batching
** usage -args=$service,$report_rate,$sample_rate,$duration,$batch_period,$notify_suspend
** ---------------------------------------------------------------------------------------------- */

sub process_sample( $indication, $ind_num, $sample_num)
{
    my ( $srvc_num) = slget( $indication, { srvc_num});
    if ( $srvc_num == 20) {          // grav
        my ( $sscts, $gravx, $gravy, $gravz) = slget( $indication, { sscts, gravx, gravy, gravz});
        my ( $linax, $linay, $linaz, $accuracy) = slget( $indication, {linaccx, linaccy, linaccz, accuracy});
        my( $motion_state) = slget( $indication, { motion_state});
        print( "$ind_num.$sample_num: gravity $gravx, $gravy, $gravz, linacc $linax, $linay, $linaz, sscts $sscts, accuracy $accuracy, motion_state $motion_state\n");
    }
    else if ( $srvc_num == 43) {    // grv
        my ( $sscts, $grv0, $grv1, $grv2, $grv3) = slget( $indication, { sscts, grv0, grv1, grv2, grv3});
        my ( $accuracy, $coordsys) = slget( $indication, { accuracy, coordsys});
        print( "$ind_num.$sample_num: grv $grv0, $grv1, $grv2, $grv3, $sscts, accuracy $accuracy, coordsys $coordsys\n");
    }
    else if ( $srvc_num == 18) {    // rotv
        my ( $sscts, $rotv0, $rotv1, $rotv2, $rotv3) = slget( $indication, { sscts, rotv0, rotv1, rotv2, rotv3});
        my ( $accuracy, $coordsys) = slget( $indication, { accuracy, coordsys});
        print( "$ind_num.$sample_num: rotv $rotv0, $rotv1, $rotv2, $rotv3, $sscts, accuracy $accuracy, coordsys $coordsys\n");
    }
    else if ( $srvc_num == 23) {    // ornt
        my ( $sscts, $rotv0, $rotv1, $rotv2, $rotv3) = slget( $indication, { sscts, rotv0, rotv1, rotv2, rotv3});
        my ( $gravx, $gravy, $gravz) = slget( $indication, { gravx, gravy, gravz});
        my ( $linax, $linay, $linaz) = slget( $indication, { linaccx, linaccy, linaccz});
        my ( $rotv_accuracy, $grav_accuracy, $coordsys) = slget( $indication, { rotv_accuracy, gravity_accuracy, coordsys});
        print( "$ind_num.$sample_num: ornt rot: $rotv0, $rotv1, $rotv2, $rotv3 grav: $gravx, $gravy, $gravz lina: $linax, $linay, $linaz\n");
        print( "\tsscts $sscts, rotv_acc $rotv_accuracy, grav_acc $grav_accuracy, coordsys $coordsys\n");
    }
    else if ( $srvc_num == 37) {    // ped
        my ( $sscts, $step_event, $step_confidence, $step_count, $step_rate) = slget( $indication, { sscts, step_event, step_confidence, step_count, step_rate});
        print( "$ind_num.$sample_num: ped $sscts, $step_event, $step_confidence, $step_count, $step_rate\n");
    }
}

/*
** usage: $num_samples = process_ind( $indication, $ind_num)
*/
sub process_ind( $indication, $ind_num)
{
    my $samples;
    my ( $msg_id) = slget( $indication, {msg_id});
    if ( $msg_id == 34) {                                       // batch indication ?
        ( $samples) = slget( $indication, {report});            // + yes. get number of samples

        my $i = 0;
        while ( $i < $samples) {
            slget( $indication, { report.$i});
            process_sample( $indication, $ind_num, $i);
            $i += 1;
        }
        return $samples;
    }
    else {
        process_sample( $indication, $ind_num, 0);              // report indication
        return 1;
    }
}

sub main( @argv)
{
    my ( $service, $report_rate, $sample_rate, $duration, $batch_period, $notify_suspend) = @argv;

    my $report_period = 0;
    if ( $report_rate) {
        $report_period = 1 / $report_rate;   // report_period in seconds / report_rate in hz
    }

    if ( !defined( $duration)) {
        $duration = 10;                         // seconds
    }

    my $enable_req = slnew_req( $service, "enable", { report_period => $report_period} );
    if ( !defined( $enable_req)) {
        ;   // stub sllast_error
        return;
    }

    if ( defined( $sample_rate)) {
        slset_req( $enable_req, { sample_rate => $sample_rate} );
    }
    if ( defined( $notify_suspend)) {
        slset_req( $enable_req, { notify_suspend => $notify_suspend} );
    }

    my $client = slopen();
    my $timeout = 3;

    my $enable_resp = slsend_recv( $client, $enable_req, $timeout);
    if ( defined( $enable_resp)) {
        my ( $instance_id) = slget( $enable_resp, { instance_id});
        print( "\$instance_id $instance_id\n");

        if ( defined( $batch_period)) {
            my $batch_req = slnew_req( $service, "batch", { instance_id => $instance_id, batch_period => $batch_period});
            my $batch_resp = slsend_recv( $client, $batch_req, $timeout);
            if ( !defined( $batch_resp)) {
                print( "\$batch_resp $batch_resp\n");
            }
        }

        sloption( "script_handles_indications");

        print( "\t$service indications:\n");

        my $ind_number = 0;
        my $sample_count = 0;
        $timeout = 3;
        if ( defined( $batch_period)) {
            $timeout = $batch_period * 2;
        }

        my ( $start_secs, $usec) = gettimeofday();
        while ( 1) {
            my ( $now_secs, $now_usec) = gettimeofday();
            if ( $now_secs - $start_secs >= $duration) {
                break;
            }
            my $respind = slrecv( $timeout);
            if ( !defined( $respind)) {
                print( "respind not defined\n");
                break;
            }

            my ( $msg_type) = slget( $respind, {msg_type});
            if ( $msg_type == 2) {                                      // indication packet ?
                $ind_number   += 1;
                $sample_count += process_ind( $respind, $ind_number);   // + yes
            }
            else {
                print( "got respind msg_type $msg_type\n");
            }
        }

        if ( defined( $batch_period)) {
            my $batch_req = slnew_req( $service, "batch", { instance_id => $instance_id, batch_period => 0});
            my $batch_resp = slsend_recv( $client, $batch_req, $timeout);
            if ( !defined( $batch_resp)) {
                print( "\$batch_resp $batch_resp\n");
            }
        }

        my $report_req = slnew_req( $service, "get_report", { instance_id => $instance_id});
        my $report_resp = slsend_recv( $client, $report_req, $timeout);
        print( "\n");

        my $disable_req = slnew_req( $service, "disable", { instance_id => $instance_id});
        my $disable_resp = slsend_recv( $client, $disable_req, $timeout);
        ( $instance_id) = slget( $disable_resp, { instance_id});
        print( "\$instance_id $instance_id\n");
    }

    slclose( $client);
    return  0;
}


/*********************************************************************
 Copyright (c) 2017 Qualcomm Technologies, Inc.
 All Rights Reserved.
 Confidential and Proprietary - Qualcomm Technologies, Inc.
**********************************************************************/


package com.qualcomm.qti.uceservice@1.0;

import IUceListener;
import IPresenceService;
import IPresenceListener;
import IOptionsService;
import IOptionsListener;

interface IUceService {


  /**
   *
   * @return
   * UceStatus.SUCESS for success
   * UceStatus.Failure for failure
   *
   */
  addUceListener(IUceListener listener) generates (UceStatus status);

  /**
   * Places a request to create Presence Service.
   * upon successful, the application should expect to receive
   * IPresenceListener.OnPresenceCreated() callback
   *
   * Note: Customer needs to create unique listener for each sub
   */
  createPresenceService(IPresenceListener listener, int64_t clientHandle,
                        uint32_t subId) generates (UceStatus status);

  /**
   * Get the Presence Service Instance
   * @param serviceHandle received in IPresenceListener.OnPresenceCreated()
   */
  getPresenceService(int64_t serviceHandle) generates (IPresenceService service);

  /**
   * ServiceHandle is received in IPresenceListener.OnPresenceCreated() callback
   */
  destroyPresenceService(int64_t serviceHandle);

  /**
   * Places a request to create Options Service.
   * upon successful, the application should expect to receive
   * IOptionsListener.OnOptionsCreated() callback
   *
   * Note: Customer needs to create unique listener for each sub
   */
  createOptionsService(IOptionsListener listener, int64_t clientHandle,
                       uint32_t subId) generates (UceStatus status);

  /**
   * Get the Presence Service Instance
   * @param serviceHandle received in IOptionsListener.OnOptionsCreated()
   */
  getOptionsService(int64_t serviceHandle) generates (IOptionsService service);

  /**
   * ServiceHandle is received in IOptionsListener.OnOptionsCreated() callback
   */
  destroyOptionsService(int64_t serviceHandle);

};
/*
 * Copyright (c) 2017 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 *
 */

package com.qualcomm.qti.imscmservice@1.0;

import IImsCMConnectionListener;

interface IImsCMConnection {

/**
 * Adds a listener containing the list of
 * function pointers to be invoked to notify clients of the
 * various events from the connection.
 *
 * @param[in] pConnectionListener  Structure with the list of
 *                                 callbacks.
 *
 * @return
 *   Status code. See #IMSCM_STATUSCODE.
 *
 * @dependencies
 *   None.
 */
addListener(IImsCMConnectionListener connlistener) generates (IMSCM_STATUSCODE status);

/**
 * Removes a listener from the IMS connection.
 *
 * @param[in] pIMSConnection      Handle to the IMSConnection
 *                                interface object.
 * @param[in] pConnectionListener Structure with the list of
 *                                callbacks.
 *
 * @return
 *   Status code. See #IMSCM_STATUSCODE.
 *
 * @dependencies
 *   None.
 */
removeListener(IImsCMConnectionListener connlistener) generates (IMSCM_STATUSCODE status);

/**
 * Sends a SIP message with a unique call ID.
 *
 * @param[in] pIMSConnection    Handle to the IMSConnection
 *                              interface object.
 * @param[in] pMessage          Structure consisting of message parameters.
 * @param[in] userdata Command  user data.
 *
 * @return
 *   Status code. See #IMSCM_STATUSCODE.
 *
 * @dependencies
 *   None.
 */
sendMessage(IMSCM_CONN_MESSAGE message,
            uint32_t userdata) generates (IMSCM_STATUSCODE status);

/**
 * Terminates a SIP transaction with a specified call ID.
 *
 * @param[in] pIMSConnection Handle to the IMSConnection
 *                           interface object.
 * @param[in] pCallId        Call ID.
 *
 * @return
 *   Status code. See #IMSCM_STATUSCODE.
 *
 * @dependencies
 *   None.
 */
closeTransaction(string callID,
                 uint32_t userdata) generates (IMSCM_STATUSCODE status);

/**
 * Terminates all transactions being handled by the connection object.
 *
 * @param[in] pIMSConnection Handle to the IMSConnection
 *                            interface object.
 * @return
 *   Status code. See #IMSCM_STATUSCODE.
 *
 * @dependencies
 *   None.
 */
closeAllTransactions(uint32_t userdata) generates (IMSCM_STATUSCODE status);

/**
 * Set the current status of the service(Feature Tag of the service)
 * which is session based and using the current connection.
 *
 * @param[in] pFeatureTag FeatureTag/Service.
 * @param[in] iStatus     Status of the session.
 *
 * @return
 *   Status code. See #QIMSCM_STATUSCODE.
 *
 * @dependencies
 *   None.
 */
setStatus(string featureTag,
          uint32_t status) generates (IMSCM_STATUSCODE statusCode);



};

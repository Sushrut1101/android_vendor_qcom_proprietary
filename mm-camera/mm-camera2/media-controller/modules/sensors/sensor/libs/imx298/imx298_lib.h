/*
 * Copyright (c) 2015-2016 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 */

#ifndef __IMX298_LIB_H__
#define __IMX298_LIB_H__

#include "sensor_lib.h"
#define SENSOR_MODEL "imx298"
#define FLIP_MIRROR

#ifndef FLIP_MIRROR
  #define FLIP_MIRROR_SETTING (0x00)
#else
  #define FLIP_MIRROR_SETTING (0x03)
#endif

/* IMX298 REGISTERS */
#define IMX298_DIG_GAIN_GR_ADDR           0x020E
#define IMX298_DIG_GAIN_R_ADDR            0x0210
#define IMX298_DIG_GAIN_B_ADDR            0x0212
#define IMX298_DIG_GAIN_GB_ADDR           0x0214
#define IMX298_EXP_RATIO_ADDR             0x0222
#define IMX298_ABS_GAIN_R_WORD_ADDR       0x0B90
#define IMX298_ABS_GAIN_B_WORD_ADDR       0x0B92
#define IMX298_SHORT_COARSE_INT_TIME_ADDR 0x0224
#define IMX298_SHORT_GAIN_ADDR            0x0216

/* IMX298 CONSTANTS */
#define IMX298_MAX_INTEGRATION_MARGIN   10

/* STATS DATA TYPE */
#define IMX298_CSI_HDR_ISTATS           0x35
#define IMX298_CSI_PD_ISTATS            0x36

#define IMX298_DATA_PEDESTAL            0x40    /* 10bit value */

#define IMX298_MIN_AGAIN_REG_VAL        0       /* 1.0x */
#define IMX298_MAX_AGAIN_REG_VAL        448     /*  8.0x */

#define IMX298_MIN_DGAIN_REG_VAL        256     /* 1.0x */
#define IMX298_MAX_DGAIN_REG_VAL        511     /* 2.0x / 6dB / 1FF */

#define IMX298_MAX_DGAIN_DECIMATOR      256

/* IMX298 FORMULAS */
#define IMX298_MIN_AGAIN    (512 / (512 - IMX298_MIN_AGAIN_REG_VAL))
#define IMX298_MAX_AGAIN    (512 / (512 - IMX298_MAX_AGAIN_REG_VAL))

#define IMX298_MIN_DGAIN    (IMX298_MIN_DGAIN_REG_VAL / 256)
#define IMX298_MAX_DGAIN    (IMX298_MAX_DGAIN_REG_VAL / 256)

#define IMX298_MIN_GAIN     IMX298_MIN_AGAIN * IMX298_MIN_DGAIN
#define IMX298_MAX_GAIN     IMX298_MAX_AGAIN * IMX298_MAX_DGAIN

#define FULL_SIZE_WIDTH 4656
#define FULL_SIZE_HEIGHT 3469

#define PD_FLEX_WIN_NUM 6

#define PD_AREA_MODE  2 /* AREA_MODE: 0 - 16x12, 1 - 8x6, 2 - Flexible */
#define PD_WIN_X (PD_AREA_MODE==2 ? 1 : (16/(PD_AREA_MODE+1)))
#define PD_WIN_Y (PD_AREA_MODE==2 ? PD_FLEX_WIN_NUM : (12/(PD_AREA_MODE+1)))


/* PD area settings for full-size */
#define PD_AREA_WIDTH (280*(PD_AREA_MODE+1))
#define PD_AREA_HEIGHT (278*(PD_AREA_MODE+1))
#define PD_AREA_X_OFFSET 88
#define PD_AREA_Y_OFFSET 72

#define PD_WIN_X_S_0 1770
#define PD_WIN_Y_S_0 1191
#define PD_WIN_X_E_0 2467
#define PD_WIN_Y_E_0 1887
#define PD_WIN_X_S_1 2188
#define PD_WIN_Y_S_1 1191
#define PD_WIN_X_E_1 2885
#define PD_WIN_Y_E_1 1887
#define PD_WIN_X_S_2 1770
#define PD_WIN_Y_S_2 1608
#define PD_WIN_X_E_2 2467
#define PD_WIN_Y_E_2 2304
#define PD_WIN_X_S_3 2188
#define PD_WIN_Y_S_3 1608
#define PD_WIN_X_E_3 2885
#define PD_WIN_Y_E_3 2304
#define PD_WIN_X_S_4 1770
#define PD_WIN_Y_S_4 1191
#define PD_WIN_X_E_4 2885
#define PD_WIN_Y_E_4 2304
#define PD_WIN_X_S_5 1397
#define PD_WIN_Y_S_5 1049
#define PD_WIN_X_E_5 3258
#define PD_WIN_Y_E_5 2446

#define SCALE_X(n) (n/(float)FULL_SIZE_WIDTH)
#define SCALE_Y(n) (n/(float)FULL_SIZE_HEIGHT)

/* Enable this macro to use full resolution at 30fps at 1.5Gbps */
#define FULL_RES_30FPS

#define START_REG_ARRAY \
{ \
  {0x0100, 0x01, 0x00}, \
}

#define STOP_REG_ARRAY \
{ \
  {0x0100, 0x00, 0x00}, \
}

#define GROUPON_REG_ARRAY \
{ \
  {0x0104, 0x01, 0x00}, \
}

#define GROUPOFF_REG_ARRAY \
{ \
  {0x0104, 0x00, 0x00}, \
}

#define INIT0_REG_ARRAY \
{ \
  {0x0136, 0x18, 0x00}, \
  {0x0137, 0x00, 0x00}, \
  {0x30F4, 0x01, 0x00}, \
  {0x30F5, 0x7A, 0x00}, \
  {0x30F6, 0x00, 0x00}, \
  {0x30F7, 0xEC, 0x00}, \
  {0x30FC, 0x01, 0x00}, \
  {0x3101, 0x01, 0x00}, \
  {0x5B2F, 0x08, 0x00}, \
  {0x5D32, 0x05, 0x00}, \
  {0x5D7C, 0x00, 0x00}, \
  {0x5D7D, 0x00, 0x00}, \
  {0x5DB9, 0x01, 0x00}, \
  {0x5E43, 0x00, 0x00}, \
  {0x6300, 0x00, 0x00}, \
  {0x6301, 0xEA, 0x00}, \
  {0x6302, 0x00, 0x00}, \
  {0x6303, 0xB4, 0x00}, \
  {0x6564, 0x00, 0x00}, \
  {0x6565, 0xB6, 0x00}, \
  {0x6566, 0x00, 0x00}, \
  {0x6567, 0xE6, 0x00}, \
  {0x6714, 0x01, 0x00}, \
  {0x6758, 0x0B, 0x00}, \
  {0x6910, 0x04, 0x00}, \
  {0x6916, 0x01, 0x00}, \
  {0x6918, 0x04, 0x00}, \
  {0x691E, 0x01, 0x00}, \
  {0x6931, 0x01, 0x00}, \
  {0x6937, 0x02, 0x00}, \
  {0x693B, 0x02, 0x00}, \
  {0x6D00, 0x4A, 0x00}, \
  {0x6D01, 0x41, 0x00}, \
  {0x6D02, 0x23, 0x00}, \
  {0x6D05, 0x4C, 0x00}, \
  {0x6D06, 0x10, 0x00}, \
  {0x6D08, 0x30, 0x00}, \
  {0x6D09, 0x38, 0x00}, \
  {0x6D0A, 0x2C, 0x00}, \
  {0x6D0B, 0x2D, 0x00}, \
  {0x6D0C, 0x34, 0x00}, \
  {0x6D0D, 0x42, 0x00}, \
  {0x6D19, 0x1C, 0x00}, \
  {0x6D1A, 0x71, 0x00}, \
  {0x6D1B, 0xC6, 0x00}, \
  {0x6D1C, 0x94, 0x00}, \
  {0x6D24, 0xE4, 0x00}, \
  {0x6D30, 0x0A, 0x00}, \
  {0x6D31, 0x01, 0x00}, \
  {0x6D33, 0x0B, 0x00}, \
  {0x6D34, 0x05, 0x00}, \
  {0x6D35, 0x00, 0x00}, \
  {0x83C2, 0x03, 0x00}, \
  {0x83c3, 0x08, 0x00}, \
  {0x83C4, 0x48, 0x00}, \
  {0x83C7, 0x08, 0x00}, \
  {0x83CB, 0x00, 0x00}, \
  {0xB101, 0xFF, 0x00}, \
  {0xB103, 0xFF, 0x00}, \
  {0xB105, 0xFF, 0x00}, \
  {0xB107, 0xFF, 0x00}, \
  {0xB109, 0xFF, 0x00}, \
  {0xB10B, 0xFF, 0x00}, \
  {0xB10D, 0xFF, 0x00}, \
  {0xB10F, 0xFF, 0x00}, \
  {0xB111, 0xFF, 0x00}, \
  {0xB163, 0x3C, 0x00}, \
  {0xC2A0, 0x08, 0x00}, \
  {0xC2A3, 0x03, 0x00}, \
  {0xC2A5, 0x08, 0x00}, \
  {0xC2A6, 0x48, 0x00}, \
  {0xC2A9, 0x00, 0x00}, \
  {0x3035, 0x01, 0x00}, \
  {0x3051, 0x00, 0x00}, \
  {0x3056, 0x02, 0x00}, \
  {0x3057, 0x01, 0x00}, \
  {0x3060, 0x00, 0x00}, \
  {0x8435, 0x00, 0x00}, \
  {0x8455, 0x00, 0x00}, \
  {0x847C, 0x00, 0x00}, \
  {0x84FB, 0x01, 0x00}, \
  {0x9258, 0x00, 0x00}, \
  {0x934B, 0x1B, 0x00}, \
  {0x934C, 0x0A, 0x00}, \
  {0x9619, 0xA0, 0x00}, \
  {0x961B, 0xA0, 0x00}, \
  {0x961D, 0xA0, 0x00}, \
  {0x961F, 0x20, 0x00}, \
  {0x9621, 0x20, 0x00}, \
  {0x9623, 0x20, 0x00}, \
  {0x9625, 0xA0, 0x00}, \
  {0x9627, 0xA0, 0x00}, \
  {0x9629, 0xA0, 0x00}, \
  {0x962B, 0x20, 0x00}, \
  {0x962D, 0x20, 0x00}, \
  {0x962F, 0x20, 0x00}, \
  {0x9719, 0xA0, 0x00}, \
  {0x971B, 0xA0, 0x00}, \
  {0x971D, 0xA0, 0x00}, \
  {0x971F, 0x20, 0x00}, \
  {0x9721, 0x20, 0x00}, \
  {0x9723, 0x20, 0x00}, \
  {0x9725, 0xA0, 0x00}, \
  {0x9727, 0xA0, 0x00}, \
  {0x9729, 0xA0, 0x00}, \
  {0x972B, 0x20, 0x00}, \
  {0x972D, 0x20, 0x00}, \
  {0x972F, 0x20, 0x00}, \
  {0x9901, 0x35, 0x00}, \
  {0x9903, 0x23, 0x00}, \
  {0x9905, 0x23, 0x00}, \
  {0x9906, 0x00, 0x00}, \
  {0x9907, 0x31, 0x00}, \
  {0x9908, 0x00, 0x00}, \
  {0x9909, 0x1B, 0x00}, \
  {0x990A, 0x00, 0x00}, \
  {0x990B, 0x15, 0x00}, \
  {0x990D, 0x3F, 0x00}, \
  {0x990F, 0x3F, 0x00}, \
  {0x9911, 0x3F, 0x00}, \
  {0x9913, 0x64, 0x00}, \
  {0x9915, 0x64, 0x00}, \
  {0x9917, 0x64, 0x00}, \
  {0x9919, 0x50, 0x00}, \
  {0x991B, 0x60, 0x00}, \
  {0x991D, 0x65, 0x00}, \
  {0x991F, 0x01, 0x00}, \
  {0x9921, 0x01, 0x00}, \
  {0x9923, 0x01, 0x00}, \
  {0x9925, 0x23, 0x00}, \
  {0x9927, 0x23, 0x00}, \
  {0x9929, 0x23, 0x00}, \
  {0x992B, 0x2F, 0x00}, \
  {0x992D, 0x1A, 0x00}, \
  {0x992F, 0x14, 0x00}, \
  {0x9931, 0x3F, 0x00}, \
  {0x9933, 0x3F, 0x00}, \
  {0x9935, 0x3F, 0x00}, \
  {0x9937, 0x6B, 0x00}, \
  {0x9939, 0x7C, 0x00}, \
  {0x993B, 0x81, 0x00}, \
  {0x9943, 0x0F, 0x00}, \
  {0x9945, 0x0F, 0x00}, \
  {0x9947, 0x0F, 0x00}, \
  {0x9949, 0x0F, 0x00}, \
  {0x994B, 0x0F, 0x00}, \
  {0x994D, 0x0F, 0x00}, \
  {0x994F, 0x1E, 0x00}, \
  {0x9951, 0x0F, 0x00}, \
  {0x9953, 0x0B, 0x00}, \
  {0x9955, 0x28, 0x00}, \
  {0x9957, 0x13, 0x00}, \
  {0x9959, 0x0C, 0x00}, \
  {0x995A, 0x00, 0x00}, \
  {0x995B, 0x00, 0x00}, \
  {0x995C, 0x00, 0x00}, \
  {0x996B, 0x00, 0x00}, \
  {0x996D, 0x10, 0x00}, \
  {0x996F, 0x10, 0x00}, \
  {0x9971, 0x20, 0x00}, \
  {0x9973, 0x04, 0x00}, \
  {0x9975, 0x04, 0x00}, \
  {0x9976, 0x0A, 0x00}, \
  {0x9977, 0x0A, 0x00}, \
  {0x9978, 0x0A, 0x00}, \
  {0x99A4, 0x2F, 0x00}, \
  {0x99A5, 0x2F, 0x00}, \
  {0x99A6, 0x2F, 0x00}, \
  {0x99A7, 0x0A, 0x00}, \
  {0x99A8, 0x0A, 0x00}, \
  {0x99A9, 0x0A, 0x00}, \
  {0x99AA, 0x2F, 0x00}, \
  {0x99AB, 0x2F, 0x00}, \
  {0x99AC, 0x2F, 0x00}, \
  {0x99AD, 0x00, 0x00}, \
  {0x99AE, 0x00, 0x00}, \
  {0x99AF, 0x00, 0x00}, \
  {0x99B0, 0x40, 0x00}, \
  {0x99B1, 0x40, 0x00}, \
  {0x99B2, 0x40, 0x00}, \
  {0x99B3, 0x30, 0x00}, \
  {0x99B4, 0x30, 0x00}, \
  {0x99B5, 0x30, 0x00}, \
  {0x99BB, 0x0A, 0x00}, \
  {0x99BD, 0x0A, 0x00}, \
  {0x99BF, 0x0A, 0x00}, \
  {0x99C0, 0x09, 0x00}, \
  {0x99C1, 0x09, 0x00}, \
  {0x99C2, 0x09, 0x00}, \
  {0x99C6, 0x3C, 0x00}, \
  {0x99C7, 0x3C, 0x00}, \
  {0x99C8, 0x3C, 0x00}, \
  {0x99C9, 0xFF, 0x00}, \
  {0x99CA, 0xFF, 0x00}, \
  {0x99CB, 0xFF, 0x00}, \
  {0x9A01, 0x35, 0x00}, \
  {0x9A03, 0x14, 0x00}, \
  {0x9A05, 0x14, 0x00}, \
  {0x9A07, 0x31, 0x00}, \
  {0x9A09, 0x1B, 0x00}, \
  {0x9A0B, 0x15, 0x00}, \
  {0x9A0D, 0x1E, 0x00}, \
  {0x9A0F, 0x1E, 0x00}, \
  {0x9A11, 0x1E, 0x00}, \
  {0x9A13, 0x64, 0x00}, \
  {0x9A15, 0x64, 0x00}, \
  {0x9A17, 0x64, 0x00}, \
  {0x9A19, 0x50, 0x00}, \
  {0x9A1B, 0x60, 0x00}, \
  {0x9A1D, 0x65, 0x00}, \
  {0x9A1F, 0x01, 0x00}, \
  {0x9A21, 0x01, 0x00}, \
  {0x9A23, 0x01, 0x00}, \
  {0x9A25, 0x14, 0x00}, \
  {0x9A27, 0x14, 0x00}, \
  {0x9A29, 0x14, 0x00}, \
  {0x9A2B, 0x2F, 0x00}, \
  {0x9A2D, 0x1A, 0x00}, \
  {0x9A2F, 0x14, 0x00}, \
  {0x9A31, 0x1E, 0x00}, \
  {0x9A33, 0x1E, 0x00}, \
  {0x9A35, 0x1E, 0x00}, \
  {0x9A37, 0x6B, 0x00}, \
  {0x9A39, 0x7C, 0x00}, \
  {0x9A3B, 0x81, 0x00}, \
  {0x9A3D, 0x00, 0x00}, \
  {0x9A3F, 0x00, 0x00}, \
  {0x9A41, 0x00, 0x00}, \
  {0x9A4F, 0x1E, 0x00}, \
  {0x9A51, 0x0F, 0x00}, \
  {0x9A53, 0x0B, 0x00}, \
  {0x9A55, 0x28, 0x00}, \
  {0x9A57, 0x13, 0x00}, \
  {0x9A59, 0x0C, 0x00}, \
  {0x9A5A, 0x00, 0x00}, \
  {0x9A5B, 0x00, 0x00}, \
  {0x9A5C, 0x00, 0x00}, \
  {0x9A6B, 0x00, 0x00}, \
  {0x9A6D, 0x10, 0x00}, \
  {0x9A6F, 0x10, 0x00}, \
  {0x9A71, 0x20, 0x00}, \
  {0x9A73, 0x04, 0x00}, \
  {0x9A75, 0x04, 0x00}, \
  {0x9AA4, 0x3F, 0x00}, \
  {0x9AA5, 0x3F, 0x00}, \
  {0x9AA6, 0x3F, 0x00}, \
  {0x9AA7, 0x0A, 0x00}, \
  {0x9AA8, 0x0A, 0x00}, \
  {0x9AA9, 0x0A, 0x00}, \
  {0x9AAA, 0x25, 0x00}, \
  {0x9AAB, 0x25, 0x00}, \
  {0x9AAC, 0x25, 0x00}, \
  {0x9AAD, 0x00, 0x00}, \
  {0x9AAE, 0x00, 0x00}, \
  {0x9AAF, 0x00, 0x00}, \
  {0x9AB0, 0x40, 0x00}, \
  {0x9AB1, 0x40, 0x00}, \
  {0x9AB2, 0x40, 0x00}, \
  {0x9AB3, 0x30, 0x00}, \
  {0x9AB4, 0x30, 0x00}, \
  {0x9AB5, 0x30, 0x00}, \
  {0x9AB6, 0xA0, 0x00}, \
  {0x9AB7, 0xA0, 0x00}, \
  {0x9AB8, 0xA0, 0x00}, \
  {0x9ABB, 0x0A, 0x00}, \
  {0x9ABD, 0x0A, 0x00}, \
  {0x9ABF, 0x0A, 0x00}, \
  {0x9AC0, 0x09, 0x00}, \
  {0x9AC1, 0x09, 0x00}, \
  {0x9AC2, 0x09, 0x00}, \
  {0x9AC6, 0x2D, 0x00}, \
  {0x9AC7, 0x2D, 0x00}, \
  {0x9AC8, 0x2D, 0x00}, \
  {0x9AC9, 0xFF, 0x00}, \
  {0x9ACA, 0xFF, 0x00}, \
  {0x9ACB, 0xFF, 0x00}, \
  {0x9B01, 0x35, 0x00}, \
  {0x9B03, 0x14, 0x00}, \
  {0x9B05, 0x14, 0x00}, \
  {0x9B07, 0x31, 0x00}, \
  {0x9B09, 0x1B, 0x00}, \
  {0x9B0B, 0x15, 0x00}, \
  {0x9B0D, 0x1E, 0x00}, \
  {0x9B0F, 0x1E, 0x00}, \
  {0x9B11, 0x1E, 0x00}, \
  {0x9B13, 0x64, 0x00}, \
  {0x9B15, 0x64, 0x00}, \
  {0x9B17, 0x64, 0x00}, \
  {0x9B19, 0x50, 0x00}, \
  {0x9B1B, 0x60, 0x00}, \
  {0x9B1D, 0x65, 0x00}, \
  {0x9B1F, 0x01, 0x00}, \
  {0x9B21, 0x01, 0x00}, \
  {0x9B23, 0x01, 0x00}, \
  {0x9B25, 0x14, 0x00}, \
  {0x9B27, 0x14, 0x00}, \
  {0x9B29, 0x14, 0x00}, \
  {0x9B2B, 0x2F, 0x00}, \
  {0x9B2D, 0x1A, 0x00}, \
  {0x9B2F, 0x14, 0x00}, \
  {0x9B31, 0x1E, 0x00}, \
  {0x9B33, 0x1E, 0x00}, \
  {0x9B35, 0x1E, 0x00}, \
  {0x9B37, 0x6B, 0x00}, \
  {0x9B39, 0x7C, 0x00}, \
  {0x9B3B, 0x81, 0x00}, \
  {0x9B43, 0x0F, 0x00}, \
  {0x9B45, 0x0F, 0x00}, \
  {0x9B47, 0x0F, 0x00}, \
  {0x9B49, 0x0F, 0x00}, \
  {0x9B4B, 0x0F, 0x00}, \
  {0x9B4D, 0x0F, 0x00}, \
  {0x9B4F, 0x15, 0x00}, \
  {0x9B51, 0x0B, 0x00}, \
  {0x9B53, 0x08, 0x00}, \
  {0x9B55, 0x1C, 0x00}, \
  {0x9B57, 0x0D, 0x00}, \
  {0x9B59, 0x08, 0x00}, \
  {0x9B5A, 0x00, 0x00}, \
  {0x9B5B, 0x00, 0x00}, \
  {0x9B5C, 0x00, 0x00}, \
  {0x9B6B, 0x00, 0x00}, \
  {0x9B6D, 0x10, 0x00}, \
  {0x9B6F, 0x10, 0x00}, \
  {0x9B71, 0x20, 0x00}, \
  {0x9B73, 0x04, 0x00}, \
  {0x9B75, 0x04, 0x00}, \
  {0x9BB0, 0x40, 0x00}, \
  {0x9BB1, 0x40, 0x00}, \
  {0x9BB2, 0x40, 0x00}, \
  {0x9BB3, 0x30, 0x00}, \
  {0x9BB4, 0x30, 0x00}, \
  {0x9BB5, 0x30, 0x00}, \
  {0x9BBB, 0x0A, 0x00}, \
  {0x9BBD, 0x0A, 0x00}, \
  {0x9BBF, 0x0A, 0x00}, \
  {0x9BC0, 0x09, 0x00}, \
  {0x9BC1, 0x09, 0x00}, \
  {0x9BC2, 0x09, 0x00}, \
  {0x9BC6, 0x18, 0x00}, \
  {0x9BC7, 0x18, 0x00}, \
  {0x9BC8, 0x18, 0x00}, \
  {0x9BC9, 0xFF, 0x00}, \
  {0x9BCA, 0xFF, 0x00}, \
  {0x9BCB, 0xFF, 0x00}, \
  {0x9C01, 0x35, 0x00}, \
  {0x9C03, 0x14, 0x00}, \
  {0x9C05, 0x14, 0x00}, \
  {0x9C07, 0x31, 0x00}, \
  {0x9C09, 0x1B, 0x00}, \
  {0x9C0B, 0x15, 0x00}, \
  {0x9C0D, 0x1E, 0x00}, \
  {0x9C0F, 0x1E, 0x00}, \
  {0x9C11, 0x1E, 0x00}, \
  {0x9C13, 0x64, 0x00}, \
  {0x9C15, 0x64, 0x00}, \
  {0x9C17, 0x64, 0x00}, \
  {0x9C19, 0x50, 0x00}, \
  {0x9C1B, 0x60, 0x00}, \
  {0x9C1D, 0x65, 0x00}, \
  {0x9C1F, 0x01, 0x00}, \
  {0x9C21, 0x01, 0x00}, \
  {0x9C23, 0x01, 0x00}, \
  {0x9C25, 0x14, 0x00}, \
  {0x9C27, 0x14, 0x00}, \
  {0x9C29, 0x14, 0x00}, \
  {0x9C2B, 0x2F, 0x00}, \
  {0x9C2D, 0x1A, 0x00}, \
  {0x9C2F, 0x14, 0x00}, \
  {0x9C31, 0x1E, 0x00}, \
  {0x9C33, 0x1E, 0x00}, \
  {0x9C35, 0x1E, 0x00}, \
  {0x9C37, 0x6B, 0x00}, \
  {0x9C39, 0x7C, 0x00}, \
  {0x9C3B, 0x81, 0x00}, \
  {0x9C3D, 0x00, 0x00}, \
  {0x9C3F, 0x00, 0x00}, \
  {0x9C41, 0x00, 0x00}, \
  {0x9C4F, 0x15, 0x00}, \
  {0x9C51, 0x0B, 0x00}, \
  {0x9C53, 0x08, 0x00}, \
  {0x9C55, 0x1C, 0x00}, \
  {0x9C57, 0x0D, 0x00}, \
  {0x9C59, 0x08, 0x00}, \
  {0x9C5A, 0x00, 0x00}, \
  {0x9C5B, 0x00, 0x00}, \
  {0x9C5C, 0x00, 0x00}, \
  {0x9C6B, 0x00, 0x00}, \
  {0x9C6D, 0x10, 0x00}, \
  {0x9C6F, 0x10, 0x00}, \
  {0x9C71, 0x20, 0x00}, \
  {0x9C73, 0x04, 0x00}, \
  {0x9C75, 0x04, 0x00}, \
  {0x9CB0, 0x50, 0x00}, \
  {0x9CB1, 0x50, 0x00}, \
  {0x9CB2, 0x50, 0x00}, \
  {0x9CB3, 0x40, 0x00}, \
  {0x9CB4, 0x40, 0x00}, \
  {0x9CB5, 0x40, 0x00}, \
  {0x9CBB, 0x0A, 0x00}, \
  {0x9CBD, 0x0A, 0x00}, \
  {0x9CBF, 0x0A, 0x00}, \
  {0x9CC0, 0x09, 0x00}, \
  {0x9CC1, 0x09, 0x00}, \
  {0x9CC2, 0x09, 0x00}, \
  {0x9CC6, 0x18, 0x00}, \
  {0x9CC7, 0x18, 0x00}, \
  {0x9CC8, 0x18, 0x00}, \
  {0x9CC9, 0xFF, 0x00}, \
  {0x9CCA, 0xFF, 0x00}, \
  {0x9CCB, 0xFF, 0x00}, \
  {0x9D01, 0x35, 0x00}, \
  {0x9D03, 0x14, 0x00}, \
  {0x9D05, 0x14, 0x00}, \
  {0x9D07, 0x31, 0x00}, \
  {0x9D09, 0x1B, 0x00}, \
  {0x9D0B, 0x15, 0x00}, \
  {0x9D0D, 0x1E, 0x00}, \
  {0x9D0F, 0x1E, 0x00}, \
  {0x9D11, 0x1E, 0x00}, \
  {0x9D13, 0x64, 0x00}, \
  {0x9D15, 0x64, 0x00}, \
  {0x9D17, 0x64, 0x00}, \
  {0x9D19, 0x50, 0x00}, \
  {0x9D1B, 0x60, 0x00}, \
  {0x9D1D, 0x65, 0x00}, \
  {0x9D25, 0x14, 0x00}, \
  {0x9D27, 0x14, 0x00}, \
  {0x9D29, 0x14, 0x00}, \
  {0x9D2B, 0x2F, 0x00}, \
  {0x9D2D, 0x1A, 0x00}, \
  {0x9D2F, 0x14, 0x00}, \
  {0x9D31, 0x1E, 0x00}, \
  {0x9D33, 0x1E, 0x00}, \
  {0x9D35, 0x1E, 0x00}, \
  {0x9D37, 0x6B, 0x00}, \
  {0x9D39, 0x7C, 0x00}, \
  {0x9D3B, 0x81, 0x00}, \
  {0x9D3D, 0x00, 0x00}, \
  {0x9D3F, 0x00, 0x00}, \
  {0x9D41, 0x00, 0x00}, \
  {0x9D4F, 0x1E, 0x00}, \
  {0x9D51, 0x0F, 0x00}, \
  {0x9D53, 0x0B, 0x00}, \
  {0x9D55, 0x28, 0x00}, \
  {0x9D57, 0x13, 0x00}, \
  {0x9D59, 0x0C, 0x00}, \
  {0x9D5B, 0x35, 0x00}, \
  {0x9D5D, 0x14, 0x00}, \
  {0x9D5F, 0x14, 0x00}, \
  {0x9D61, 0x35, 0x00}, \
  {0x9D63, 0x14, 0x00}, \
  {0x9D65, 0x14, 0x00}, \
  {0x9D67, 0x31, 0x00}, \
  {0x9D69, 0x1B, 0x00}, \
  {0x9D6B, 0x15, 0x00}, \
  {0x9D6D, 0x31, 0x00}, \
  {0x9D6F, 0x1B, 0x00}, \
  {0x9D71, 0x15, 0x00}, \
  {0x9D73, 0x1E, 0x00}, \
  {0x9D75, 0x1E, 0x00}, \
  {0x9D77, 0x1E, 0x00}, \
  {0x9D79, 0x1E, 0x00}, \
  {0x9D7B, 0x1E, 0x00}, \
  {0x9D7D, 0x1E, 0x00}, \
  {0x9D7F, 0x64, 0x00}, \
  {0x9D81, 0x64, 0x00}, \
  {0x9D83, 0x64, 0x00}, \
  {0x9D85, 0x64, 0x00}, \
  {0x9D87, 0x64, 0x00}, \
  {0x9D89, 0x64, 0x00}, \
  {0x9D8B, 0x50, 0x00}, \
  {0x9D8D, 0x60, 0x00}, \
  {0x9D8F, 0x65, 0x00}, \
  {0x9D91, 0x50, 0x00}, \
  {0x9D93, 0x60, 0x00}, \
  {0x9D95, 0x65, 0x00}, \
  {0x9D97, 0x01, 0x00}, \
  {0x9D99, 0x01, 0x00}, \
  {0x9D9B, 0x01, 0x00}, \
  {0x9D9D, 0x01, 0x00}, \
  {0x9D9F, 0x01, 0x00}, \
  {0x9DA1, 0x01, 0x00}, \
  {0x9E01, 0x35, 0x00}, \
  {0x9E03, 0x14, 0x00}, \
  {0x9E05, 0x14, 0x00}, \
  {0x9E07, 0x31, 0x00}, \
  {0x9E09, 0x1B, 0x00}, \
  {0x9E0B, 0x15, 0x00}, \
  {0x9E0D, 0x1E, 0x00}, \
  {0x9E0F, 0x1E, 0x00}, \
  {0x9E11, 0x1E, 0x00}, \
  {0x9E13, 0x64, 0x00}, \
  {0x9E15, 0x64, 0x00}, \
  {0x9E17, 0x64, 0x00}, \
  {0x9E19, 0x50, 0x00}, \
  {0x9E1B, 0x60, 0x00}, \
  {0x9E1D, 0x65, 0x00}, \
  {0x9E25, 0x14, 0x00}, \
  {0x9E27, 0x14, 0x00}, \
  {0x9E29, 0x14, 0x00}, \
  {0x9E2B, 0x2F, 0x00}, \
  {0x9E2D, 0x1A, 0x00}, \
  {0x9E2F, 0x14, 0x00}, \
  {0x9E31, 0x1E, 0x00}, \
  {0x9E33, 0x1E, 0x00}, \
  {0x9E35, 0x1E, 0x00}, \
  {0x9E37, 0x6B, 0x00}, \
  {0x9E39, 0x7C, 0x00}, \
  {0x9E3B, 0x81, 0x00}, \
  {0x9E3D, 0x00, 0x00}, \
  {0x9E3F, 0x00, 0x00}, \
  {0x9E41, 0x00, 0x00}, \
  {0x9E4F, 0x15, 0x00}, \
  {0x9E51, 0x0B, 0x00}, \
  {0x9E53, 0x08, 0x00}, \
  {0x9E55, 0x1C, 0x00}, \
  {0x9E57, 0x0D, 0x00}, \
  {0x9E59, 0x08, 0x00}, \
  {0x9E5B, 0x35, 0x00}, \
  {0x9E5D, 0x14, 0x00}, \
  {0x9E5F, 0x14, 0x00}, \
  {0x9E61, 0x35, 0x00}, \
  {0x9E63, 0x14, 0x00}, \
  {0x9E65, 0x14, 0x00}, \
  {0x9E67, 0x31, 0x00}, \
  {0x9E69, 0x1B, 0x00}, \
  {0x9E6B, 0x15, 0x00}, \
  {0x9E6D, 0x31, 0x00}, \
  {0x9E6F, 0x1B, 0x00}, \
  {0x9E71, 0x15, 0x00}, \
  {0x9E73, 0x1E, 0x00}, \
  {0x9E75, 0x1E, 0x00}, \
  {0x9E77, 0x1E, 0x00}, \
  {0x9E79, 0x1E, 0x00}, \
  {0x9E7B, 0x1E, 0x00}, \
  {0x9E7D, 0x1E, 0x00}, \
  {0x9E7F, 0x64, 0x00}, \
  {0x9E81, 0x64, 0x00}, \
  {0x9E83, 0x64, 0x00}, \
  {0x9E85, 0x64, 0x00}, \
  {0x9E87, 0x64, 0x00}, \
  {0x9E89, 0x64, 0x00}, \
  {0x9E8B, 0x50, 0x00}, \
  {0x9E8D, 0x60, 0x00}, \
  {0x9E8F, 0x65, 0x00}, \
  {0x9E91, 0x50, 0x00}, \
  {0x9E93, 0x60, 0x00}, \
  {0x9E95, 0x65, 0x00}, \
  {0x9E97, 0x01, 0x00}, \
  {0x9E99, 0x01, 0x00}, \
  {0x9E9B, 0x01, 0x00}, \
  {0x9E9D, 0x01, 0x00}, \
  {0x9E9F, 0x01, 0x00}, \
  {0x9EA1, 0x01, 0x00}, \
  {0x9F01, 0x14, 0x00}, \
  {0x9F03, 0x14, 0x00}, \
  {0x9F05, 0x14, 0x00}, \
  {0x9F07, 0x14, 0x00}, \
  {0x9F09, 0x14, 0x00}, \
  {0x9F0B, 0x14, 0x00}, \
  {0x9F0D, 0x2F, 0x00}, \
  {0x9F0F, 0x1A, 0x00}, \
  {0x9F11, 0x14, 0x00}, \
  {0x9F13, 0x2F, 0x00}, \
  {0x9F15, 0x1A, 0x00}, \
  {0x9F17, 0x14, 0x00}, \
  {0x9F19, 0x1E, 0x00}, \
  {0x9F1B, 0x1E, 0x00}, \
  {0x9F1D, 0x1E, 0x00}, \
  {0x9F1F, 0x1E, 0x00}, \
  {0x9F21, 0x1E, 0x00}, \
  {0x9F23, 0x1E, 0x00}, \
  {0x9F25, 0x6B, 0x00}, \
  {0x9F27, 0x7C, 0x00}, \
  {0x9F29, 0x81, 0x00}, \
  {0x9F2B, 0x6B, 0x00}, \
  {0x9F2D, 0x7C, 0x00}, \
  {0x9F2F, 0x81, 0x00}, \
  {0x9F31, 0x00, 0x00}, \
  {0x9F33, 0x00, 0x00}, \
  {0x9F35, 0x00, 0x00}, \
  {0x9F37, 0x00, 0x00}, \
  {0x9F39, 0x00, 0x00}, \
  {0x9F3B, 0x00, 0x00}, \
  {0x9F3C, 0x00, 0x00}, \
  {0x9F3D, 0x00, 0x00}, \
  {0x9F3E, 0x00, 0x00}, \
  {0x9F41, 0x00, 0x00}, \
  {0x9F43, 0x10, 0x00}, \
  {0x9F45, 0x10, 0x00}, \
  {0x9F47, 0x20, 0x00}, \
  {0x9F49, 0x04, 0x00}, \
  {0x9F4B, 0x04, 0x00}, \
  {0x9F4D, 0x00, 0x00}, \
  {0x9F4F, 0x10, 0x00}, \
  {0x9F51, 0x10, 0x00}, \
  {0x9F53, 0x00, 0x00}, \
  {0x9F55, 0x10, 0x00}, \
  {0x9F57, 0x10, 0x00}, \
  {0x9F59, 0x20, 0x00}, \
  {0x9F5B, 0x04, 0x00}, \
  {0x9F5D, 0x04, 0x00}, \
  {0x9F5F, 0x20, 0x00}, \
  {0x9F61, 0x04, 0x00}, \
  {0x9F63, 0x04, 0x00}, \
  {0x9F77, 0x1E, 0x00}, \
  {0x9F79, 0x0F, 0x00}, \
  {0x9F7B, 0x0B, 0x00}, \
  {0x9F7D, 0x1E, 0x00}, \
  {0x9F7F, 0x0F, 0x00}, \
  {0x9F81, 0x0B, 0x00}, \
  {0x9F83, 0x28, 0x00}, \
  {0x9F85, 0x13, 0x00}, \
  {0x9F87, 0x0C, 0x00}, \
  {0x9F89, 0x28, 0x00}, \
  {0x9F8B, 0x13, 0x00}, \
  {0x9F8D, 0x0C, 0x00}, \
  {0x9FA6, 0x3F, 0x00}, \
  {0x9FA7, 0x3F, 0x00}, \
  {0x9FA8, 0x3F, 0x00}, \
  {0x9FA9, 0x0A, 0x00}, \
  {0x9FAA, 0x0A, 0x00}, \
  {0x9FAB, 0x0A, 0x00}, \
  {0x9FAC, 0x25, 0x00}, \
  {0x9FAD, 0x25, 0x00}, \
  {0x9FAE, 0x25, 0x00}, \
  {0x9FAF, 0x00, 0x00}, \
  {0x9FB0, 0x00, 0x00}, \
  {0x9FB1, 0x00, 0x00}, \
  {0xA001, 0x14, 0x00}, \
  {0xA003, 0x14, 0x00}, \
  {0xA005, 0x14, 0x00}, \
  {0xA007, 0x14, 0x00}, \
  {0xA009, 0x14, 0x00}, \
  {0xA00B, 0x14, 0x00}, \
  {0xA00D, 0x2F, 0x00}, \
  {0xA00F, 0x1A, 0x00}, \
  {0xA011, 0x14, 0x00}, \
  {0xA013, 0x2F, 0x00}, \
  {0xA015, 0x1A, 0x00}, \
  {0xA017, 0x14, 0x00}, \
  {0xA019, 0x1E, 0x00}, \
  {0xA01B, 0x1E, 0x00}, \
  {0xA01D, 0x1E, 0x00}, \
  {0xA01F, 0x1E, 0x00}, \
  {0xA021, 0x1E, 0x00}, \
  {0xA023, 0x1E, 0x00}, \
  {0xA025, 0x6B, 0x00}, \
  {0xA027, 0x7C, 0x00}, \
  {0xA029, 0x81, 0x00}, \
  {0xA02B, 0x6B, 0x00}, \
  {0xA02D, 0x7C, 0x00}, \
  {0xA02F, 0x81, 0x00}, \
  {0xA031, 0x00, 0x00}, \
  {0xA033, 0x00, 0x00}, \
  {0xA035, 0x00, 0x00}, \
  {0xA037, 0x00, 0x00}, \
  {0xA039, 0x00, 0x00}, \
  {0xA03B, 0x00, 0x00}, \
  {0xA03C, 0x00, 0x00}, \
  {0xA03D, 0x00, 0x00}, \
  {0xA03E, 0x00, 0x00}, \
  {0xA041, 0x00, 0x00}, \
  {0xA043, 0x10, 0x00}, \
  {0xA045, 0x10, 0x00}, \
  {0xA047, 0x20, 0x00}, \
  {0xA049, 0x04, 0x00}, \
  {0xA04B, 0x04, 0x00}, \
  {0xA04D, 0x00, 0x00}, \
  {0xA04F, 0x10, 0x00}, \
  {0xA051, 0x10, 0x00}, \
  {0xA053, 0x00, 0x00}, \
  {0xA055, 0x10, 0x00}, \
  {0xA057, 0x10, 0x00}, \
  {0xA059, 0x20, 0x00}, \
  {0xA05B, 0x04, 0x00}, \
  {0xA05D, 0x04, 0x00}, \
  {0xA05F, 0x20, 0x00}, \
  {0xA061, 0x04, 0x00}, \
  {0xA063, 0x04, 0x00}, \
  {0xA077, 0x15, 0x00}, \
  {0xA079, 0x0B, 0x00}, \
  {0xA07B, 0x08, 0x00}, \
  {0xA07D, 0x15, 0x00}, \
  {0xA07F, 0x0B, 0x00}, \
  {0xA081, 0x08, 0x00}, \
  {0xA083, 0x1C, 0x00}, \
  {0xA085, 0x0D, 0x00}, \
  {0xA087, 0x08, 0x00}, \
  {0xA089, 0x1C, 0x00}, \
  {0xA08B, 0x0D, 0x00}, \
  {0xA08D, 0x08, 0x00}, \
  {0xB2B2, 0x01, 0x00}, \
  {0xC068, 0x00, 0x00}, \
  /* PDAF Flexiable Window Enable */ \
  {0x3166, 0x01, 0x00}, \
  {0x3167, 0x01, 0x00}, \
  {0x3168, 0x01, 0x00}, \
  {0x3169, 0x01, 0x00}, \
  {0x316a, 0x01, 0x00}, \
  {0x316b, 0x01, 0x00}, \
  {0x316c, 0x01, 0x00}, \
  {0x316d, 0x01, 0x00}, \
}

#ifdef FULL_RES_30FPS
#define RES0_REG_ARRAY \
{ \
  {0x0101, FLIP_MIRROR_SETTING, 0x00}, \
  {0x0114, 0x03, 0x00}, \
  {0x0220, 0x00, 0x00}, \
  {0x0221, 0x11, 0x00}, \
  {0x0222, 0x10, 0x00}, \
  {0x0340, 0x0E, 0x00}, \
  {0x0341, 0x18, 0x00}, \
  {0x0342, 0x15, 0x00}, \
  {0x0343, 0xA0, 0x00}, \
  {0x0344, 0x00, 0x00}, \
  {0x0345, 0x00, 0x00}, \
  {0x0346, 0x00, 0x00}, \
  {0x0347, 0x00, 0x00}, \
  {0x0348, 0x12, 0x00}, \
  {0x0349, 0x2F, 0x00}, \
  {0x034A, 0x0D, 0x00}, \
  {0x034B, 0xA7, 0x00}, \
  {0x0381, 0x01, 0x00}, \
  {0x0383, 0x01, 0x00}, \
  {0x0385, 0x01, 0x00}, \
  {0x0387, 0x01, 0x00}, \
  {0x0900, 0x00, 0x00}, \
  {0x0901, 0x11, 0x00}, \
  {0x0902, 0x00, 0x00}, \
  {0x3010, 0x65, 0x00}, \
  {0x3011, 0x01, 0x00}, \
  {0x30C0, 0x11, 0x00}, \
  {0x300D, 0x00, 0x00}, \
  {0x30FD, 0x00, 0x00}, \
  {0x8493, 0x00, 0x00}, \
  {0x90D7, 0x19, 0x00}, \
  {0x0112, 0x0A, 0x00}, \
  {0x0113, 0x0A, 0x00}, \
  {0x034C, 0x12, 0x00}, \
  {0x034D, 0x30, 0x00}, \
  {0x034E, 0x0D, 0x00}, \
  {0x034F, 0xA8, 0x00}, \
  {0x0401, 0x00, 0x00}, \
  {0x0404, 0x00, 0x00}, \
  {0x0405, 0x10, 0x00}, \
  {0x0408, 0x00, 0x00}, \
  {0x0409, 0x00, 0x00}, \
  {0x040A, 0x00, 0x00}, \
  {0x040B, 0x00, 0x00}, \
  {0x040C, 0x12, 0x00}, \
  {0x040D, 0x30, 0x00}, \
  {0x040E, 0x0D, 0x00}, \
  {0x040F, 0xA8, 0x00}, \
  {0x0301, 0x05, 0x00}, \
  {0x0303, 0x02, 0x00}, \
  {0x0305, 0x04, 0x00}, \
  {0x0306, 0x00, 0x00}, \
  {0x0307, 0xFA, 0x00}, \
  {0x0309, 0x0A, 0x00}, \
  {0x030B, 0x01, 0x00}, \
  {0x030D, 0x0F, 0x00}, \
  {0x030E, 0x03, 0x00}, \
  {0x030F, 0x41, 0x00}, \
  {0x0310, 0x00, 0x00}, \
  {0x0820, 0x17, 0x00}, \
  {0x0821, 0x70, 0x00}, \
  {0x0822, 0x00, 0x00}, \
  {0x0823, 0x00, 0x00}, \
  {0x0202, 0x0E, 0x00}, \
  {0x0203, 0x0E, 0x00}, \
  {0x0224, 0x01, 0x00}, \
  {0x0225, 0xF4, 0x00}, \
  {0x0204, 0x00, 0x00}, \
  {0x0205, 0x00, 0x00}, \
  {0x0216, 0x00, 0x00}, \
  {0x0217, 0x00, 0x00}, \
  {0x020E, 0x01, 0x00}, \
  {0x020F, 0x00, 0x00}, \
  {0x0210, 0x01, 0x00}, \
  {0x0211, 0x00, 0x00}, \
  {0x0212, 0x01, 0x00}, \
  {0x0213, 0x00, 0x00}, \
  {0x0214, 0x01, 0x00}, \
  {0x0215, 0x00, 0x00}, \
  {0x3058, 0x00, 0x00}, \
  {0x3013, 0x04, 0x00}, \
  {0x3103, 0x01, 0x00}, \
  /*PDAF AREA MODE*/ \
  {0x3108, PD_AREA_X_OFFSET>>8, 0x00}, \
  {0x3109, PD_AREA_X_OFFSET&0xFF, 0x00}, \
  {0x310a, PD_AREA_Y_OFFSET>>8, 0x00}, \
  {0x310b, PD_AREA_Y_OFFSET&0xFF, 0x00}, \
  {0x310c, PD_AREA_WIDTH>>8, 0x00}, \
  {0x310d, PD_AREA_WIDTH&0xFF, 0x00}, \
  {0x310e, PD_AREA_HEIGHT>>8, 0x00}, \
  {0x310f, PD_AREA_HEIGHT&0xFF, 0x00}, \
  {0x3165, PD_AREA_MODE, 0x00}, \
  /* PDAF Flexible Windows */ \
  {0x3110, PD_WIN_X_S_0>>8, 0x00}, \
  {0x3111, PD_WIN_X_S_0&0xFF, 0x00}, \
  {0x3112, PD_WIN_Y_S_0>>8, 0x00}, \
  {0x3113, PD_WIN_Y_S_0&0xFF, 0x00}, \
  {0x3114, PD_WIN_X_E_0>>8, 0x00}, \
  {0x3115, PD_WIN_X_E_0&0xFF, 0x00}, \
  {0x3116, PD_WIN_Y_E_0>>8, 0x00}, \
  {0x3117, PD_WIN_Y_E_0&0xFF, 0x00}, \
  {0x3118, PD_WIN_X_S_1>>8, 0x00}, \
  {0x3119, PD_WIN_X_S_1&0xFF, 0x00}, \
  {0x311a, PD_WIN_Y_S_1>>8, 0x00}, \
  {0x311b, PD_WIN_Y_S_1&0xFF, 0x00}, \
  {0x311c, PD_WIN_X_E_1>>8, 0x00}, \
  {0x311d, PD_WIN_X_E_1&0xFF, 0x00}, \
  {0x311e, PD_WIN_Y_E_1>>8, 0x00}, \
  {0x311f, PD_WIN_Y_E_1&0xFF, 0x00}, \
  {0x3120, PD_WIN_X_S_2>>8, 0x00}, \
  {0x3121, PD_WIN_X_S_2&0xFF, 0x00}, \
  {0x3122, PD_WIN_Y_S_2>>8, 0x00}, \
  {0x3123, PD_WIN_Y_S_2&0xFF, 0x00}, \
  {0x3124, PD_WIN_X_E_2>>8, 0x00}, \
  {0x3125, PD_WIN_X_E_2&0xFF, 0x00}, \
  {0x3126, PD_WIN_Y_E_2>>8, 0x00}, \
  {0x3127, PD_WIN_Y_E_2&0xFF, 0x00}, \
  {0x3128, PD_WIN_X_S_3>>8, 0x00}, \
  {0x3129, PD_WIN_X_S_3&0xFF, 0x00}, \
  {0x312a, PD_WIN_Y_S_3>>8, 0x00}, \
  {0x312b, PD_WIN_Y_S_3&0xFF, 0x00}, \
  {0x312c, PD_WIN_X_E_3>>8, 0x00}, \
  {0x312d, PD_WIN_X_E_3&0xFF, 0x00}, \
  {0x312e, PD_WIN_Y_E_3>>8, 0x00}, \
  {0x312f, PD_WIN_Y_E_3&0xFF, 0x00}, \
  {0x3130, PD_WIN_X_S_4>>8, 0x00}, \
  {0x3131, PD_WIN_X_S_4&0xFF, 0x00}, \
  {0x3132, PD_WIN_Y_S_4>>8, 0x00}, \
  {0x3133, PD_WIN_Y_S_4&0xFF, 0x00}, \
  {0x3134, PD_WIN_X_E_4>>8, 0x00}, \
  {0x3135, PD_WIN_X_E_4&0xFF, 0x00}, \
  {0x3136, PD_WIN_Y_E_4>>8, 0x00}, \
  {0x3137, PD_WIN_Y_E_4&0xFF, 0x00}, \
  {0x3138, PD_WIN_X_S_5>>8, 0x00}, \
  {0x3139, PD_WIN_X_S_5&0xFF, 0x00}, \
  {0x313a, PD_WIN_Y_S_5>>8, 0x00}, \
  {0x313b, PD_WIN_Y_S_5&0xFF, 0x00}, \
  {0x313c, PD_WIN_X_E_5>>8, 0x00}, \
  {0x313d, PD_WIN_X_E_5&0xFF, 0x00}, \
  {0x313e, PD_WIN_Y_E_5>>8, 0x00}, \
  {0x313f, PD_WIN_Y_E_5&0xFF, 0x00}, \
}
#else
#define RES0_REG_ARRAY \
{ \
  {0x0101, FLIP_MIRROR_SETTING, 0x00}, \
  {0x0114, 0x03, 0x00}, \
  {0x0220, 0x00, 0x00}, \
  {0x0221, 0x11, 0x00}, \
  {0x0222, 0x10, 0x00}, \
  {0x0340, 0x0D, 0x00}, \
  {0x0341, 0xD8, 0x00}, \
  {0x0342, 0x15, 0x00}, \
  {0x0343, 0xA0, 0x00}, \
  {0x0344, 0x00, 0x00}, \
  {0x0345, 0x00, 0x00}, \
  {0x0346, 0x00, 0x00}, \
  {0x0347, 0x00, 0x00}, \
  {0x0348, 0x12, 0x00}, \
  {0x0349, 0x2F, 0x00}, \
  {0x034A, 0x0D, 0x00}, \
  {0x034B, 0xA7, 0x00}, \
  {0x0381, 0x01, 0x00}, \
  {0x0383, 0x01, 0x00}, \
  {0x0385, 0x01, 0x00}, \
  {0x0387, 0x01, 0x00}, \
  {0x0900, 0x00, 0x00}, \
  {0x0901, 0x11, 0x00}, \
  {0x0902, 0x00, 0x00}, \
  {0x3010, 0x65, 0x00}, \
  {0x3011, 0x01, 0x00}, \
  {0x30C0, 0x11, 0x00}, \
  {0x300D, 0x00, 0x00}, \
  {0x30FD, 0x00, 0x00}, \
  {0x8493, 0x00, 0x00}, \
  {0x90D7, 0x19, 0x00}, \
  {0x0112, 0x0A, 0x00}, \
  {0x0113, 0x0A, 0x00}, \
  {0x034C, 0x12, 0x00}, \
  {0x034D, 0x30, 0x00}, \
  {0x034E, 0x0D, 0x00}, \
  {0x034F, 0xA8, 0x00}, \
  {0x0401, 0x00, 0x00}, \
  {0x0404, 0x00, 0x00}, \
  {0x0405, 0x10, 0x00}, \
  {0x0408, 0x00, 0x00}, \
  {0x0409, 0x00, 0x00}, \
  {0x040A, 0x00, 0x00}, \
  {0x040B, 0x00, 0x00}, \
  {0x040C, 0x12, 0x00}, \
  {0x040D, 0x30, 0x00}, \
  {0x040E, 0x0D, 0x00}, \
  {0x040F, 0xA8, 0x00}, \
  {0x0301, 0x05, 0x00}, \
  {0x0303, 0x02, 0x00}, \
  {0x0305, 0x04, 0x00}, \
  {0x0306, 0x00, 0x00}, \
  {0x0307, 0xC8, 0x00}, \
  {0x0309, 0x0A, 0x00}, \
  {0x030B, 0x01, 0x00}, \
  {0x030D, 0x0F, 0x00}, \
  {0x030E, 0x03, 0x00}, \
  {0x030F, 0x41, 0x00}, \
  {0x0310, 0x00, 0x00}, \
  {0x0820, 0x12, 0x00}, \
  {0x0821, 0xC0, 0x00}, \
  {0x0822, 0x00, 0x00}, \
  {0x0823, 0x00, 0x00}, \
  {0x0202, 0x0D, 0x00}, \
  {0x0203, 0xCE, 0x00}, \
  {0x0224, 0x01, 0x00}, \
  {0x0225, 0xF4, 0x00}, \
  {0x0204, 0x00, 0x00}, \
  {0x0205, 0x00, 0x00}, \
  {0x0216, 0x00, 0x00}, \
  {0x0217, 0x00, 0x00}, \
  {0x020E, 0x01, 0x00}, \
  {0x020F, 0x00, 0x00}, \
  {0x0210, 0x01, 0x00}, \
  {0x0211, 0x00, 0x00}, \
  {0x0212, 0x01, 0x00}, \
  {0x0213, 0x00, 0x00}, \
  {0x0214, 0x01, 0x00}, \
  {0x0215, 0x00, 0x00}, \
  {0x3058, 0x00, 0x00}, \
  {0x3013, 0x04, 0x00}, \
  {0x3103, 0x01, 0x00}, \
  /*PDAF AREA MODE*/ \
  {0x3108, PD_AREA_X_OFFSET>>8, 0x00}, \
  {0x3109, PD_AREA_X_OFFSET&0xFF, 0x00}, \
  {0x310a, PD_AREA_Y_OFFSET>>8, 0x00}, \
  {0x310b, PD_AREA_Y_OFFSET&0xFF, 0x00}, \
  {0x310c, PD_AREA_WIDTH>>8, 0x00}, \
  {0x310d, PD_AREA_WIDTH&0xFF, 0x00}, \
  {0x310e, PD_AREA_HEIGHT>>8, 0x00}, \
  {0x310f, PD_AREA_HEIGHT&0xFF, 0x00}, \
  {0x3165, PD_AREA_MODE, 0x00}, \
  /* PDAF Flexible Windows */ \
  {0x3110, PD_WIN_X_S_0>>8, 0x00}, \
  {0x3111, PD_WIN_X_S_0&0xFF, 0x00}, \
  {0x3112, PD_WIN_Y_S_0>>8, 0x00}, \
  {0x3113, PD_WIN_Y_S_0&0xFF, 0x00}, \
  {0x3114, PD_WIN_X_E_0>>8, 0x00}, \
  {0x3115, PD_WIN_X_E_0&0xFF, 0x00}, \
  {0x3116, PD_WIN_Y_E_0>>8, 0x00}, \
  {0x3117, PD_WIN_Y_E_0&0xFF, 0x00}, \
  {0x3118, PD_WIN_X_S_1>>8, 0x00}, \
  {0x3119, PD_WIN_X_S_1&0xFF, 0x00}, \
  {0x311a, PD_WIN_Y_S_1>>8, 0x00}, \
  {0x311b, PD_WIN_Y_S_1&0xFF, 0x00}, \
  {0x311c, PD_WIN_X_E_1>>8, 0x00}, \
  {0x311d, PD_WIN_X_E_1&0xFF, 0x00}, \
  {0x311e, PD_WIN_Y_E_1>>8, 0x00}, \
  {0x311f, PD_WIN_Y_E_1&0xFF, 0x00}, \
  {0x3120, PD_WIN_X_S_2>>8, 0x00}, \
  {0x3121, PD_WIN_X_S_2&0xFF, 0x00}, \
  {0x3122, PD_WIN_Y_S_2>>8, 0x00}, \
  {0x3123, PD_WIN_Y_S_2&0xFF, 0x00}, \
  {0x3124, PD_WIN_X_E_2>>8, 0x00}, \
  {0x3125, PD_WIN_X_E_2&0xFF, 0x00}, \
  {0x3126, PD_WIN_Y_E_2>>8, 0x00}, \
  {0x3127, PD_WIN_Y_E_2&0xFF, 0x00}, \
  {0x3128, PD_WIN_X_S_3>>8, 0x00}, \
  {0x3129, PD_WIN_X_S_3&0xFF, 0x00}, \
  {0x312a, PD_WIN_Y_S_3>>8, 0x00}, \
  {0x312b, PD_WIN_Y_S_3&0xFF, 0x00}, \
  {0x312c, PD_WIN_X_E_3>>8, 0x00}, \
  {0x312d, PD_WIN_X_E_3&0xFF, 0x00}, \
  {0x312e, PD_WIN_Y_E_3>>8, 0x00}, \
  {0x312f, PD_WIN_Y_E_3&0xFF, 0x00}, \
  {0x3130, PD_WIN_X_S_4>>8, 0x00}, \
  {0x3131, PD_WIN_X_S_4&0xFF, 0x00}, \
  {0x3132, PD_WIN_Y_S_4>>8, 0x00}, \
  {0x3133, PD_WIN_Y_S_4&0xFF, 0x00}, \
  {0x3134, PD_WIN_X_E_4>>8, 0x00}, \
  {0x3135, PD_WIN_X_E_4&0xFF, 0x00}, \
  {0x3136, PD_WIN_Y_E_4>>8, 0x00}, \
  {0x3137, PD_WIN_Y_E_4&0xFF, 0x00}, \
  {0x3138, PD_WIN_X_S_5>>8, 0x00}, \
  {0x3139, PD_WIN_X_S_5&0xFF, 0x00}, \
  {0x313a, PD_WIN_Y_S_5>>8, 0x00}, \
  {0x313b, PD_WIN_Y_S_5&0xFF, 0x00}, \
  {0x313c, PD_WIN_X_E_5>>8, 0x00}, \
  {0x313d, PD_WIN_X_E_5&0xFF, 0x00}, \
  {0x313e, PD_WIN_Y_E_5>>8, 0x00}, \
  {0x313f, PD_WIN_Y_E_5&0xFF, 0x00}, \
}
#endif

#define RES1_REG_ARRAY \
{ \
  {0x0101, FLIP_MIRROR_SETTING, 0x00}, \
  {0x0114, 0x03, 0x00}, \
  {0x0220, 0x00, 0x00}, \
  {0x0221, 0x11, 0x00}, \
  {0x0222, 0x10, 0x00}, \
  {0x0340, 0x0B, 0x00}, \
  {0x0341, 0x48, 0x00}, \
  {0x0342, 0x15, 0x00}, \
  {0x0343, 0xA0, 0x00}, \
  {0x0344, 0x00, 0x00}, \
  {0x0345, 0x00, 0x00}, \
  {0x0346, 0x01, 0x00}, \
  {0x0347, 0xBC, 0x00}, \
  {0x0348, 0x12, 0x00}, \
  {0x0349, 0x2F, 0x00}, \
  {0x034A, 0x0B, 0x00}, \
  {0x034B, 0xEB, 0x00}, \
  {0x0381, 0x01, 0x00}, \
  {0x0383, 0x01, 0x00}, \
  {0x0385, 0x01, 0x00}, \
  {0x0387, 0x01, 0x00}, \
  {0x0900, 0x00, 0x00}, \
  {0x0901, 0x11, 0x00}, \
  {0x0902, 0x00, 0x00}, \
  {0x3010, 0x65, 0x00}, \
  {0x3011, 0x01, 0x00}, \
  {0x30C0, 0x11, 0x00}, \
  {0x300D, 0x00, 0x00}, \
  {0x30FD, 0x00, 0x00}, \
  {0x8493, 0x00, 0x00}, \
  {0x90D7, 0x19, 0x00}, \
  {0x0112, 0x0A, 0x00}, \
  {0x0113, 0x0A, 0x00}, \
  {0x034C, 0x12, 0x00}, \
  {0x034D, 0x30, 0x00}, \
  {0x034E, 0x0A, 0x00}, \
  {0x034F, 0x30, 0x00}, \
  {0x0401, 0x00, 0x00}, \
  {0x0404, 0x00, 0x00}, \
  {0x0405, 0x10, 0x00}, \
  {0x0408, 0x00, 0x00}, \
  {0x0409, 0x00, 0x00}, \
  {0x040A, 0x00, 0x00}, \
  {0x040B, 0x00, 0x00}, \
  {0x040C, 0x12, 0x00}, \
  {0x040D, 0x30, 0x00}, \
  {0x040E, 0x0A, 0x00}, \
  {0x040F, 0x30, 0x00}, \
  {0x0301, 0x05, 0x00}, \
  {0x0303, 0x02, 0x00}, \
  {0x0305, 0x04, 0x00}, \
  {0x0306, 0x00, 0x00}, \
  {0x0307, 0xC8, 0x00}, \
  {0x0309, 0x0A, 0x00}, \
  {0x030B, 0x01, 0x00}, \
  {0x030D, 0x0F, 0x00}, \
  {0x030E, 0x03, 0x00}, \
  {0x030F, 0x41, 0x00}, \
  {0x0310, 0x00, 0x00}, \
  {0x0820, 0x12, 0x00}, \
  {0x0821, 0xC0, 0x00}, \
  {0x0822, 0x00, 0x00}, \
  {0x0823, 0x00, 0x00}, \
  {0x0202, 0x0B, 0x00}, \
  {0x0203, 0x3E, 0x00}, \
  {0x0224, 0x01, 0x00}, \
  {0x0225, 0xF4, 0x00}, \
  {0x0204, 0x00, 0x00}, \
  {0x0205, 0x00, 0x00}, \
  {0x0216, 0x00, 0x00}, \
  {0x0217, 0x00, 0x00}, \
  {0x020E, 0x01, 0x00}, \
  {0x020F, 0x00, 0x00}, \
  {0x0210, 0x01, 0x00}, \
  {0x0211, 0x00, 0x00}, \
  {0x0212, 0x01, 0x00}, \
  {0x0213, 0x00, 0x00}, \
  {0x0214, 0x01, 0x00}, \
  {0x0215, 0x00, 0x00}, \
  {0x3058, 0x00, 0x00}, \
  {0x3013, 0x04, 0x00}, \
  {0x3103, 0x01, 0x00}, \
  /* PDAF settings */ \
  {0x3108, PD_AREA_X_OFFSET>>8, 0x00}, \
  {0x3109, PD_AREA_X_OFFSET&0xFF, 0x00}, \
  {0x310a, (int)(SCALE_Y(2608)*PD_AREA_Y_OFFSET)>>8, 0x00}, \
  {0x310b, (int)(SCALE_Y(2608)*PD_AREA_Y_OFFSET)&0xFF, 0x00}, \
  {0x310c, PD_AREA_WIDTH>>8, 0x00}, \
  {0x310d, PD_AREA_WIDTH&0xFF, 0x00}, \
  {0x310e, (int)(SCALE_Y(2608)*PD_AREA_HEIGHT)>>8, 0x00}, \
  {0x310f, (int)(SCALE_Y(2608)*PD_AREA_HEIGHT)&0xFF, 0x00}, \
  {0x3110, PD_WIN_X_S_0>>8, 0x00}, \
  {0x3111, PD_WIN_X_S_0&0xFF, 0x00}, \
  {0x3112, (int)(SCALE_Y(2608)*PD_WIN_Y_S_0)>>8, 0x00}, \
  {0x3113, (int)(SCALE_Y(2608)*PD_WIN_Y_S_0)&0xFF, 0x00}, \
  {0x3114, PD_WIN_X_E_0>>8, 0x00}, \
  {0x3115, PD_WIN_X_E_0&0xFF, 0x00}, \
  {0x3116, (int)(SCALE_Y(2608)*PD_WIN_Y_E_0)>>8, 0x00}, \
  {0x3117, (int)(SCALE_Y(2608)*PD_WIN_Y_E_0)&0xFF, 0x00}, \
  {0x3118, PD_WIN_X_S_1>>8, 0x00}, \
  {0x3119, PD_WIN_X_S_1&0xFF, 0x00}, \
  {0x311a, (int)(SCALE_Y(2608)*PD_WIN_Y_S_1)>>8, 0x00}, \
  {0x311b, (int)(SCALE_Y(2608)*PD_WIN_Y_S_1)&0xFF, 0x00}, \
  {0x311c, PD_WIN_X_E_1>>8, 0x00}, \
  {0x311d, PD_WIN_X_E_1&0xFF, 0x00}, \
  {0x311e, (int)(SCALE_Y(2608)*PD_WIN_Y_E_1)>>8, 0x00}, \
  {0x311f, (int)(SCALE_Y(2608)*PD_WIN_Y_E_1)&0xFF, 0x00}, \
  {0x3120, PD_WIN_X_S_2>>8, 0x00}, \
  {0x3121, PD_WIN_X_S_2&0xFF, 0x00}, \
  {0x3122, (int)(SCALE_Y(2608)*PD_WIN_Y_S_2)>>8, 0x00}, \
  {0x3123, (int)(SCALE_Y(2608)*PD_WIN_Y_S_2)&0xFF, 0x00}, \
  {0x3124, PD_WIN_X_E_2>>8, 0x00}, \
  {0x3125, PD_WIN_X_E_2&0xFF, 0x00}, \
  {0x3126, (int)(SCALE_Y(2608)*PD_WIN_Y_E_2)>>8, 0x00}, \
  {0x3127, (int)(SCALE_Y(2608)*PD_WIN_Y_E_2)&0xFF, 0x00}, \
  {0x3128, PD_WIN_X_S_3>>8, 0x00}, \
  {0x3129, PD_WIN_X_S_3&0xFF, 0x00}, \
  {0x312a, (int)(SCALE_Y(2608)*PD_WIN_Y_S_3)>>8, 0x00}, \
  {0x312b, (int)(SCALE_Y(2608)*PD_WIN_Y_S_3)&0xFF, 0x00}, \
  {0x312c, PD_WIN_X_E_3>>8, 0x00}, \
  {0x312d, PD_WIN_X_E_3&0xFF, 0x00}, \
  {0x312e, (int)(SCALE_Y(2608)*PD_WIN_Y_E_3)>>8, 0x00}, \
  {0x312f, (int)(SCALE_Y(2608)*PD_WIN_Y_E_3)&0xFF, 0x00}, \
  {0x3130, PD_WIN_X_S_4>>8, 0x00}, \
  {0x3131, PD_WIN_X_S_4&0xFF, 0x00}, \
  {0x3132, (int)(SCALE_Y(2608)*PD_WIN_Y_S_4)>>8, 0x00}, \
  {0x3133, (int)(SCALE_Y(2608)*PD_WIN_Y_S_4)&0xFF, 0x00}, \
  {0x3134, PD_WIN_X_E_4>>8, 0x00}, \
  {0x3135, PD_WIN_X_E_4&0xFF, 0x00}, \
  {0x3136, (int)(SCALE_Y(2608)*PD_WIN_Y_E_4)>>8, 0x00}, \
  {0x3137, (int)(SCALE_Y(2608)*PD_WIN_Y_E_4)&0xFF, 0x00}, \
  {0x3138, PD_WIN_X_S_5>>8, 0x00}, \
  {0x3139, PD_WIN_X_S_5&0xFF, 0x00}, \
  {0x313a, (int)(SCALE_Y(2608)*PD_WIN_Y_S_5)>>8, 0x00}, \
  {0x313b, (int)(SCALE_Y(2608)*PD_WIN_Y_S_5)&0xFF, 0x00}, \
  {0x313c, PD_WIN_X_E_5>>8, 0x00}, \
  {0x313d, PD_WIN_X_E_5&0xFF, 0x00}, \
  {0x313e, (int)(SCALE_Y(2608)*PD_WIN_Y_E_5)>>8, 0x00}, \
  {0x313f, (int)(SCALE_Y(2608)*PD_WIN_Y_E_5)&0xFF, 0x00}, \
}

#define RES2_REG_ARRAY \
{ \
  {0x0101, FLIP_MIRROR_SETTING, 0x00}, \
  {0x0114, 0x03, 0x00}, \
  {0x0220, 0x00, 0x00}, \
  {0x0221, 0x11, 0x00}, \
  {0x0222, 0x10, 0x00}, \
  {0x0340, 0x0B, 0x00}, \
  {0x0341, 0x48, 0x00}, \
  {0x0342, 0x15, 0x00}, \
  {0x0343, 0xA0, 0x00}, \
  {0x0344, 0x00, 0x00}, \
  {0x0345, 0x00, 0x00}, \
  {0x0346, 0x00, 0x00}, \
  {0x0347, 0x00, 0x00}, \
  {0x0348, 0x12, 0x00}, \
  {0x0349, 0x2F, 0x00}, \
  {0x034A, 0x0D, 0x00}, \
  {0x034B, 0xA7, 0x00}, \
  {0x0381, 0x01, 0x00}, \
  {0x0383, 0x01, 0x00}, \
  {0x0385, 0x01, 0x00}, \
  {0x0387, 0x01, 0x00}, \
  {0x0900, 0x01, 0x00}, \
  {0x0901, 0x22, 0x00}, \
  {0x0902, 0x02, 0x00}, \
  {0x3010, 0x65, 0x00}, \
  {0x3011, 0x01, 0x00}, \
  {0x30C0, 0x11, 0x00}, \
  {0x300D, 0x00, 0x00}, \
  {0x30FD, 0x00, 0x00}, \
  {0x8493, 0x00, 0x00}, \
  {0x90D7, 0x19, 0x00}, \
  {0x0112, 0x0A, 0x00}, \
  {0x0113, 0x0A, 0x00}, \
  {0x034C, 0x09, 0x00}, \
  {0x034D, 0x18, 0x00}, \
  {0x034E, 0x06, 0x00}, \
  {0x034F, 0xD4, 0x00}, \
  {0x0401, 0x00, 0x00}, \
  {0x0404, 0x00, 0x00}, \
  {0x0405, 0x10, 0x00}, \
  {0x0408, 0x00, 0x00}, \
  {0x0409, 0x00, 0x00}, \
  {0x040A, 0x00, 0x00}, \
  {0x040B, 0x00, 0x00}, \
  {0x040C, 0x09, 0x00}, \
  {0x040D, 0x18, 0x00}, \
  {0x040E, 0x06, 0x00}, \
  {0x040F, 0xD4, 0x00}, \
  {0x0301, 0x05, 0x00}, \
  {0x0303, 0x02, 0x00}, \
  {0x0305, 0x04, 0x00}, \
  {0x0306, 0x00, 0x00}, \
  {0x0307, 0xC8, 0x00}, \
  {0x0309, 0x0A, 0x00}, \
  {0x030B, 0x01, 0x00}, \
  {0x030D, 0x0F, 0x00}, \
  {0x030E, 0x03, 0x00}, \
  {0x030F, 0x41, 0x00}, \
  {0x0310, 0x00, 0x00}, \
  {0x0820, 0x12, 0x00}, \
  {0x0821, 0xC0, 0x00}, \
  {0x0822, 0x00, 0x00}, \
  {0x0823, 0x00, 0x00}, \
  {0x0202, 0x0B, 0x00}, \
  {0x0203, 0x3E, 0x00}, \
  {0x0224, 0x01, 0x00}, \
  {0x0225, 0xF4, 0x00}, \
  {0x0204, 0x00, 0x00}, \
  {0x0205, 0x00, 0x00}, \
  {0x0216, 0x00, 0x00}, \
  {0x0217, 0x00, 0x00}, \
  {0x020E, 0x01, 0x00}, \
  {0x020F, 0x00, 0x00}, \
  {0x0210, 0x01, 0x00}, \
  {0x0211, 0x00, 0x00}, \
  {0x0212, 0x01, 0x00}, \
  {0x0213, 0x00, 0x00}, \
  {0x0214, 0x01, 0x00}, \
  {0x0215, 0x00, 0x00}, \
  {0x3058, 0x00, 0x00}, \
  {0x3013, 0x04, 0x00}, \
  {0x3103, 0x01, 0x00}, \
  /* PDAF settings */ \
  {0x3108, (int)(SCALE_X(2328)*PD_AREA_X_OFFSET)>>8, 0x00}, \
  {0x3109, (int)(SCALE_X(2328)*PD_AREA_X_OFFSET)&0xFF, 0x00}, \
  {0x310a, (int)(SCALE_Y(1748)*PD_AREA_Y_OFFSET)>>8, 0x00}, \
  {0x310b, (int)(SCALE_Y(1748)*PD_AREA_Y_OFFSET)&0xFF, 0x00}, \
  {0x310c, (int)(SCALE_X(2328)*PD_AREA_WIDTH)>>8, 0x00}, \
  {0x310d, (int)(SCALE_X(2328)*PD_AREA_WIDTH)&0xFF, 0x00}, \
  {0x310e, (int)(SCALE_Y(1748)*PD_AREA_HEIGHT)>>8, 0x00}, \
  {0x310f, (int)(SCALE_Y(1748)*PD_AREA_HEIGHT)&0xFF, 0x00}, \
  {0x3110, (int)(SCALE_X(2328)*PD_WIN_X_S_0)>>8, 0x00}, \
  {0x3111, (int)(SCALE_X(2328)*PD_WIN_X_S_0)&0xFF, 0x00}, \
  {0x3112, (int)(SCALE_Y(1748)*PD_WIN_Y_S_0)>>8, 0x00}, \
  {0x3113, (int)(SCALE_Y(1748)*PD_WIN_Y_S_0)&0xFF, 0x00}, \
  {0x3114, (int)(SCALE_X(2328)*PD_WIN_X_E_0)>>8, 0x00}, \
  {0x3115, (int)(SCALE_X(2328)*PD_WIN_X_E_0)&0xFF, 0x00}, \
  {0x3116, (int)(SCALE_Y(1748)*PD_WIN_Y_E_0)>>8, 0x00}, \
  {0x3117, (int)(SCALE_Y(1748)*PD_WIN_Y_E_0)&0xFF, 0x00}, \
  {0x3118, (int)(SCALE_X(2328)*PD_WIN_X_S_1)>>8, 0x00}, \
  {0x3119, (int)(SCALE_X(2328)*PD_WIN_X_S_1)&0xFF, 0x00}, \
  {0x311a, (int)(SCALE_Y(1748)*PD_WIN_Y_S_1)>>8, 0x00}, \
  {0x311b, (int)(SCALE_Y(1748)*PD_WIN_Y_S_1)&0xFF, 0x00}, \
  {0x311c, (int)(SCALE_X(2328)*PD_WIN_X_E_1)>>8, 0x00}, \
  {0x311d, (int)(SCALE_X(2328)*PD_WIN_X_E_1)&0xFF, 0x00}, \
  {0x311e, (int)(SCALE_Y(1748)*PD_WIN_Y_E_1)>>8, 0x00}, \
  {0x311f, (int)(SCALE_Y(1748)*PD_WIN_Y_E_1)&0xFF, 0x00}, \
  {0x3120, (int)(SCALE_X(2328)*PD_WIN_X_S_2)>>8, 0x00}, \
  {0x3121, (int)(SCALE_X(2328)*PD_WIN_X_S_2)&0xFF, 0x00}, \
  {0x3122, (int)(SCALE_Y(1748)*PD_WIN_Y_S_2)>>8, 0x00}, \
  {0x3123, (int)(SCALE_Y(1748)*PD_WIN_Y_S_2)&0xFF, 0x00}, \
  {0x3124, (int)(SCALE_X(2328)*PD_WIN_X_E_2)>>8, 0x00}, \
  {0x3125, (int)(SCALE_X(2328)*PD_WIN_X_E_2)&0xFF, 0x00}, \
  {0x3126, (int)(SCALE_Y(1748)*PD_WIN_Y_E_2)>>8, 0x00}, \
  {0x3127, (int)(SCALE_Y(1748)*PD_WIN_Y_E_2)&0xFF, 0x00}, \
  {0x3128, (int)(SCALE_X(2328)*PD_WIN_X_S_3)>>8, 0x00}, \
  {0x3129, (int)(SCALE_X(2328)*PD_WIN_X_S_3)&0xFF, 0x00}, \
  {0x312a, (int)(SCALE_Y(1748)*PD_WIN_Y_S_3)>>8, 0x00}, \
  {0x312b, (int)(SCALE_Y(1748)*PD_WIN_Y_S_3)&0xFF, 0x00}, \
  {0x312c, (int)(SCALE_X(2328)*PD_WIN_X_E_3)>>8, 0x00}, \
  {0x312d, (int)(SCALE_X(2328)*PD_WIN_X_E_3)&0xFF, 0x00}, \
  {0x312e, (int)(SCALE_Y(1748)*PD_WIN_Y_E_3)>>8, 0x00}, \
  {0x312f, (int)(SCALE_Y(1748)*PD_WIN_Y_E_3)&0xFF, 0x00}, \
  {0x3130, (int)(SCALE_X(2328)*PD_WIN_X_S_4)>>8, 0x00}, \
  {0x3131, (int)(SCALE_X(2328)*PD_WIN_X_S_4)&0xFF, 0x00}, \
  {0x3132, (int)(SCALE_Y(1748)*PD_WIN_Y_S_4)>>8, 0x00}, \
  {0x3133, (int)(SCALE_Y(1748)*PD_WIN_Y_S_4)&0xFF, 0x00}, \
  {0x3134, (int)(SCALE_X(2328)*PD_WIN_X_E_4)>>8, 0x00}, \
  {0x3135, (int)(SCALE_X(2328)*PD_WIN_X_E_4)&0xFF, 0x00}, \
  {0x3136, (int)(SCALE_Y(1748)*PD_WIN_Y_E_4)>>8, 0x00}, \
  {0x3137, (int)(SCALE_Y(1748)*PD_WIN_Y_E_4)&0xFF, 0x00}, \
  {0x3138, (int)(SCALE_X(2328)*PD_WIN_X_S_5)>>8, 0x00}, \
  {0x3139, (int)(SCALE_X(2328)*PD_WIN_X_S_5)&0xFF, 0x00}, \
  {0x313a, (int)(SCALE_Y(1748)*PD_WIN_Y_S_5)>>8, 0x00}, \
  {0x313b, (int)(SCALE_Y(1748)*PD_WIN_Y_S_5)&0xFF, 0x00}, \
  {0x313c, (int)(SCALE_X(2328)*PD_WIN_X_E_5)>>8, 0x00}, \
  {0x313d, (int)(SCALE_X(2328)*PD_WIN_X_E_5)&0xFF, 0x00}, \
  {0x313e, (int)(SCALE_Y(1748)*PD_WIN_Y_E_5)>>8, 0x00}, \
  {0x313f, (int)(SCALE_Y(1748)*PD_WIN_Y_E_5)&0xFF, 0x00}, \
}

#define RES3_REG_ARRAY \
{ \
  {0x0101, FLIP_MIRROR_SETTING, 0x00}, \
  {0x0114, 0x03, 0x00}, \
  {0x0220, 0x00, 0x00}, \
  {0x0221, 0x11, 0x00}, \
  {0x0222, 0x10, 0x00}, \
  {0x0340, 0x05, 0x00}, \
  {0x0341, 0xA4, 0x00}, \
  {0x0342, 0x15, 0x00}, \
  {0x0343, 0xA0, 0x00}, \
  {0x0344, 0x00, 0x00}, \
  {0x0345, 0x00, 0x00}, \
  {0x0346, 0x01, 0x00}, \
  {0x0347, 0xBC, 0x00}, \
  {0x0348, 0x12, 0x00}, \
  {0x0349, 0x2F, 0x00}, \
  {0x034A, 0x0B, 0x00}, \
  {0x034B, 0xEB, 0x00}, \
  {0x0381, 0x01, 0x00}, \
  {0x0383, 0x01, 0x00}, \
  {0x0385, 0x01, 0x00}, \
  {0x0387, 0x01, 0x00}, \
  {0x0900, 0x01, 0x00}, \
  {0x0901, 0x22, 0x00}, \
  {0x0902, 0x02, 0x00}, \
  {0x3010, 0x65, 0x00}, \
  {0x3011, 0x01, 0x00}, \
  {0x30C0, 0x11, 0x00}, \
  {0x300D, 0x00, 0x00}, \
  {0x30FD, 0x00, 0x00}, \
  {0x8493, 0x00, 0x00}, \
  {0x90D7, 0x19, 0x00}, \
  {0x0112, 0x0A, 0x00}, \
  {0x0113, 0x0A, 0x00}, \
  {0x034C, 0x09, 0x00}, \
  {0x034D, 0x18, 0x00}, \
  {0x034E, 0x05, 0x00}, \
  {0x034F, 0x18, 0x00}, \
  {0x0401, 0x00, 0x00}, \
  {0x0404, 0x00, 0x00}, \
  {0x0405, 0x10, 0x00}, \
  {0x0408, 0x00, 0x00}, \
  {0x0409, 0x00, 0x00}, \
  {0x040A, 0x00, 0x00}, \
  {0x040B, 0x00, 0x00}, \
  {0x040C, 0x09, 0x00}, \
  {0x040D, 0x18, 0x00}, \
  {0x040E, 0x05, 0x00}, \
  {0x040F, 0x18, 0x00}, \
  {0x0301, 0x05, 0x00}, \
  {0x0303, 0x02, 0x00}, \
  {0x0305, 0x04, 0x00}, \
  {0x0306, 0x00, 0x00}, \
  {0x0307, 0xC8, 0x00}, \
  {0x0309, 0x0A, 0x00}, \
  {0x030B, 0x01, 0x00}, \
  {0x030D, 0x0F, 0x00}, \
  {0x030E, 0x03, 0x00}, \
  {0x030F, 0x41, 0x00}, \
  {0x0310, 0x00, 0x00}, \
  {0x0820, 0x12, 0x00}, \
  {0x0821, 0xC0, 0x00}, \
  {0x0822, 0x00, 0x00}, \
  {0x0823, 0x00, 0x00}, \
  {0x0202, 0x05, 0x00}, \
  {0x0203, 0x9A, 0x00}, \
  {0x0224, 0x01, 0x00}, \
  {0x0225, 0xF4, 0x00}, \
  {0x0204, 0x00, 0x00}, \
  {0x0205, 0x00, 0x00}, \
  {0x0216, 0x00, 0x00}, \
  {0x0217, 0x00, 0x00}, \
  {0x020E, 0x01, 0x00}, \
  {0x020F, 0x00, 0x00}, \
  {0x0210, 0x01, 0x00}, \
  {0x0211, 0x00, 0x00}, \
  {0x0212, 0x01, 0x00}, \
  {0x0213, 0x00, 0x00}, \
  {0x0214, 0x01, 0x00}, \
  {0x0215, 0x00, 0x00}, \
  {0x3058, 0x00, 0x00}, \
  {0x3013, 0x04, 0x00}, \
  {0x3103, 0x01, 0x00}, \
  /* PDAF settings */ \
  {0x3108, (int)(SCALE_X(2328)*PD_AREA_X_OFFSET)>>8, 0x00}, \
  {0x3109, (int)(SCALE_X(2328)*PD_AREA_X_OFFSET)&0xFF, 0x00}, \
  {0x310a, (int)(SCALE_Y(1304)*PD_AREA_Y_OFFSET)>>8, 0x00}, \
  {0x310b, (int)(SCALE_Y(1304)*PD_AREA_Y_OFFSET)&0xFF, 0x00}, \
  {0x310c, (int)(SCALE_X(2328)*PD_AREA_WIDTH)>>8, 0x00}, \
  {0x310d, (int)(SCALE_X(2328)*PD_AREA_WIDTH)&0xFF, 0x00}, \
  {0x310e, (int)(SCALE_Y(1304)*PD_AREA_HEIGHT)>>8, 0x00}, \
  {0x310f, (int)(SCALE_Y(1304)*PD_AREA_HEIGHT)&0xFF, 0x00}, \
  {0x3110, (int)(SCALE_X(2328)*PD_WIN_X_S_0)>>8, 0x00}, \
  {0x3111, (int)(SCALE_X(2328)*PD_WIN_X_S_0)&0xFF, 0x00}, \
  {0x3112, (int)(SCALE_Y(1304)*PD_WIN_Y_S_0)>>8, 0x00}, \
  {0x3113, (int)(SCALE_Y(1304)*PD_WIN_Y_S_0)&0xFF, 0x00}, \
  {0x3114, (int)(SCALE_X(2328)*PD_WIN_X_E_0)>>8, 0x00}, \
  {0x3115, (int)(SCALE_X(2328)*PD_WIN_X_E_0)&0xFF, 0x00}, \
  {0x3116, (int)(SCALE_Y(1304)*PD_WIN_Y_E_0)>>8, 0x00}, \
  {0x3117, (int)(SCALE_Y(1304)*PD_WIN_Y_E_0)&0xFF, 0x00}, \
  {0x3118, (int)(SCALE_X(2328)*PD_WIN_X_S_1)>>8, 0x00}, \
  {0x3119, (int)(SCALE_X(2328)*PD_WIN_X_S_1)&0xFF, 0x00}, \
  {0x311a, (int)(SCALE_Y(1304)*PD_WIN_Y_S_1)>>8, 0x00}, \
  {0x311b, (int)(SCALE_Y(1304)*PD_WIN_Y_S_1)&0xFF, 0x00}, \
  {0x311c, (int)(SCALE_X(2328)*PD_WIN_X_E_1)>>8, 0x00}, \
  {0x311d, (int)(SCALE_X(2328)*PD_WIN_X_E_1)&0xFF, 0x00}, \
  {0x311e, (int)(SCALE_Y(1304)*PD_WIN_Y_E_1)>>8, 0x00}, \
  {0x311f, (int)(SCALE_Y(1304)*PD_WIN_Y_E_1)&0xFF, 0x00}, \
  {0x3120, (int)(SCALE_X(2328)*PD_WIN_X_S_2)>>8, 0x00}, \
  {0x3121, (int)(SCALE_X(2328)*PD_WIN_X_S_2)&0xFF, 0x00}, \
  {0x3122, (int)(SCALE_Y(1304)*PD_WIN_Y_S_2)>>8, 0x00}, \
  {0x3123, (int)(SCALE_Y(1304)*PD_WIN_Y_S_2)&0xFF, 0x00}, \
  {0x3124, (int)(SCALE_X(2328)*PD_WIN_X_E_2)>>8, 0x00}, \
  {0x3125, (int)(SCALE_X(2328)*PD_WIN_X_E_2)&0xFF, 0x00}, \
  {0x3126, (int)(SCALE_Y(1304)*PD_WIN_Y_E_2)>>8, 0x00}, \
  {0x3127, (int)(SCALE_Y(1304)*PD_WIN_Y_E_2)&0xFF, 0x00}, \
  {0x3128, (int)(SCALE_X(2328)*PD_WIN_X_S_3)>>8, 0x00}, \
  {0x3129, (int)(SCALE_X(2328)*PD_WIN_X_S_3)&0xFF, 0x00}, \
  {0x312a, (int)(SCALE_Y(1304)*PD_WIN_Y_S_3)>>8, 0x00}, \
  {0x312b, (int)(SCALE_Y(1304)*PD_WIN_Y_S_3)&0xFF, 0x00}, \
  {0x312c, (int)(SCALE_X(2328)*PD_WIN_X_E_3)>>8, 0x00}, \
  {0x312d, (int)(SCALE_X(2328)*PD_WIN_X_E_3)&0xFF, 0x00}, \
  {0x312e, (int)(SCALE_Y(1304)*PD_WIN_Y_E_3)>>8, 0x00}, \
  {0x312f, (int)(SCALE_Y(1304)*PD_WIN_Y_E_3)&0xFF, 0x00}, \
  {0x3130, (int)(SCALE_X(2328)*PD_WIN_X_S_4)>>8, 0x00}, \
  {0x3131, (int)(SCALE_X(2328)*PD_WIN_X_S_4)&0xFF, 0x00}, \
  {0x3132, (int)(SCALE_Y(1304)*PD_WIN_Y_S_4)>>8, 0x00}, \
  {0x3133, (int)(SCALE_Y(1304)*PD_WIN_Y_S_4)&0xFF, 0x00}, \
  {0x3134, (int)(SCALE_X(2328)*PD_WIN_X_E_4)>>8, 0x00}, \
  {0x3135, (int)(SCALE_X(2328)*PD_WIN_X_E_4)&0xFF, 0x00}, \
  {0x3136, (int)(SCALE_Y(1304)*PD_WIN_Y_E_4)>>8, 0x00}, \
  {0x3137, (int)(SCALE_Y(1304)*PD_WIN_Y_E_4)&0xFF, 0x00}, \
  {0x3138, (int)(SCALE_X(2328)*PD_WIN_X_S_5)>>8, 0x00}, \
  {0x3139, (int)(SCALE_X(2328)*PD_WIN_X_S_5)&0xFF, 0x00}, \
  {0x313a, (int)(SCALE_Y(1304)*PD_WIN_Y_S_5)>>8, 0x00}, \
  {0x313b, (int)(SCALE_Y(1304)*PD_WIN_Y_S_5)&0xFF, 0x00}, \
  {0x313c, (int)(SCALE_X(2328)*PD_WIN_X_E_5)>>8, 0x00}, \
  {0x313d, (int)(SCALE_X(2328)*PD_WIN_X_E_5)&0xFF, 0x00}, \
  {0x313e, (int)(SCALE_Y(1304)*PD_WIN_Y_E_5)>>8, 0x00}, \
  {0x313f, (int)(SCALE_Y(1304)*PD_WIN_Y_E_5)&0xFF, 0x00}, \
}

#define RES4_REG_ARRAY \
{ \
  {0x0101, FLIP_MIRROR_SETTING, 0x00}, \
  {0x0114, 0x03, 0x00}, \
  {0x0220, 0x00, 0x00}, \
  {0x0221, 0x11, 0x00}, \
  {0x0222, 0x10, 0x00}, \
  {0x0340, 0x03, 0x00}, \
  {0x0341, 0xC0, 0x00}, \
  {0x0342, 0x15, 0x00}, \
  {0x0343, 0xA0, 0x00}, \
  {0x0344, 0x00, 0x00}, \
  {0x0345, 0x00, 0x00}, \
  {0x0346, 0x01, 0x00}, \
  {0x0347, 0xEC, 0x00}, \
  {0x0348, 0x12, 0x00}, \
  {0x0349, 0x2F, 0x00}, \
  {0x034A, 0x0B, 0x00}, \
  {0x034B, 0xAF, 0x00}, \
  {0x0381, 0x01, 0x00}, \
  {0x0383, 0x01, 0x00}, \
  {0x0385, 0x03, 0x00}, \
  {0x0387, 0x03, 0x00}, \
  {0x0900, 0x01, 0x00}, \
  {0x0901, 0x22, 0x00}, \
  {0x0902, 0x00, 0x00}, \
  {0x3010, 0x65, 0x00}, \
  {0x3011, 0x01, 0x00}, \
  {0x30C0, 0x11, 0x00}, \
  {0x300D, 0x01, 0x00}, \
  {0x30FD, 0x00, 0x00}, \
  {0x8493, 0x00, 0x00}, \
  {0x90D7, 0x19, 0x00}, \
  {0x0112, 0x0A, 0x00}, \
  {0x0113, 0x0A, 0x00}, \
  {0x034C, 0x05, 0x00}, \
  {0x034D, 0xC4, 0x00}, \
  {0x034E, 0x03, 0x00}, \
  {0x034F, 0x42, 0x00}, \
  {0x0401, 0x01, 0x00}, \
  {0x0404, 0x00, 0x00}, \
  {0x0405, 0x18, 0x00}, \
  {0x0408, 0x00, 0x00}, \
  {0x0409, 0x38, 0x00}, \
  {0x040A, 0x00, 0x00}, \
  {0x040B, 0x00, 0x00}, \
  {0x040C, 0x08, 0x00}, \
  {0x040D, 0xA8, 0x00}, \
  {0x040E, 0x03, 0x00}, \
  {0x040F, 0x42, 0x00}, \
  {0x0301, 0x05, 0x00}, \
  {0x0303, 0x02, 0x00}, \
  {0x0305, 0x04, 0x00}, \
  {0x0306, 0x00, 0x00}, \
  {0x0307, 0xC8, 0x00}, \
  {0x0309, 0x0A, 0x00}, \
  {0x030B, 0x01, 0x00}, \
  {0x030D, 0x0F, 0x00}, \
  {0x030E, 0x03, 0x00}, \
  {0x030F, 0x41, 0x00}, \
  {0x0310, 0x00, 0x00}, \
  {0x0820, 0x12, 0x00}, \
  {0x0821, 0xC0, 0x00}, \
  {0x0822, 0x00, 0x00}, \
  {0x0823, 0x00, 0x00}, \
  {0x0202, 0x03, 0x00}, \
  {0x0203, 0xB6, 0x00}, \
  {0x0224, 0x01, 0x00}, \
  {0x0225, 0xF4, 0x00}, \
  {0x0204, 0x00, 0x00}, \
  {0x0205, 0x00, 0x00}, \
  {0x0216, 0x00, 0x00}, \
  {0x0217, 0x00, 0x00}, \
  {0x020E, 0x01, 0x00}, \
  {0x020F, 0x00, 0x00}, \
  {0x0210, 0x01, 0x00}, \
  {0x0211, 0x00, 0x00}, \
  {0x0212, 0x01, 0x00}, \
  {0x0213, 0x00, 0x00}, \
  {0x0214, 0x01, 0x00}, \
  {0x0215, 0x00, 0x00}, \
  {0x3058, 0x00, 0x00}, \
  {0x3013, 0x04, 0x00}, \
  {0x3103, 0x01, 0x00}, \
  /* PDAF settings */ \
  {0x3108, (int)(SCALE_X(1476)*PD_AREA_X_OFFSET)>>8, 0x00}, \
  {0x3109, (int)(SCALE_X(1476)*PD_AREA_X_OFFSET)&0xFF, 0x00}, \
  {0x310a, (int)(SCALE_Y(834)*PD_AREA_Y_OFFSET)>>8, 0x00}, \
  {0x310b, (int)(SCALE_Y(834)*PD_AREA_Y_OFFSET)&0xFF, 0x00}, \
  {0x310c, (int)(SCALE_X(1476)*PD_AREA_WIDTH)>>8, 0x00}, \
  {0x310d, (int)(SCALE_X(1476)*PD_AREA_WIDTH)&0xFF, 0x00}, \
  {0x310e, (int)(SCALE_Y(834)*PD_AREA_HEIGHT)>>8, 0x00}, \
  {0x310f, (int)(SCALE_Y(834)*PD_AREA_HEIGHT)&0xFF, 0x00}, \
  {0x3110, (int)(SCALE_X(1476)*PD_WIN_X_S_0)>>8, 0x00}, \
  {0x3111, (int)(SCALE_X(1476)*PD_WIN_X_S_0)&0xFF, 0x00}, \
  {0x3112, (int)(SCALE_Y(834)*PD_WIN_Y_S_0)>>8, 0x00}, \
  {0x3113, (int)(SCALE_Y(834)*PD_WIN_Y_S_0)&0xFF, 0x00}, \
  {0x3114, (int)(SCALE_X(1476)*PD_WIN_X_E_0)>>8, 0x00}, \
  {0x3115, (int)(SCALE_X(1476)*PD_WIN_X_E_0)&0xFF, 0x00}, \
  {0x3116, (int)(SCALE_Y(834)*PD_WIN_Y_E_0)>>8, 0x00}, \
  {0x3117, (int)(SCALE_Y(834)*PD_WIN_Y_E_0)&0xFF, 0x00}, \
  {0x3118, (int)(SCALE_X(1476)*PD_WIN_X_S_1)>>8, 0x00}, \
  {0x3119, (int)(SCALE_X(1476)*PD_WIN_X_S_1)&0xFF, 0x00}, \
  {0x311a, (int)(SCALE_Y(834)*PD_WIN_Y_S_1)>>8, 0x00}, \
  {0x311b, (int)(SCALE_Y(834)*PD_WIN_Y_S_1)&0xFF, 0x00}, \
  {0x311c, (int)(SCALE_X(1476)*PD_WIN_X_E_1)>>8, 0x00}, \
  {0x311d, (int)(SCALE_X(1476)*PD_WIN_X_E_1)&0xFF, 0x00}, \
  {0x311e, (int)(SCALE_Y(834)*PD_WIN_Y_E_1)>>8, 0x00}, \
  {0x311f, (int)(SCALE_Y(834)*PD_WIN_Y_E_1)&0xFF, 0x00}, \
  {0x3120, (int)(SCALE_X(1476)*PD_WIN_X_S_2)>>8, 0x00}, \
  {0x3121, (int)(SCALE_X(1476)*PD_WIN_X_S_2)&0xFF, 0x00}, \
  {0x3122, (int)(SCALE_Y(834)*PD_WIN_Y_S_2)>>8, 0x00}, \
  {0x3123, (int)(SCALE_Y(834)*PD_WIN_Y_S_2)&0xFF, 0x00}, \
  {0x3124, (int)(SCALE_X(1476)*PD_WIN_X_E_2)>>8, 0x00}, \
  {0x3125, (int)(SCALE_X(1476)*PD_WIN_X_E_2)&0xFF, 0x00}, \
  {0x3126, (int)(SCALE_Y(834)*PD_WIN_Y_E_2)>>8, 0x00}, \
  {0x3127, (int)(SCALE_Y(834)*PD_WIN_Y_E_2)&0xFF, 0x00}, \
  {0x3128, (int)(SCALE_X(1476)*PD_WIN_X_S_3)>>8, 0x00}, \
  {0x3129, (int)(SCALE_X(1476)*PD_WIN_X_S_3)&0xFF, 0x00}, \
  {0x312a, (int)(SCALE_Y(834)*PD_WIN_Y_S_3)>>8, 0x00}, \
  {0x312b, (int)(SCALE_Y(834)*PD_WIN_Y_S_3)&0xFF, 0x00}, \
  {0x312c, (int)(SCALE_X(1476)*PD_WIN_X_E_3)>>8, 0x00}, \
  {0x312d, (int)(SCALE_X(1476)*PD_WIN_X_E_3)&0xFF, 0x00}, \
  {0x312e, (int)(SCALE_Y(834)*PD_WIN_Y_E_3)>>8, 0x00}, \
  {0x312f, (int)(SCALE_Y(834)*PD_WIN_Y_E_3)&0xFF, 0x00}, \
  {0x3130, (int)(SCALE_X(1476)*PD_WIN_X_S_4)>>8, 0x00}, \
  {0x3131, (int)(SCALE_X(1476)*PD_WIN_X_S_4)&0xFF, 0x00}, \
  {0x3132, (int)(SCALE_Y(834)*PD_WIN_Y_S_4)>>8, 0x00}, \
  {0x3133, (int)(SCALE_Y(834)*PD_WIN_Y_S_4)&0xFF, 0x00}, \
  {0x3134, (int)(SCALE_X(1476)*PD_WIN_X_E_4)>>8, 0x00}, \
  {0x3135, (int)(SCALE_X(1476)*PD_WIN_X_E_4)&0xFF, 0x00}, \
  {0x3136, (int)(SCALE_Y(834)*PD_WIN_Y_E_4)>>8, 0x00}, \
  {0x3137, (int)(SCALE_Y(834)*PD_WIN_Y_E_4)&0xFF, 0x00}, \
  {0x3138, (int)(SCALE_X(1476)*PD_WIN_X_S_5)>>8, 0x00}, \
  {0x3139, (int)(SCALE_X(1476)*PD_WIN_X_S_5)&0xFF, 0x00}, \
  {0x313a, (int)(SCALE_Y(834)*PD_WIN_Y_S_5)>>8, 0x00}, \
  {0x313b, (int)(SCALE_Y(834)*PD_WIN_Y_S_5)&0xFF, 0x00}, \
  {0x313c, (int)(SCALE_X(1476)*PD_WIN_X_E_5)>>8, 0x00}, \
  {0x313d, (int)(SCALE_X(1476)*PD_WIN_X_E_5)&0xFF, 0x00}, \
  {0x313e, (int)(SCALE_Y(834)*PD_WIN_Y_E_5)>>8, 0x00}, \
  {0x313f, (int)(SCALE_Y(834)*PD_WIN_Y_E_5)&0xFF, 0x00}, \
}

#define RES5_REG_ARRAY \
{ \
  {0x0101, FLIP_MIRROR_SETTING, 0x00}, \
  {0x0114, 0x03, 0x00}, \
  {0x0220, 0x00, 0x00}, \
  {0x0221, 0x11, 0x00}, \
  {0x0222, 0x10, 0x00}, \
  {0x0340, 0x03, 0x00}, \
  {0x0341, 0x84, 0x00}, \
  {0x0342, 0x15, 0x00}, \
  {0x0343, 0xA0, 0x00}, \
  {0x0344, 0x00, 0x00}, \
  {0x0345, 0x00, 0x00}, \
  {0x0346, 0x01, 0x00}, \
  {0x0347, 0xEC, 0x00}, \
  {0x0348, 0x12, 0x00}, \
  {0x0349, 0x2F, 0x00}, \
  {0x034A, 0x0B, 0x00}, \
  {0x034B, 0xAF, 0x00}, \
  {0x0381, 0x01, 0x00}, \
  {0x0383, 0x01, 0x00}, \
  {0x0385, 0x03, 0x00}, \
  {0x0387, 0x03, 0x00}, \
  {0x0900, 0x01, 0x00}, \
  {0x0901, 0x22, 0x00}, \
  {0x0902, 0x00, 0x00}, \
  {0x3010, 0x65, 0x00}, \
  {0x3011, 0x01, 0x00}, \
  {0x30C0, 0x11, 0x00}, \
  {0x300D, 0x01, 0x00}, \
  {0x30FD, 0x00, 0x00}, \
  {0x8493, 0x00, 0x00}, \
  {0x90D7, 0x19, 0x00}, \
  {0x0112, 0x0A, 0x00}, \
  {0x0113, 0x0A, 0x00}, \
  {0x034C, 0x05, 0x00}, \
  {0x034D, 0xC4, 0x00}, \
  {0x034E, 0x03, 0x00}, \
  {0x034F, 0x42, 0x00}, \
  {0x0401, 0x01, 0x00}, \
  {0x0404, 0x00, 0x00}, \
  {0x0405, 0x18, 0x00}, \
  {0x0408, 0x00, 0x00}, \
  {0x0409, 0x38, 0x00}, \
  {0x040A, 0x00, 0x00}, \
  {0x040B, 0x00, 0x00}, \
  {0x040C, 0x08, 0x00}, \
  {0x040D, 0xA8, 0x00}, \
  {0x040E, 0x03, 0x00}, \
  {0x040F, 0x42, 0x00}, \
  {0x0301, 0x05, 0x00}, \
  {0x0303, 0x02, 0x00}, \
  {0x0305, 0x04, 0x00}, \
  {0x0306, 0x00, 0x00}, \
  {0x0307, 0xFA, 0x00}, \
  {0x0309, 0x0A, 0x00}, \
  {0x030B, 0x01, 0x00}, \
  {0x030D, 0x04, 0x00}, \
  {0x030E, 0x00, 0x00}, \
  {0x030F, 0xC8, 0x00}, \
  {0x0310, 0x01, 0x00}, \
  {0x0820, 0x12, 0x00}, \
  {0x0821, 0xC0, 0x00}, \
  {0x0822, 0x00, 0x00}, \
  {0x0823, 0x00, 0x00}, \
  {0x0202, 0x03, 0x00}, \
  {0x0203, 0x7A, 0x00}, \
  {0x0224, 0x01, 0x00}, \
  {0x0225, 0xF4, 0x00}, \
  {0x0204, 0x00, 0x00}, \
  {0x0205, 0x00, 0x00}, \
  {0x0216, 0x00, 0x00}, \
  {0x0217, 0x00, 0x00}, \
  {0x020E, 0x01, 0x00}, \
  {0x020F, 0x00, 0x00}, \
  {0x0210, 0x01, 0x00}, \
  {0x0211, 0x00, 0x00}, \
  {0x0212, 0x01, 0x00}, \
  {0x0213, 0x00, 0x00}, \
  {0x0214, 0x01, 0x00}, \
  {0x0215, 0x00, 0x00}, \
  {0x3058, 0x00, 0x00}, \
  {0x3013, 0x04, 0x00}, \
  {0x3103, 0x01, 0x00}, \
  /* PDAF settings */ \
  {0x3108, (int)(SCALE_X(1476)*PD_AREA_X_OFFSET)>>8, 0x00}, \
  {0x3109, (int)(SCALE_X(1476)*PD_AREA_X_OFFSET)&0xFF, 0x00}, \
  {0x310a, (int)(SCALE_Y(834)*PD_AREA_Y_OFFSET)>>8, 0x00}, \
  {0x310b, (int)(SCALE_Y(834)*PD_AREA_Y_OFFSET)&0xFF, 0x00}, \
  {0x310c, (int)(SCALE_X(1476)*PD_AREA_WIDTH)>>8, 0x00}, \
  {0x310d, (int)(SCALE_X(1476)*PD_AREA_WIDTH)&0xFF, 0x00}, \
  {0x310e, (int)(SCALE_Y(834)*PD_AREA_HEIGHT)>>8, 0x00}, \
  {0x310f, (int)(SCALE_Y(834)*PD_AREA_HEIGHT)&0xFF, 0x00}, \
  {0x3110, (int)(SCALE_X(1476)*PD_WIN_X_S_0)>>8, 0x00}, \
  {0x3111, (int)(SCALE_X(1476)*PD_WIN_X_S_0)&0xFF, 0x00}, \
  {0x3112, (int)(SCALE_Y(834)*PD_WIN_Y_S_0)>>8, 0x00}, \
  {0x3113, (int)(SCALE_Y(834)*PD_WIN_Y_S_0)&0xFF, 0x00}, \
  {0x3114, (int)(SCALE_X(1476)*PD_WIN_X_E_0)>>8, 0x00}, \
  {0x3115, (int)(SCALE_X(1476)*PD_WIN_X_E_0)&0xFF, 0x00}, \
  {0x3116, (int)(SCALE_Y(834)*PD_WIN_Y_E_0)>>8, 0x00}, \
  {0x3117, (int)(SCALE_Y(834)*PD_WIN_Y_E_0)&0xFF, 0x00}, \
  {0x3118, (int)(SCALE_X(1476)*PD_WIN_X_S_1)>>8, 0x00}, \
  {0x3119, (int)(SCALE_X(1476)*PD_WIN_X_S_1)&0xFF, 0x00}, \
  {0x311a, (int)(SCALE_Y(834)*PD_WIN_Y_S_1)>>8, 0x00}, \
  {0x311b, (int)(SCALE_Y(834)*PD_WIN_Y_S_1)&0xFF, 0x00}, \
  {0x311c, (int)(SCALE_X(1476)*PD_WIN_X_E_1)>>8, 0x00}, \
  {0x311d, (int)(SCALE_X(1476)*PD_WIN_X_E_1)&0xFF, 0x00}, \
  {0x311e, (int)(SCALE_Y(834)*PD_WIN_Y_E_1)>>8, 0x00}, \
  {0x311f, (int)(SCALE_Y(834)*PD_WIN_Y_E_1)&0xFF, 0x00}, \
  {0x3120, (int)(SCALE_X(1476)*PD_WIN_X_S_2)>>8, 0x00}, \
  {0x3121, (int)(SCALE_X(1476)*PD_WIN_X_S_2)&0xFF, 0x00}, \
  {0x3122, (int)(SCALE_Y(834)*PD_WIN_Y_S_2)>>8, 0x00}, \
  {0x3123, (int)(SCALE_Y(834)*PD_WIN_Y_S_2)&0xFF, 0x00}, \
  {0x3124, (int)(SCALE_X(1476)*PD_WIN_X_E_2)>>8, 0x00}, \
  {0x3125, (int)(SCALE_X(1476)*PD_WIN_X_E_2)&0xFF, 0x00}, \
  {0x3126, (int)(SCALE_Y(834)*PD_WIN_Y_E_2)>>8, 0x00}, \
  {0x3127, (int)(SCALE_Y(834)*PD_WIN_Y_E_2)&0xFF, 0x00}, \
  {0x3128, (int)(SCALE_X(1476)*PD_WIN_X_S_3)>>8, 0x00}, \
  {0x3129, (int)(SCALE_X(1476)*PD_WIN_X_S_3)&0xFF, 0x00}, \
  {0x312a, (int)(SCALE_Y(834)*PD_WIN_Y_S_3)>>8, 0x00}, \
  {0x312b, (int)(SCALE_Y(834)*PD_WIN_Y_S_3)&0xFF, 0x00}, \
  {0x312c, (int)(SCALE_X(1476)*PD_WIN_X_E_3)>>8, 0x00}, \
  {0x312d, (int)(SCALE_X(1476)*PD_WIN_X_E_3)&0xFF, 0x00}, \
  {0x312e, (int)(SCALE_Y(834)*PD_WIN_Y_E_3)>>8, 0x00}, \
  {0x312f, (int)(SCALE_Y(834)*PD_WIN_Y_E_3)&0xFF, 0x00}, \
  {0x3130, (int)(SCALE_X(1476)*PD_WIN_X_S_4)>>8, 0x00}, \
  {0x3131, (int)(SCALE_X(1476)*PD_WIN_X_S_4)&0xFF, 0x00}, \
  {0x3132, (int)(SCALE_Y(834)*PD_WIN_Y_S_4)>>8, 0x00}, \
  {0x3133, (int)(SCALE_Y(834)*PD_WIN_Y_S_4)&0xFF, 0x00}, \
  {0x3134, (int)(SCALE_X(1476)*PD_WIN_X_E_4)>>8, 0x00}, \
  {0x3135, (int)(SCALE_X(1476)*PD_WIN_X_E_4)&0xFF, 0x00}, \
  {0x3136, (int)(SCALE_Y(834)*PD_WIN_Y_E_4)>>8, 0x00}, \
  {0x3137, (int)(SCALE_Y(834)*PD_WIN_Y_E_4)&0xFF, 0x00}, \
  {0x3138, (int)(SCALE_X(1476)*PD_WIN_X_S_5)>>8, 0x00}, \
  {0x3139, (int)(SCALE_X(1476)*PD_WIN_X_S_5)&0xFF, 0x00}, \
  {0x313a, (int)(SCALE_Y(834)*PD_WIN_Y_S_5)>>8, 0x00}, \
  {0x313b, (int)(SCALE_Y(834)*PD_WIN_Y_S_5)&0xFF, 0x00}, \
  {0x313c, (int)(SCALE_X(1476)*PD_WIN_X_E_5)>>8, 0x00}, \
  {0x313d, (int)(SCALE_X(1476)*PD_WIN_X_E_5)&0xFF, 0x00}, \
  {0x313e, (int)(SCALE_Y(834)*PD_WIN_Y_E_5)>>8, 0x00}, \
  {0x313f, (int)(SCALE_Y(834)*PD_WIN_Y_E_5)&0xFF, 0x00}, \
}

#define RES6_REG_ARRAY \
{ \
  {0x0101, FLIP_MIRROR_SETTING, 0x00}, \
  {0x0114, 0x03, 0x00}, \
  {0x0220, 0x03, 0x00}, \
  {0x0221, 0x11, 0x00}, \
  {0x0222, 0x10, 0x00}, \
  {0x0340, 0x0D, 0x00}, \
  {0x0341, 0xD8, 0x00}, \
  {0x0342, 0x15, 0x00}, \
  {0x0343, 0xA0, 0x00}, \
  {0x0344, 0x00, 0x00}, \
  {0x0345, 0x00, 0x00}, \
  {0x0346, 0x00, 0x00}, \
  {0x0347, 0x00, 0x00}, \
  {0x0348, 0x12, 0x00}, \
  {0x0349, 0x2F, 0x00}, \
  {0x034A, 0x0D, 0x00}, \
  {0x034B, 0xA7, 0x00}, \
  {0x0381, 0x01, 0x00}, \
  {0x0383, 0x01, 0x00}, \
  {0x0385, 0x01, 0x00}, \
  {0x0387, 0x01, 0x00}, \
  {0x0900, 0x00, 0x00}, \
  {0x0901, 0x11, 0x00}, \
  {0x0902, 0x00, 0x00}, \
  {0x3010, 0x65, 0x00}, \
  {0x3011, 0x01, 0x00}, \
  {0x30C0, 0x11, 0x00}, \
  {0x300D, 0x00, 0x00}, \
  {0x30FD, 0x01, 0x00}, \
  {0x8493, 0x02, 0x00}, \
  {0x90D7, 0x1E, 0x00}, \
  {0x0112, 0x0A, 0x00}, \
  {0x0113, 0x0A, 0x00}, \
  {0x034C, 0x12, 0x00}, \
  {0x034D, 0x30, 0x00}, \
  {0x034E, 0x0D, 0x00}, \
  {0x034F, 0xA8, 0x00}, \
  {0x0401, 0x00, 0x00}, \
  {0x0404, 0x00, 0x00}, \
  {0x0405, 0x10, 0x00}, \
  {0x0408, 0x00, 0x00}, \
  {0x0409, 0x00, 0x00}, \
  {0x040A, 0x00, 0x00}, \
  {0x040B, 0x00, 0x00}, \
  {0x040C, 0x12, 0x00}, \
  {0x040D, 0x30, 0x00}, \
  {0x040E, 0x0D, 0x00}, \
  {0x040F, 0xA8, 0x00}, \
  {0x0301, 0x05, 0x00}, \
  {0x0303, 0x02, 0x00}, \
  {0x0305, 0x04, 0x00}, \
  {0x0306, 0x00, 0x00}, \
  {0x0307, 0xC8, 0x00}, \
  {0x0309, 0x0A, 0x00}, \
  {0x030B, 0x01, 0x00}, \
  {0x030D, 0x0F, 0x00}, \
  {0x030E, 0x03, 0x00}, \
  {0x030F, 0x41, 0x00}, \
  {0x0310, 0x00, 0x00}, \
  {0x0820, 0x12, 0x00}, \
  {0x0821, 0xC0, 0x00}, \
  {0x0822, 0x00, 0x00}, \
  {0x0823, 0x00, 0x00}, \
  {0x0202, 0x0D, 0x00}, \
  {0x0203, 0xCE, 0x00}, \
  {0x0224, 0x00, 0x00}, \
  {0x0225, 0xDC, 0x00}, \
  {0x0204, 0x00, 0x00}, \
  {0x0205, 0x00, 0x00}, \
  {0x0216, 0x00, 0x00}, \
  {0x0217, 0x00, 0x00}, \
  {0x020E, 0x01, 0x00}, \
  {0x020F, 0x00, 0x00}, \
  {0x0210, 0x01, 0x00}, \
  {0x0211, 0x00, 0x00}, \
  {0x0212, 0x01, 0x00}, \
  {0x0213, 0x00, 0x00}, \
  {0x0214, 0x01, 0x00}, \
  {0x0215, 0x00, 0x00}, \
  {0x3058, 0x00, 0x00}, \
  {0x3013, 0x04, 0x00}, \
  {0x3103, 0x01, 0x00}, \
  /*PDAF AREA MODE*/ \
  {0x3108, PD_AREA_X_OFFSET>>8, 0x00}, \
  {0x3109, PD_AREA_X_OFFSET&0xFF, 0x00}, \
  {0x310a, PD_AREA_Y_OFFSET>>8, 0x00}, \
  {0x310b, PD_AREA_Y_OFFSET&0xFF, 0x00}, \
  {0x310c, PD_AREA_WIDTH>>8, 0x00}, \
  {0x310d, PD_AREA_WIDTH&0xFF, 0x00}, \
  {0x310e, PD_AREA_HEIGHT>>8, 0x00}, \
  {0x310f, PD_AREA_HEIGHT&0xFF, 0x00}, \
  {0x3165, PD_AREA_MODE, 0x00}, \
  /* PDAF Flexible Windows */ \
  {0x3110, PD_WIN_X_S_0>>8, 0x00}, \
  {0x3111, PD_WIN_X_S_0&0xFF, 0x00}, \
  {0x3112, PD_WIN_Y_S_0>>8, 0x00}, \
  {0x3113, PD_WIN_Y_S_0&0xFF, 0x00}, \
  {0x3114, PD_WIN_X_E_0>>8, 0x00}, \
  {0x3115, PD_WIN_X_E_0&0xFF, 0x00}, \
  {0x3116, PD_WIN_Y_E_0>>8, 0x00}, \
  {0x3117, PD_WIN_Y_E_0&0xFF, 0x00}, \
  {0x3118, PD_WIN_X_S_1>>8, 0x00}, \
  {0x3119, PD_WIN_X_S_1&0xFF, 0x00}, \
  {0x311a, PD_WIN_Y_S_1>>8, 0x00}, \
  {0x311b, PD_WIN_Y_S_1&0xFF, 0x00}, \
  {0x311c, PD_WIN_X_E_1>>8, 0x00}, \
  {0x311d, PD_WIN_X_E_1&0xFF, 0x00}, \
  {0x311e, PD_WIN_Y_E_1>>8, 0x00}, \
  {0x311f, PD_WIN_Y_E_1&0xFF, 0x00}, \
  {0x3120, PD_WIN_X_S_2>>8, 0x00}, \
  {0x3121, PD_WIN_X_S_2&0xFF, 0x00}, \
  {0x3122, PD_WIN_Y_S_2>>8, 0x00}, \
  {0x3123, PD_WIN_Y_S_2&0xFF, 0x00}, \
  {0x3124, PD_WIN_X_E_2>>8, 0x00}, \
  {0x3125, PD_WIN_X_E_2&0xFF, 0x00}, \
  {0x3126, PD_WIN_Y_E_2>>8, 0x00}, \
  {0x3127, PD_WIN_Y_E_2&0xFF, 0x00}, \
  {0x3128, PD_WIN_X_S_3>>8, 0x00}, \
  {0x3129, PD_WIN_X_S_3&0xFF, 0x00}, \
  {0x312a, PD_WIN_Y_S_3>>8, 0x00}, \
  {0x312b, PD_WIN_Y_S_3&0xFF, 0x00}, \
  {0x312c, PD_WIN_X_E_3>>8, 0x00}, \
  {0x312d, PD_WIN_X_E_3&0xFF, 0x00}, \
  {0x312e, PD_WIN_Y_E_3>>8, 0x00}, \
  {0x312f, PD_WIN_Y_E_3&0xFF, 0x00}, \
  {0x3130, PD_WIN_X_S_4>>8, 0x00}, \
  {0x3131, PD_WIN_X_S_4&0xFF, 0x00}, \
  {0x3132, PD_WIN_Y_S_4>>8, 0x00}, \
  {0x3133, PD_WIN_Y_S_4&0xFF, 0x00}, \
  {0x3134, PD_WIN_X_E_4>>8, 0x00}, \
  {0x3135, PD_WIN_X_E_4&0xFF, 0x00}, \
  {0x3136, PD_WIN_Y_E_4>>8, 0x00}, \
  {0x3137, PD_WIN_Y_E_4&0xFF, 0x00}, \
  {0x3138, PD_WIN_X_S_5>>8, 0x00}, \
  {0x3139, PD_WIN_X_S_5&0xFF, 0x00}, \
  {0x313a, PD_WIN_Y_S_5>>8, 0x00}, \
  {0x313b, PD_WIN_Y_S_5&0xFF, 0x00}, \
  {0x313c, PD_WIN_X_E_5>>8, 0x00}, \
  {0x313d, PD_WIN_X_E_5&0xFF, 0x00}, \
  {0x313e, PD_WIN_Y_E_5>>8, 0x00}, \
  {0x313f, PD_WIN_Y_E_5&0xFF, 0x00}, \
}

#define RES7_REG_ARRAY \
{ \
  {0x0101, FLIP_MIRROR_SETTING, 0x00}, \
  {0x0114, 0x03, 0x00}, \
  {0x0220, 0x03, 0x00}, \
  {0x0221, 0x11, 0x00}, \
  {0x0222, 0x10, 0x00}, \
  {0x0340, 0x0B, 0x00}, \
  {0x0341, 0x48, 0x00}, \
  {0x0342, 0x15, 0x00}, \
  {0x0343, 0xA0, 0x00}, \
  {0x0344, 0x00, 0x00}, \
  {0x0345, 0x00, 0x00}, \
  {0x0346, 0x01, 0x00}, \
  {0x0347, 0xBC, 0x00}, \
  {0x0348, 0x12, 0x00}, \
  {0x0349, 0x2F, 0x00}, \
  {0x034A, 0x0B, 0x00}, \
  {0x034B, 0xEB, 0x00}, \
  {0x0381, 0x01, 0x00}, \
  {0x0383, 0x01, 0x00}, \
  {0x0385, 0x01, 0x00}, \
  {0x0387, 0x01, 0x00}, \
  {0x0900, 0x00, 0x00}, \
  {0x0901, 0x11, 0x00}, \
  {0x0902, 0x00, 0x00}, \
  {0x3010, 0x65, 0x00}, \
  {0x3011, 0x01, 0x00}, \
  {0x30C0, 0x11, 0x00}, \
  {0x300D, 0x00, 0x00}, \
  {0x30FD, 0x01, 0x00}, \
  {0x8493, 0x02, 0x00}, \
  {0x90D7, 0x1E, 0x00}, \
  {0x0112, 0x0A, 0x00}, \
  {0x0113, 0x0A, 0x00}, \
  {0x034C, 0x10, 0x00}, \
  {0x034D, 0x00, 0x00}, \
  {0x034E, 0x08, 0x00}, \
  {0x034F, 0x70, 0x00}, \
  {0x0401, 0x00, 0x00}, \
  {0x0404, 0x00, 0x00}, \
  {0x0405, 0x10, 0x00}, \
  {0x0408, 0x01, 0x00}, \
  {0x0409, 0x18, 0x00}, \
  {0x040A, 0x00, 0x00}, \
  {0x040B, 0xE0, 0x00}, \
  {0x040C, 0x10, 0x00}, \
  {0x040D, 0x00, 0x00}, \
  {0x040E, 0x08, 0x00}, \
  {0x040F, 0x70, 0x00}, \
  {0x0301, 0x05, 0x00}, \
  {0x0303, 0x02, 0x00}, \
  {0x0305, 0x04, 0x00}, \
  {0x0306, 0x00, 0x00}, \
  {0x0307, 0xC8, 0x00}, \
  {0x0309, 0x0A, 0x00}, \
  {0x030B, 0x01, 0x00}, \
  {0x030D, 0x0F, 0x00}, \
  {0x030E, 0x03, 0x00}, \
  {0x030F, 0x41, 0x00}, \
  {0x0310, 0x00, 0x00}, \
  {0x0820, 0x12, 0x00}, \
  {0x0821, 0xC0, 0x00}, \
  {0x0822, 0x00, 0x00}, \
  {0x0823, 0x00, 0x00}, \
  {0x0202, 0x0B, 0x00}, \
  {0x0203, 0x3E, 0x00}, \
  {0x0224, 0x00, 0x00}, \
  {0x0225, 0xB3, 0x00}, \
  {0x0204, 0x00, 0x00}, \
  {0x0205, 0x00, 0x00}, \
  {0x0216, 0x00, 0x00}, \
  {0x0217, 0x00, 0x00}, \
  {0x020E, 0x01, 0x00}, \
  {0x020F, 0x00, 0x00}, \
  {0x0210, 0x01, 0x00}, \
  {0x0211, 0x00, 0x00}, \
  {0x0212, 0x01, 0x00}, \
  {0x0213, 0x00, 0x00}, \
  {0x0214, 0x01, 0x00}, \
  {0x0215, 0x00, 0x00}, \
  {0x3058, 0x00, 0x00}, \
  {0x3013, 0x04, 0x00}, \
  {0x3103, 0x01, 0x00}, \
  /* PDAF settings */ \
  {0x3108, (int)(SCALE_X(4096)*PD_AREA_X_OFFSET)>>8, 0x00}, \
  {0x3109, (int)(SCALE_X(4096)*PD_AREA_X_OFFSET)&0xFF, 0x00}, \
  {0x310a, (int)(SCALE_Y(2160)*PD_AREA_Y_OFFSET)>>8, 0x00}, \
  {0x310b, (int)(SCALE_Y(2160)*PD_AREA_Y_OFFSET)&0xFF, 0x00}, \
  {0x310c, (int)(SCALE_X(4096)*PD_AREA_WIDTH)>>8, 0x00}, \
  {0x310d, (int)(SCALE_X(4096)*PD_AREA_WIDTH)&0xFF, 0x00}, \
  {0x310e, (int)(SCALE_Y(2160)*PD_AREA_HEIGHT)>>8, 0x00}, \
  {0x310f, (int)(SCALE_Y(2160)*PD_AREA_HEIGHT)&0xFF, 0x00}, \
  {0x3110, (int)(SCALE_X(4096)*PD_WIN_X_S_0)>>8, 0x00}, \
  {0x3111, (int)(SCALE_X(4096)*PD_WIN_X_S_0)&0xFF, 0x00}, \
  {0x3112, (int)(SCALE_Y(2160)*PD_WIN_Y_S_0)>>8, 0x00}, \
  {0x3113, (int)(SCALE_Y(2160)*PD_WIN_Y_S_0)&0xFF, 0x00}, \
  {0x3114, (int)(SCALE_X(4096)*PD_WIN_X_E_0)>>8, 0x00}, \
  {0x3115, (int)(SCALE_X(4096)*PD_WIN_X_E_0)&0xFF, 0x00}, \
  {0x3116, (int)(SCALE_Y(2160)*PD_WIN_Y_E_0)>>8, 0x00}, \
  {0x3117, (int)(SCALE_Y(2160)*PD_WIN_Y_E_0)&0xFF, 0x00}, \
  {0x3118, (int)(SCALE_X(4096)*PD_WIN_X_S_1)>>8, 0x00}, \
  {0x3119, (int)(SCALE_X(4096)*PD_WIN_X_S_1)&0xFF, 0x00}, \
  {0x311a, (int)(SCALE_Y(2160)*PD_WIN_Y_S_1)>>8, 0x00}, \
  {0x311b, (int)(SCALE_Y(2160)*PD_WIN_Y_S_1)&0xFF, 0x00}, \
  {0x311c, (int)(SCALE_X(4096)*PD_WIN_X_E_1)>>8, 0x00}, \
  {0x311d, (int)(SCALE_X(4096)*PD_WIN_X_E_1)&0xFF, 0x00}, \
  {0x311e, (int)(SCALE_Y(2160)*PD_WIN_Y_E_1)>>8, 0x00}, \
  {0x311f, (int)(SCALE_Y(2160)*PD_WIN_Y_E_1)&0xFF, 0x00}, \
  {0x3120, (int)(SCALE_X(4096)*PD_WIN_X_S_2)>>8, 0x00}, \
  {0x3121, (int)(SCALE_X(4096)*PD_WIN_X_S_2)&0xFF, 0x00}, \
  {0x3122, (int)(SCALE_Y(2160)*PD_WIN_Y_S_2)>>8, 0x00}, \
  {0x3123, (int)(SCALE_Y(2160)*PD_WIN_Y_S_2)&0xFF, 0x00}, \
  {0x3124, (int)(SCALE_X(4096)*PD_WIN_X_E_2)>>8, 0x00}, \
  {0x3125, (int)(SCALE_X(4096)*PD_WIN_X_E_2)&0xFF, 0x00}, \
  {0x3126, (int)(SCALE_Y(2160)*PD_WIN_Y_E_2)>>8, 0x00}, \
  {0x3127, (int)(SCALE_Y(2160)*PD_WIN_Y_E_2)&0xFF, 0x00}, \
  {0x3128, (int)(SCALE_X(4096)*PD_WIN_X_S_3)>>8, 0x00}, \
  {0x3129, (int)(SCALE_X(4096)*PD_WIN_X_S_3)&0xFF, 0x00}, \
  {0x312a, (int)(SCALE_Y(2160)*PD_WIN_Y_S_3)>>8, 0x00}, \
  {0x312b, (int)(SCALE_Y(2160)*PD_WIN_Y_S_3)&0xFF, 0x00}, \
  {0x312c, (int)(SCALE_X(4096)*PD_WIN_X_E_3)>>8, 0x00}, \
  {0x312d, (int)(SCALE_X(4096)*PD_WIN_X_E_3)&0xFF, 0x00}, \
  {0x312e, (int)(SCALE_Y(2160)*PD_WIN_Y_E_3)>>8, 0x00}, \
  {0x312f, (int)(SCALE_Y(2160)*PD_WIN_Y_E_3)&0xFF, 0x00}, \
  {0x3130, (int)(SCALE_X(4096)*PD_WIN_X_S_4)>>8, 0x00}, \
  {0x3131, (int)(SCALE_X(4096)*PD_WIN_X_S_4)&0xFF, 0x00}, \
  {0x3132, (int)(SCALE_Y(2160)*PD_WIN_Y_S_4)>>8, 0x00}, \
  {0x3133, (int)(SCALE_Y(2160)*PD_WIN_Y_S_4)&0xFF, 0x00}, \
  {0x3134, (int)(SCALE_X(4096)*PD_WIN_X_E_4)>>8, 0x00}, \
  {0x3135, (int)(SCALE_X(4096)*PD_WIN_X_E_4)&0xFF, 0x00}, \
  {0x3136, (int)(SCALE_Y(2160)*PD_WIN_Y_E_4)>>8, 0x00}, \
  {0x3137, (int)(SCALE_Y(2160)*PD_WIN_Y_E_4)&0xFF, 0x00}, \
  {0x3138, (int)(SCALE_X(4096)*PD_WIN_X_S_5)>>8, 0x00}, \
  {0x3139, (int)(SCALE_X(4096)*PD_WIN_X_S_5)&0xFF, 0x00}, \
  {0x313a, (int)(SCALE_Y(2160)*PD_WIN_Y_S_5)>>8, 0x00}, \
  {0x313b, (int)(SCALE_Y(2160)*PD_WIN_Y_S_5)&0xFF, 0x00}, \
  {0x313c, (int)(SCALE_X(4096)*PD_WIN_X_E_5)>>8, 0x00}, \
  {0x313d, (int)(SCALE_X(4096)*PD_WIN_X_E_5)&0xFF, 0x00}, \
  {0x313e, (int)(SCALE_Y(2160)*PD_WIN_Y_E_5)>>8, 0x00}, \
  {0x313f, (int)(SCALE_Y(2160)*PD_WIN_Y_E_5)&0xFF, 0x00}, \
}

/* Sensor Handler */
static sensor_lib_t sensor_lib_ptr =
{
  .sensor_slave_info =
  {
    .sensor_name = SENSOR_MODEL,
    .slave_addr = 0x34,
    .i2c_freq_mode = SENSOR_I2C_MODE_FAST,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .sensor_id_info =
    {
      .sensor_id_reg_addr = 0x0016,
      .sensor_id = 0x0298,
    },
    .power_setting_array =
    {
      .power_setting_a =
      {
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_STANDBY,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VANA,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VDIG,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VIO,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_CLK,
          .seq_val = CAMERA_MCLK,
          .config_val = 24000000,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_STANDBY,
          .config_val = GPIO_OUT_HIGH,
          .delay = 10,
        },
      },
      .size = 6,
      .power_down_setting_a =
      {
        {
          .seq_type = CAMERA_POW_SEQ_CLK,
          .seq_val = CAMERA_MCLK,
          .config_val = 0,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_STANDBY,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VIO,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VDIG,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VANA,
          .config_val = 0,
          .delay = 0,
        },
      },
      .size_down = 5,
    },
  },
  .sensor_output =
  {
    .output_format = SENSOR_BAYER,
    .connection_mode = SENSOR_MIPI_CSI,
    .raw_output = SENSOR_10_BIT_DIRECT,
#ifndef FLIP_MIRROR
    .filter_arrangement = SENSOR_RGGB,
#else
    .filter_arrangement = SENSOR_BGGR,
#endif

  },
  .output_reg_addr =
  {
    .x_output = 0x034C,
    .y_output = 0x034E,
    .line_length_pclk = 0x0342,
    .frame_length_lines = 0x0340,
  },
  .exp_gain_info =
  {
    .coarse_int_time_addr = 0x0202,
    .global_gain_addr = 0x0204,
    .vert_offset = IMX298_MAX_INTEGRATION_MARGIN,
  },
  .aec_info =
  {
    .min_gain = IMX298_MIN_GAIN,
    .max_gain = IMX298_MAX_GAIN,
    .max_analog_gain = IMX298_MAX_AGAIN,
    .max_linecount = 65535 - IMX298_MAX_INTEGRATION_MARGIN,
  },
  .sensor_num_frame_skip = 2,
  .sensor_num_HDR_frame_skip = 2,
  .sensor_max_pipeline_frame_delay = 2,
  .sensor_property =
  {
    .pix_size = 1.12, /* um */
    .sensing_method = SENSOR_SMETHOD_ONE_CHIP_COLOR_AREA_SENSOR, //TBD - to get from vendor
    .crop_factor = 5.78, //TBD - to get from vendor
  },
  .pixel_array_size_info =
  {
    .active_array_size =
    {
      .width = 4656,
      .height = 3496,
    },
    .left_dummy = 8,
    .right_dummy = 8,
    .top_dummy = 8,
    .bottom_dummy = 8,
  },
  .color_level_info =
  {
    .white_level = 1023,
    .r_pedestal = IMX298_DATA_PEDESTAL,
    .gr_pedestal = IMX298_DATA_PEDESTAL,
    .gb_pedestal = IMX298_DATA_PEDESTAL,
    .b_pedestal = IMX298_DATA_PEDESTAL,
  },
  .sensor_stream_info_array =
  {
    .sensor_stream_info =
    {
      {
        .vc_cfg_size = 3,
        .vc_cfg =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT,
          },
          {
            .cid = 1,
            .dt = IMX298_CSI_PD_ISTATS,
            .decode_format = CSI_DECODE_10BIT,
          },
          {
            .cid = 2,
            .dt = IMX298_CSI_HDR_ISTATS,
            .decode_format = CSI_DECODE_10BIT,
          },
        },
        .pix_data_fmt =
        {
          SENSOR_BAYER,
          SENSOR_META,
          SENSOR_META,
        },
      },
      {
        .vc_cfg_size = 1,
        .vc_cfg =
        {
          {
            .cid = 3,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_10BIT,
          },
        },
        .pix_data_fmt =
        {
          SENSOR_META,
        },
      },
    },
    .size = 2,
  },
  .start_settings =
  {
    .reg_setting_a = START_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .stop_settings =
  {
    .reg_setting_a = STOP_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .groupon_settings =
  {
    .reg_setting_a = GROUPON_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .groupoff_settings =
  {
    .reg_setting_a = GROUPOFF_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .test_pattern_info =
  {
    .test_pattern_settings =
    {
      {
        .mode = SENSOR_TEST_PATTERN_OFF,
        .settings =
        {
          .reg_setting_a =
          {
            {0x0600, 0x0000, 0x00},
          },
          .size = 1,
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_WORD_DATA,
          .delay = 0,
        }
      },
      {
        .mode = SENSOR_TEST_PATTERN_SOLID_COLOR,
        .settings =
        {
          .reg_setting_a =
          {
            {0x0600, 0x0001, 0x00},
          },
          .size = 1,
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_WORD_DATA,
          .delay = 0,
        },
      },
      {
        .mode = SENSOR_TEST_PATTERN_COLOR_BARS,
        .settings =
        {
          .reg_setting_a =
          {
            {0x0600, 0x0002, 0x00},
          },
          .size = 1,
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_WORD_DATA,
          .delay = 0,
        },
      },
      {
        .mode = SENSOR_TEST_PATTERN_COLOR_BARS_FADE_TO_GRAY,
        .settings =
        {
          .reg_setting_a =
          {
            {0x0600, 0x0003, 0x00},
          },
          .size = 1,
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_WORD_DATA,
          .delay = 0,
        },
      },
      {
        .mode = SENSOR_TEST_PATTERN_PN9,
        .settings =
        {
          .reg_setting_a =
          {
            {0x0600, 0x0004, 0x00},
          },
          .size = 1,
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_WORD_DATA,
          .delay = 0,
        },
      },
    },
    .size = 5,
    .solid_mode_addr =
    {
      .r_addr = 0x0602,
      .gr_addr = 0x0604,
      .b_addr = 0x0606,
      .gb_addr = 0x0608,
    },
  },
  .init_settings_array =
  {
    .reg_settings =
    {
      {
        .reg_setting_a = INIT0_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
    },
    .size = 1,
  },
  .res_settings_array =
  {
    .reg_settings =
    {
      /* Res 0 */
      {
        .reg_setting_a = RES0_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
      /* Res 1 */
      {
        .reg_setting_a = RES1_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
      /* Res 2 */
      {
        .reg_setting_a = RES2_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
      /* Res 3 */
      {
        .reg_setting_a = RES3_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
      /* Res 4 */
      {
        .reg_setting_a = RES4_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
      /* Res 5 */
      {
        .reg_setting_a = RES5_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
      /* Res 6 */
      {
        .reg_setting_a = RES6_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
      /* Res 7 */
      {
        .reg_setting_a = RES7_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
    },
    .size = 8,
  },
  .out_info_array =
  {
    .out_info =
    {
      /* Res 0 */
      {
#ifdef FULL_RES_30FPS
        .x_output = 4656,
        .y_output = 3496,
        .line_length_pclk = 5536,
        .frame_length_lines = 3608,
        .op_pixel_clk = 600000000,
        .binning_factor = 1,
        .min_fps = 10.00,
        .max_fps = 30.03,
        .mode = SENSOR_DEFAULT_MODE,
        .offset_x = 0,
        .offset_y = 0,
        .scale_factor = 1.000,
        .is_pdaf_supported = 1,
#else
        .x_output = 4656,
        .y_output = 3496,
        .line_length_pclk = 5536,
        .frame_length_lines = 3544,
        .op_pixel_clk = 480000000,
        .binning_factor = 1,
        .min_fps = 10.00,
        .max_fps = 24.46,
        .mode = SENSOR_DEFAULT_MODE,
        .offset_x = 0,
        .offset_y = 0,
        .scale_factor = 1.000,
        .is_pdaf_supported = 1,
#endif
      },
      /* Res 1 */
      {
        .x_output = 4656,
        .y_output = 2608,
        .line_length_pclk = 5536,
        .frame_length_lines = 2888,
        .op_pixel_clk = 480000000,
        .binning_factor = 1,
        .min_fps = 10.00,
        .max_fps = 30.02,
        .mode = SENSOR_DEFAULT_MODE,
        .offset_x = 0,
        .offset_y = 444,
        .scale_factor = 1.000,
        .is_pdaf_supported = 1,
      },
      /* Res 2 */
      {
        .x_output = 2328,
        .y_output = 1748,
        .line_length_pclk = 5536,
        .frame_length_lines = 2888,
        .op_pixel_clk = 480000000,
        .binning_factor = 2,
        .min_fps = 10.00,
        .max_fps = 30.02,
        .mode = SENSOR_DEFAULT_MODE,
        .offset_x = 0,
        .offset_y = 0,
        .scale_factor = 1.000,
        .is_pdaf_supported = 1,
      },
      /* Res 3 */
      {
        .x_output = 2328,
        .y_output = 1304,
        .line_length_pclk = 5536,
        .frame_length_lines = 1444,
        .op_pixel_clk = 480000000,
        .binning_factor = 2,
        .min_fps = 10.00,
        .max_fps = 60.04,
        .mode = SENSOR_HFR_MODE,
        .offset_x = 0,
        .offset_y = 444,
        .scale_factor = 1.000,
        .is_pdaf_supported = 1,
      },
      /* Res 4 */
      {
        .x_output = 1476,
        .y_output = 834,
        .line_length_pclk = 5536,
        .frame_length_lines = 960,
        .op_pixel_clk = 480000000,
        .binning_factor = 2,
        .min_fps = 10.00,
        .max_fps = 90.31,
        .mode = SENSOR_HFR_MODE,
        .offset_x = 0,
        .offset_y = 492,
        .scale_factor = 1.500,
        .is_pdaf_supported = 1,
      },
      /* Res 5 */
      {
        .x_output = 1476,
        .y_output = 834,
        .line_length_pclk = 5536,
        .frame_length_lines = 900,
        .op_pixel_clk = 480000000,
        .binning_factor = 2,
        .min_fps = 10.00,
        .max_fps = 120.42,
        .mode = SENSOR_HFR_MODE,
        .offset_x = 0,
        .offset_y = 492,
        .scale_factor = 1.500,
        .is_pdaf_supported = 1,
      },
      /* Res 6 */
      {
        .x_output = 4565,
        .y_output = 3496,
        .line_length_pclk = 5536,
        .frame_length_lines = 3544,
        .op_pixel_clk = 480000000,
        .binning_factor = 1,
        .min_fps = 10.00,
        .max_fps = 24.46,
        .mode = SENSOR_HDR_MODE,
        .offset_x = 0,
        .offset_y = 0,
        .scale_factor = 1.000,
        .is_pdaf_supported = 1,
      },
      /* Res 7 */
      {
        .x_output = 4096,
        .y_output = 2160,
        .line_length_pclk = 5536,
        .frame_length_lines = 2888,
        .op_pixel_clk = 480000000,
        .binning_factor = 1,
        .min_fps = 10.00,
        .max_fps = 30.02,
        .mode = SENSOR_HDR_MODE,
        .offset_x = 0,
        .offset_y = 444,
        .scale_factor = 1.000,
        .is_pdaf_supported = 1,
      },
    },
    .size = 8,
  },
  .csi_params =
  {
    .lane_cnt = 4,
    .settle_cnt = 0xE,
    .is_csi_3phase = 0,
  },
  .csid_lut_params_array =
  {
    .lut_params =
    {
      /* Res 0 */
      {
        .num_cid = 3,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 1,
            .dt = IMX298_CSI_PD_ISTATS,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 3,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_10BIT
          },
        },
      },
      /* Res 1 */
      {
        .num_cid = 3,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 1,
            .dt = IMX298_CSI_PD_ISTATS,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 3,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_10BIT
          },
        },
      },
      /* Res 2 */
      {
        .num_cid = 3,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 1,
            .dt = IMX298_CSI_PD_ISTATS,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 3,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_10BIT
          },
        },
      },
      /* Res 3 */
      {
        .num_cid = 3,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 1,
            .dt = IMX298_CSI_PD_ISTATS,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 3,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_10BIT
          },
        },
      },
      /* Res 4 */
      {
        .num_cid = 3,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 1,
            .dt = IMX298_CSI_PD_ISTATS,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 3,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_10BIT
          },
        },
      },
      /* Res 5 */
     {
        .num_cid = 3,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 1,
            .dt = IMX298_CSI_PD_ISTATS,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 3,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_10BIT
          },
        },
      },
      /* Res 6 */
     {
        .num_cid = 4,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 1,
            .dt = IMX298_CSI_PD_ISTATS,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 2,
            .dt = IMX298_CSI_HDR_ISTATS,
            .decode_format = CSI_DECODE_8BIT
          },
          {
            .cid = 3,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_10BIT
          },
        },
      },
      /* Res 7 */
     {
        .num_cid = 4,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 1,
            .dt = IMX298_CSI_PD_ISTATS,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 2,
            .dt = IMX298_CSI_HDR_ISTATS,
            .decode_format = CSI_DECODE_8BIT
          },
          {
            .cid = 3,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_10BIT
          },
        },
      },
    },
    .size = 8,
  },
  .crop_params_array =
  {
    .crop_params =
    {
      /* Res 0 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
      /* Res 1 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
      /* Res 2 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
      /* Res 3 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
      /* Res 4 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
      /* Res 5 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
      /* Res 6 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
      /* Res 7 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
    },
    .size = 8,
  },
  .exposure_func_table =
  {
    .sensor_calculate_exposure = sensor_calculate_exposure,
    .sensor_fill_exposure_array = sensor_fill_exposure_array,
  },
  .meta_data_out_info_array =
  {
    .meta_data_out_info =
    {
      {
        .width = 4656,
        .height = 2,
        .stats_type = HDR_STATS,
        .dt = IMX298_CSI_HDR_ISTATS,
      },
      {
        .width = 4656,
        .height = 2,
        .stats_type = PD_STATS,
        .dt = IMX298_CSI_PD_ISTATS,
      },
    },
    .size = 2,
  },
  .sensor_capability = (SENSOR_VIDEO_HDR_FLAG | SENSOR_SNAPSHOT_HDR_FLAG),
  .awb_func_table =
  {
    .sensor_fill_awb_array = sensor_fill_awb_array,
    .awb_table_size = 2,
  },
    .parse_RDI_stats =
  {
    .pd_data_format = SENSOR_STATS_RAW10_8B_CONF_10B_PD,
  },
  .rolloff_config =
  {
    .enable = FALSE,
    .full_size_info =
    {
      .full_size_width = 0,
      .full_size_height = 0,
      .full_size_left_crop = 0,
      .full_size_top_crop = 0,
    },
  },
  .adc_readout_time = 0,
  .sensor_num_fast_aec_frame_skip = 0,
  .sensorlib_pdaf_api =
  {
    .calcdefocus = "imx298_pdaf_calculate_defocus",
    .libname = "libSonyIMX230PdafLibrary.so",
    .pdaf_get_defocus_API = "SonyPdLibGetDefocus",
    .pdaf_get_version_API = "SonyPdLibGetVersion",
    .pdaf_init_API = "\0",
    .pdaf_deinit_API = "\0",
  },
  .noise_coeff = {
    .gradient_S = 3.738032e-06,
    .offset_S = 3.651935e-04,
    .gradient_O = 4.499952e-07,
    .offset_O = -2.968624e-04,
  },
};

#endif /* __IMX298_LIB_H__ */

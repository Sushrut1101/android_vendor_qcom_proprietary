/*
** Copyright (c) 2015 Qualcomm Technologies, Inc.
** All Rights Reserved.
** Confidential and Proprietary - Qualcomm Technologies, Inc.
** ------------------------------------------------------- */
sub factorial( $n)
{
    print( "factorial $n\n");
    if ( 0 == $n) {
        return  1;
    }
    else {
        return ( $n * factorial( $n - 1));
    }
}

sub main( @argv)
{
//    print( "hello world\n");
//
//    my ( $j) = @argv;
//    if ( !defined( $j)) {
//        $j = 3;
//    }

    my $j = 3;
    my $i = 0;
    while( $i < $j) {
        my $faq = factorial( $i);
        print( "factorial( $i) == $faq\n");
        $i += 1;
    }

    goodbye( "lovelace");
}

/* --->

sub main( @argv)
{
    my $sscts = 154;
    $sscts *= ( 1000.0 / 32768.0);
    print( "sscts $sscts ms\n");
}


sub fromfor( $start, $for)
{
    print( "fromfor\n");

    my $end = $start + $for;
    while( $start < $end) {
        print( "s: $start\n");
        $start += 1;
    }
    print( "exit fromfor $start\n");
}

sub main( @argv)
{

    fromfor( 0, 6);
    print( "did 0,6\n");

    fromfor( 10, 7);
    print( "did 10,7\n");

    print( "the end\n");

}


    my $value = 1;
    $value *= (1000/32668.0);

    print( "value $value\n");

    my $ind_count = 1;
    while ( $ind_count < $quantity) {
        $ind_count += 1;
        print( "$ind_count\n");
    }

    my $a;
    my ( $b, $c) = @argv;

    if  (( $a = func( $b)) < $c) {
        print ( "(( $a = func( $b) < $c)) is true\n");
    }
    else {
        print ( "(( $a = func( $b) < $c)) is false\n");
    }

    my $a = 1;

    while ( 1 < 2 && $a < 2) {

        print( "1 < 2 || $a < 2 true\n");
        if ( $a >= 2) {
            break;
        }
        $a += 1;
    }

    print( "end while\n");


    my $sensor_id = 10;
    my $datatype  = 0;
    my $request = slnew_req( "smgr", "report", { report_id => 1, action => "add", report_rate => 30,
                                               item => 0, sensor_id => $sensor_id, datatype => $datatype});
    if ( defined( $request)) {
        print( "request defined\n");
    }
    else {
        print( "request NOT defined\n");
    }


    my ( $i = 0, $limit = 10);
    my $m = "original";
    print( "before outer \$m: $m\n");
    my $q = "queue";
    my $r = "ahrrr";

    while ( $i < $limit) {
        my $m = $i * $i;
        my $r = $i - 1;
        my ( $q = $i + 1);
        print( "$i * $i = $m q $q, r $r\n");
        $i += 1;
    }

    print( "after  outer \$m: $m\n");
    print( "q $q, r $r\n");

    my ( $j = 0, $k = 0, $odr_count = 2);
    my $sngl_resp = 8;
    while ( $k < $odr_count) {
        my ( $odr) = slget( $sngl_resp, { info.$j, odr_list.$k});
        print( "\t\todr $odr\n");
        $k += 1;
    }


    my $sensor_id = 10;
    my $request = slnew_req( "smgr", "report", { report_id => 1, action => "add", report_rate => 30,
                                               item => 0, sensor_id => $sensor_id});
    if ( defined( $request)) {
        print( "request defined\n");
    }
    else {
        print( "request NOT defined\n");
    }
}

---> */


/* ov7251_lib.h
 *
 * DESCRIPTION: ov7251 sensor library
 * Auto-Generated by Sensor Driver Generator tool
 *
 * Copyright (c) 2015-2016 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 */

#ifndef __OV7251_LIB_H__
#define __OV7251_LIB_H__

#include "sensor_lib.h"
#define SENSOR_MODEL "ov7251"

#define NEW 1

#define START_REG_ARRAY \
{ \
  {0x0100, 0x01, 0}, \
}

#define STOP_REG_ARRAY \
{ \
  {0x0100, 0x00, 66000}, \
}

#define GROUPON_REG_ARRAY \
{ \
  {0x3208, 0x00, 0x00}, \
}

#define GROUPOFF_REG_ARRAY \
{ \
  {0x3208, 0x10, 0x00}, \
  {0x3208, 0xa0, 0x00}, \
}

#define INIT0_REG_ARRAY \
{ \
  {0x0103, 0x01, 0x00}, \
  {0x303B, 0x02, 0x00}, \
}

#define MASTER_SYNC_REG_ARRAY \
{ \
  {0x4315, 0x00, 0x00}, \
  {0x3005, 0x02, 0x00}, \
}

#define SLAVE_SYNC_REG_ARRAY \
{ \
  {0x3666, 0x00, 0x00}, \
  {0x3823, 0x30, 0x00}, \
  {0x3824, 0x01, 0x00}, \
  {0x3825, 0x07, 0x00}, \
  {0x3826, 0x00, 0x00}, \
  {0x3827, 0x00, 0x00}, \
  {0x3005, 0x00, 0x00}, \
}

#define RES0_REG_ARRAY \
{ \
    {0x3005, 0x00, 0x00}, \
    {0x3012, 0xc0, 0x00}, \
    {0x3013, 0xd2, 0x00}, \
    {0x3014, 0x04, 0x00}, \
    {0x3016, 0xf0, 0x00}, \
    {0x3017, 0xf0, 0x00}, \
    {0x3018, 0xf0, 0x00}, \
    {0x301a, 0xf0, 0x00}, \
    {0x301b, 0xf0, 0x00}, \
    {0x301c, 0xf0, 0x00}, \
    {0x3023, 0x05, 0x00}, \
    {0x3037, 0xf0, 0x00}, \
    {0x3098, 0x04, 0x00}, \
    {0x3099, 0x28, 0x00}, \
    {0x309a, 0x05, 0x00}, \
    {0x309b, 0x04, 0x00}, \
    {0x30b0, 0x0a, 0x00}, \
    {0x30b1, 0x01, 0x00}, \
    {0x30b3, 0x64, 0x00}, \
    {0x30b4, 0x03, 0x00}, \
    {0x30b5, 0x05, 0x00}, \
    {0x3106, 0xda, 0x00}, \
    {0x3500, 0x00, 0x00}, \
    {0x3501, 0x1f, 0x00}, \
    {0x3502, 0x80, 0x00}, \
    {0x3503, 0x07, 0x00}, \
    {0x3509, 0x10, 0x00}, \
    {0x350b, 0x10, 0x00}, \
    {0x3600, 0x1c, 0x00}, \
    {0x3602, 0x62, 0x00}, \
    {0x3620, 0xb7, 0x00}, \
    {0x3622, 0x04, 0x00}, \
    {0x3626, 0x21, 0x00}, \
    {0x3627, 0x30, 0x00}, \
    {0x3630, 0x44, 0x00}, \
    {0x3631, 0x35, 0x00}, \
    {0x3634, 0x60, 0x00}, \
    {0x3636, 0x00, 0x00}, \
    {0x3662, 0x01, 0x00}, \
    {0x3663, 0x70, 0x00}, \
    {0x3664, 0xf0, 0x00}, \
    {0x3666, 0x0a, 0x00}, \
    {0x3669, 0x1a, 0x00}, \
    {0x366a, 0x00, 0x00}, \
    {0x366b, 0x50, 0x00}, \
    {0x3673, 0x01, 0x00}, \
    {0x3674, 0xff, 0x00}, \
    {0x3675, 0x03, 0x00}, \
    {0x3705, 0xc1, 0x00}, \
    {0x3709, 0x40, 0x00}, \
    {0x373c, 0x08, 0x00}, \
    {0x3742, 0x00, 0x00}, \
    {0x3757, 0xb3, 0x00}, \
    {0x3788, 0x00, 0x00}, \
    {0x37a8, 0x01, 0x00}, \
    {0x37a9, 0xc0, 0x00}, \
    {0x3800, 0x00, 0x00}, \
    {0x3801, 0x04, 0x00}, \
    {0x3802, 0x00, 0x00}, \
    {0x3803, 0x04, 0x00}, \
    {0x3804, 0x02, 0x00}, \
    {0x3805, 0x8b, 0x00}, \
    {0x3806, 0x01, 0x00}, \
    {0x3807, 0xeb, 0x00}, \
    {0x3808, 0x02, 0x00}, \
    {0x3809, 0x80, 0x00}, \
    {0x380a, 0x01, 0x00}, \
    {0x380b, 0xe0, 0x00}, \
    {0x380c, 0x03, 0x00}, \
    {0x380d, 0xa0, 0x00}, \
    {0x380e, 0x06, 0x00}, \
    {0x380f, 0xbc, 0x00}, \
    {0x3810, 0x00, 0x00}, \
    {0x3811, 0x04, 0x00}, \
    {0x3812, 0x00, 0x00}, \
    {0x3813, 0x05, 0x00}, \
    {0x3814, 0x11, 0x00}, \
    {0x3815, 0x11, 0x00}, \
    {0x3820, 0x40, 0x00}, \
    {0x3821, 0x00, 0x00}, \
    {0x382f, 0x0e, 0x00}, \
    {0x3832, 0x00, 0x00}, \
    {0x3833, 0x05, 0x00}, \
    {0x3834, 0x00, 0x00}, \
    {0x3835, 0x0c, 0x00}, \
    {0x3837, 0x00, 0x00}, \
    {0x3b80, 0x00, 0x00}, \
    {0x3b81, 0xa5, 0x00}, \
    {0x3b82, 0x10, 0x00}, \
    {0x3b83, 0x00, 0x00}, \
    {0x3b84, 0x08, 0x00}, \
    {0x3b85, 0x00, 0x00}, \
    {0x3b86, 0x01, 0x00}, \
    {0x3b87, 0x00, 0x00}, \
    {0x3b88, 0x00, 0x00}, \
    {0x3b89, 0x00, 0x00}, \
    {0x3b8a, 0x00, 0x00}, \
    {0x3b8b, 0x05, 0x00}, \
    {0x3b8c, 0x00, 0x00}, \
    {0x3b8d, 0x00, 0x00}, \
    {0x3b8e, 0x00, 0x00}, \
    {0x3b8f, 0x1a, 0x00}, \
    {0x3b94, 0x05, 0x00}, \
    {0x3b95, 0xf2, 0x00}, \
    {0x3b96, 0x40, 0x00}, \
    {0x3c00, 0x89, 0x00}, \
    {0x3c01, 0x63, 0x00}, \
    {0x3c02, 0x01, 0x00}, \
    {0x3c03, 0x00, 0x00}, \
    {0x3c04, 0x00, 0x00}, \
    {0x3c05, 0x03, 0x00}, \
    {0x3c06, 0x00, 0x00}, \
    {0x3c07, 0x06, 0x00}, \
    {0x3c0c, 0x01, 0x00}, \
    {0x3c0d, 0xd0, 0x00}, \
    {0x3c0e, 0x02, 0x00}, \
    {0x3c0f, 0x0a, 0x00}, \
    {0x4001, 0x42, 0x00}, \
    {0x4004, 0x04, 0x00}, \
    {0x4005, 0x00, 0x00}, \
    {0x404e, 0x01, 0x00}, \
    {0x4300, 0xff, 0x00}, \
    {0x4301, 0x00, 0x00}, \
    {0x4315, 0x00, 0x00}, \
    {0x4501, 0x48, 0x00}, \
    {0x4600, 0x00, 0x00}, \
    {0x4601, 0x4e, 0x00}, \
    {0x4801, 0x0f, 0x00}, \
    {0x4806, 0x0f, 0x00}, \
    {0x4819, 0xaa, 0x00}, \
    {0x4823, 0x3e, 0x00}, \
    {0x4837, 0x19, 0x00}, \
    {0x4a0d, 0x00, 0x00}, \
    {0x4a47, 0x7f, 0x00}, \
    {0x4a49, 0xf0, 0x00}, \
    {0x4a4b, 0x30, 0x00}, \
    {0x5000, 0x85, 0x00}, \
    {0x5001, 0x80, 0x00}, \
}

static sensor_lib_t sensor_lib_ptr =
{
  .sensor_slave_info =
  {
    .sensor_name = SENSOR_MODEL,
    .slave_addr = 0xC0,
    .i2c_freq_mode = SENSOR_I2C_MODE_FAST,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .sensor_alt_slave_info =
    {
      .slave1_reg = 0x0109,
      .slave1_addr = 0xC0,
      .slave2_reg = 0x302B,
      .slave2_addr = 0xE0,
      .alt_slave_mode = SENSOR_ALT_SLAVE_DUAL,
    },
    .sensor_id_info =
    {
      .sensor_id_reg_addr = 0x300a,
      .sensor_id = 0x7750,
    },
    .power_setting_array =
    {
      .power_setting_a =
      {
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VANA,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VIO,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VDIG,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_VANA,
          .config_val = GPIO_OUT_HIGH,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_HIGH,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_STANDBY,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_STANDBY,
          .config_val = GPIO_OUT_HIGH,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_CLK,
          .seq_val = CAMERA_MCLK,
          .config_val = 0,
          .delay = 1,
        },
      },
      .size = 9,
      .power_down_setting_a =
      {
        {
          .seq_type = CAMERA_POW_SEQ_CLK,
          .seq_val = CAMERA_MCLK,
          .config_val = 0,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_HIGH,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_STANDBY,
          .config_val = GPIO_OUT_HIGH,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_STANDBY,
          .config_val = GPIO_OUT_LOW,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VDIG,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VIO,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VANA,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_VANA,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
      },
      .size_down = 9,
    },
  },
  .sensor_output =
  {
    .output_format = SENSOR_BAYER,
    .connection_mode = SENSOR_MIPI_CSI,
    .raw_output = SENSOR_10_BIT_DIRECT,
    .filter_arrangement = SENSOR_GBRG,
  },
  .output_reg_addr =
  {
    .x_output = 0x3808,
    .y_output = 0x380a,
    .line_length_pclk = 0x380c,
    .frame_length_lines = 0x380e,
  },
  .exp_gain_info =
  {
    .coarse_int_time_addr = 0x3501,
    .global_gain_addr = 0x350a,
    .vert_offset = 12,
  },
  .aec_info =
  {
    .min_gain = 1.0,
    .max_gain = 8.0,
    .max_analog_gain = 8.0,
    .max_linecount = 928,
  },
  .sensor_num_frame_skip = 2,
  .sensor_num_HDR_frame_skip = 0,
  .sensor_max_pipeline_frame_delay = 2,
  .pixel_array_size_info =
  {
    .active_array_size =
    {
      .width = 640,
      .height = 480,
    },
    .left_dummy = 0,
    .right_dummy = 0,
    .top_dummy = 0,
    .bottom_dummy = 0,
  },
  .color_level_info =
  {
    .white_level = 1023,
    .r_pedestal = 64,
    .gr_pedestal = 64,
    .gb_pedestal = 64,
    .b_pedestal = 64,
  },
  .sensor_stream_info_array =
  {
    .sensor_stream_info =
    {
      {
        .vc_cfg_size = 1,
        .vc_cfg =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
        },
        .pix_data_fmt =
        {
          SENSOR_BAYER,
        },
      },
    },
    .size = 1,
  },
  .start_settings =
  {
    .reg_setting_a = START_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .stop_settings =
  {
    .reg_setting_a = STOP_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .groupon_settings =
  {
    .reg_setting_a = GROUPON_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .groupoff_settings =
  {
    .reg_setting_a = GROUPOFF_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .embedded_data_enable_settings =
  {
    .reg_setting_a = 0,
    .size = 0,
    .addr_type = 0,
    .data_type = 0,
    .delay = 0,
  },
  .embedded_data_disable_settings =
  {
    .reg_setting_a = 0,
    .size = 0,
    .addr_type = 0,
    .data_type = 0,
    .delay = 0,
  },
  .dualcam_master_settings =
  {
    .reg_setting_a = MASTER_SYNC_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .dualcam_slave_settings =
  {
    .reg_setting_a = SLAVE_SYNC_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .test_pattern_info =
  {
    .test_pattern_settings =
    {
      {
        .mode = SENSOR_TEST_PATTERN_OFF,
        .settings =
        {
          .reg_setting_a =
           {
             {0x5040, 0x00, 0x00},
             {0x8008, 0x00, 0x00},
           },
          .size = 2,
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_BYTE_DATA,
          .delay = 0,
        },
      },
      {
        .mode = SENSOR_TEST_PATTERN_SOLID_COLOR,
        .settings =
        {
          .reg_setting_a = {{0x8008, 0x01, 0x00}},
          .size = 1,
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_BYTE_DATA,
          .delay = 0,
        },
      },
      {
        .mode = SENSOR_TEST_PATTERN_COLOR_BARS,
        .settings =
        {
          .reg_setting_a = {{0x5040, 0x80, 0x00}},
          .size = 1,
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_BYTE_DATA,
          .delay = 0,
        },
      },
      {
        .mode = SENSOR_TEST_PATTERN_PN9,
        .settings =
        {
          .reg_setting_a = {{0x8008, 0x02, 0x00}},
          .size = 1,
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_BYTE_DATA,
          .delay = 0,
        },
      },
    },
    .size = 4,
    .solid_mode_addr =
    {
      .r_addr = 0x8006,
      .gr_addr = 0x8004,
      .gb_addr = 0x8002,
      .b_addr = 0x8000,
    },
  },
  .init_settings_array =
  {
    .reg_settings =
    {
      {
        .reg_setting_a = INIT0_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
    },
    .size = 1,
  },
  .res_settings_array =
  {
    .reg_settings =
    {
      /* Res 0 */
      {
        .reg_setting_a = RES0_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
    },
    .size = 1,
  },
  .out_info_array =
  {
    .out_info =
    {
      /* Res 0 */
      {
        .x_output = 640,
        .y_output = 480,
        .line_length_pclk = 0x3a0,
        .frame_length_lines = 0x6bc,
        .vt_pixel_clk = 47884800,
        .op_pixel_clk = 48000000,
        .binning_factor = 1,
        .min_fps = 7.5,
        .max_fps = 30.0,
        .mode = SENSOR_DEFAULT_MODE,
        .offset_x = 0,
        .offset_y = 0,
        .scale_factor = 0,
      },
    },
    .size = 1,
  },
  .csi_params =
  {
    .lane_cnt = 1,
    .settle_cnt = 0x0E,
    .is_csi_3phase = 0,
  },
  .csid_lut_params_array =
  {
    .lut_params =
    {
          {
            .num_cid = 1,
            .vc_cfg_a =
            {
              {
                .cid = 0,
                .dt = CSI_RAW10,
                .decode_format = CSI_DECODE_10BIT
              },
            },
          },


    },
    .size = 1,
  },
  .crop_params_array =
  {
    .crop_params =
    {
      /* Res 0 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
    },
    .size = 1,
  },
  .exposure_func_table =
  {
    .sensor_calculate_exposure = sensor_calculate_exposure,
    .sensor_fill_exposure_array = sensor_fill_exposure_array,
  },
  .meta_data_out_info_array =
  {
    .meta_data_out_info =
    {
      {
        .width = 0,
        .height = 0,
        .stats_type = 0,
      },
    },
    .size = 0,
  },
  .rolloff_config =
  {
    .enable = FALSE,
    .full_size_info =
    {
      .full_size_width = 0,
      .full_size_height = 0,
      .full_size_left_crop = 0,
      .full_size_top_crop = 0,
    },
  },
  .adc_readout_time = 0,
};

#endif

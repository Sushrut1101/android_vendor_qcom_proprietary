/*****************************************************************************
  @FILE     sns_sam_pmd_v01.idl

  @BRIEF    Message definition for the Persistent Motion Detector
            algorithm service

  @DESCRIPTION
  This file defines messages used by Persistent Motion Detector
  algorithm service.

  As prerequisite, the sensor algorithm must use the common Interface
  defined in the Sensor algorithm framework.

  The messages defined herein will be passed to the Sensor framework using
  the sensor1_write() API.

  Copyright (c) 2016 Qualcomm Technologies, Inc.
  All Rights Reserved.
  Confidential and Proprietary - Qualcomm Technologies, Inc.

*****************************************************************************/
include "sns_sam_common_v01.idl";

revision 0;

const SNS_SAM_PMD_SUID = 0x7f073418bb12f336;

//! @ENUM SNS_SAM_PMD_MODE_ENUM
enum
{
    SNS_SAM_PMD_MODE_REST      = 0,
    SNS_SAM_PMD_MODE_MOTION    = 1,
    SNS_SAM_PMD_MODE_BOTH      = 2
} sns_sam_pmd_mode_e;

//! @ENUM SNS_SAM_PMD_STATE_ENUM
enum
{
    SNS_SAM_PMD_STATE_REST      = 0,
    SNS_SAM_PMD_STATE_MOTION    = 1
} sns_sam_pmd_state_e;

//============================================================================
/** @COMMAND SNS_SAM_PMD_ENABLE
    @BRIEF This command enables the pmd algorithm.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//! @MSG     SNS_SAM_PMD_ENABLE_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
    mandatory sns_sam_pmd_mode_e mode;
    /**<
      Monitoring mode
      SNS_SAM_PMD_MODE_REST:   PMD monitors for peristent rest
      SNS_SAM_PMD_MODE_MOTION: PMD monitors for peristent motion
      SNS_SAM_PMD_MODE_BOTH:   PMD monitors for both peristent rest and motion
      */

    optional uint32 monitor_period;
    /**<
      Monitoring time period in milliseconds [Default 5000].
      PMD will generate an indication when REST/MOTION state persists
      for this time period.
      */
    optional sns_suspend_notification_s notify_suspend;
    /**<
      Identifies whether indications for this request are to be sent
      when the processor is in the Suspend state.

      If this field is not specified, the default value is set to:
      notify_suspend->proc_type = SNS_PROC_APPS
      notify_suspend->send_indications_during_suspend = FALSE

      This field does not have any bearing on error indication
      messages, which are sent even during Suspend.
      */
} sns_sam_pmd_enable_req_msg;

//! @MSG     SNS_SAM_PMD_ENABLE_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s resp = 2;

  optional uint8 instance_id;
  /**<
    Algorithm instance ID maintained/assigned by SAM.
    The client shall use this instance ID for future messages associated with
    current algorithm instance.
    */
} sns_sam_pmd_enable_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_PMD_DISABLE
    @BRIEF This command disables the pmd algorithm.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//! @MSG     SNS_SAM_PMD_DISABLE_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
  mandatory uint8 instance_id;
  /**< To identify the algorithm instance to be disabled.  */
} sns_sam_pmd_disable_req_msg;

//! @MSG     SNS_SAM_PMD_DISABLE_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s resp = 2;

  optional uint8 instance_id;
  /**< Instance id identifies the algorithm instance.  */
} sns_sam_pmd_disable_resp_msg;

//============================================================================
/** @COMMAND SNS_SAM_PMD_REPORT
    @BRIEF Output report from the pmd algorithm.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//! @MSG     SNS_SAM_PMD_REPORT_IND
//! @TYPE    Indication
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory uint8 instance_id;
  /**< Instance id identifies the algorithm instance.  */

  mandatory uint32 timestamp;
  /**< Timestamp at which the peristent state was detected in SSC ticks  */

  mandatory sns_sam_pmd_state_e state;
  /**< The peristent state that was detected by PMD  */

} sns_sam_pmd_report_ind_msg;


//============================================================================
/** @COMMAND SNS_SAM_PMD_ERROR
    @BRIEF Asynchronous error report from the pmd algorithm.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//! @MSG     SNS_SAM_PMD_ERROR_IND
//! @TYPE    Indication
//! @SENDER  Service
//============================================================================

message {
  mandatory uint8 instance_id;
  /**< Instance id identifies the algorithm instance.  */

  mandatory uint32 timestamp;
  /**< Timestamp of when the error was detected; in SSC ticks */

  mandatory uint8 error;
  /**< sensors error code */

} sns_sam_pmd_error_ind_msg;

//============================================================================
/** @COMMAND SNS_SAM_PMD_CANCEL
    @BRIEF Cancels all requests to the algorithm service from this client.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//============================================================================
/** @COMMAND SNS_SAM_PMD_VERSION
    @BRIEF This command requests algorithm service version.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//============================================================================
// Service definition
//============================================================================
service SNS_SAM_PMD_SVC {
  //! @ID SNS_SAM_PMD_CANCEL
  sns_common_cancel_req_msg        SNS_SAM_PMD_CANCEL_REQ,
  sns_common_cancel_resp_msg       SNS_SAM_PMD_CANCEL_RESP
    = 0x00;

  //! @ID SNS_SAM_PMD_VERSION
  sns_common_version_req_msg       SNS_SAM_PMD_VERSION_REQ,
  sns_common_version_resp_msg      SNS_SAM_PMD_VERSION_RESP
    = 0x01;

  //! @ID SNS_SAM_PMD_ENABLE
  sns_sam_pmd_enable_req_msg       SNS_SAM_PMD_ENABLE_REQ,
  sns_sam_pmd_enable_resp_msg      SNS_SAM_PMD_ENABLE_RESP
    = 0x02;

  //! @ID SNS_SAM_PMD_DISABLE
  sns_sam_pmd_disable_req_msg      SNS_SAM_PMD_DISABLE_REQ,
  sns_sam_pmd_disable_resp_msg     SNS_SAM_PMD_DISABLE_RESP
    = 0x03;


  //! @ID SNS_SAM_PMD_REPORT
  sns_sam_pmd_report_ind_msg       SNS_SAM_PMD_REPORT_IND
    = 0x05;


  //! @ID SNS_SAM_PMD_ERROR
  sns_sam_pmd_error_ind_msg        SNS_SAM_PMD_ERROR_IND
    = 0x06;

  //! @ID SNS_SAM_GET_ALGO_ATTRIBUTES
  sns_sam_get_algo_attrib_req_msg            SNS_SAM_PMD_GET_ATTRIBUTES_REQ,
  sns_sam_get_algo_attrib_resp_msg           SNS_SAM_PMD_GET_ATTRIBUTES_RESP
    = 0x24;

} = SNS_QMI_SVC_ID_63;

//============================================================================
// File footer
//============================================================================
/**
@FOOTER
*/

//============================================================================
// End of Module
//============================================================================

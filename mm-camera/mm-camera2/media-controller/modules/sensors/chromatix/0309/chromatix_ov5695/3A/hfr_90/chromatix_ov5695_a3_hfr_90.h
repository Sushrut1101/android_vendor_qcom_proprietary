/*========================================================================
                          C H R O M A T I X

   DESCRIPTION
   Auto-Generated by Chromatix tool defining camera tunable parameters.

Copyright (c) 2016 Qualcomm Technologies, Inc.
All Rights Reserved.
Confidential and Proprietary - Qualcomm Technologies, Inc.
==========================================================================*/

/* Header Version Info */
{
   0x0309, /* Chromatix Version */
   0, /* Revision */
   /* Chromatix App Version */
   {
      6, /* Major */
      11, /* Minor */
      0, /* Revision */
      0, /* Build */
   },
   HEADER_3A, /* Header Type */
   0, /* Is Compressed */
   0, /* Is Mono */
   0, /* Is Video */
   0, /* Reserved Align */
   MODE_UNKNOWN, /* Chromatix Mode */
   0, /* Target ID */
   0, /* Chromatix ID */
   /* Reserved */
   {
      0, 0, 0, 0
   }
},
/* AAA Version */
{
   0x0309, /* Chromatix Version */
   0x0001, /* 3A Header Version */
},
/* Bayer AWB */
{
   /* Basic Tuning */
   {

      /*********************************************************************/
      // Feature name: AWB Basic Tuning.
      //
      // Variable name: reference.
      // AWB reference points used for auto WB calculation.
      //
      // Variable name: indoor_index.
      // The exposure index indicates the indoor condition.
      //
      // Variable name: outdoor_index.
      // The exposure index indicates the outdoor condition.
      //
      // Variable name: awb_min_gains.
      // Minimum AWB gains.
      //
      // Variable name: awb_max_gains.
      // Maximum AWB gains.
      //
      // Variable name: awb_self_cal_enable.
      // Enable/Disable of self calibration.
      //
      // Variable name: awb_self_cal_adj_ratio_high.
      // Variable name: awb_self_cal_adj_ratio_low.
      //
      // Variable name: AWB_lowlight_LUT.
      // AWB lowlight look up table.
      //
      // Variable name: awb_adjust_gain_table.
      // AWB adjust gain tables for bright/normal/low light conditions.
      //
      // Variable name: outlier_distances.
      // The outlier distances for all(or individual) clusters.
      /*********************************************************************/

      /* AWB Reference Points */
      {
         /* D65 AWB Reference Point */
         {
            0.490000f,  /* R/G ratio */
            0.790800f,  /* B/G ratio */
         },
         /* Shade AWB Reference Point */
         {
            0.479000f,  /* R/G ratio */
            0.823700f,  /* B/G ratio */
         },
         /* A AWB Reference Point */
         {
            0.790200f,  /* R/G ratio */
            0.456800f,  /* B/G ratio */
         },
         /* TL84 AWB Reference Point */
         {
            0.708400f,  /* R/G ratio */
            0.544000f,  /* B/G ratio */
         },
         /* CoolWhite AWB Reference Point */
         {
            0.602900f,  /* R/G ratio */
            0.541800f,  /* B/G ratio */
         },
         /* Horizon AWB Reference Point */
         {
            0.924700f,  /* R/G ratio */
            0.408600f,  /* B/G ratio */
         },
         /* D50 AWB Reference Point */
         {
            0.551900f,  /* R/G ratio */
            0.673800f,  /* B/G ratio */
         },
         /* Cust. Fluor. AWB Reference Point */
         {
            0.498100f,  /* R/G ratio */
            0.635700f,  /* B/G ratio */
         },
         /* Noon AWB Reference Point */
         {
            0.551900f,  /* R/G ratio */
            0.673800f,  /* B/G ratio */
         },
         /* Custom Daylight AWB Reference Point */
         {
            0.551900f,  /* R/G ratio */
            0.673800f,  /* B/G ratio */
         },
         /* Custom A AWB Reference Point */
         {
            0.790200f,  /* R/G ratio */
            0.456800f,  /* B/G ratio */
         },
         /* U30 AWB Reference Point */
         {
            0.790200f,  /* R/G ratio */
            0.456800f,  /* B/G ratio */
         },
         /* Custom Daylight 1 Reference Point */
         {
            0.551900f,  /* R/G ratio */
            0.673800f,  /* B/G ratio */
         },
         /* Custom Daylight 2 Reference Point */
         {
            0.551900f,  /* R/G ratio */
            0.673800f,  /* B/G ratio */
         },
         /* Custom Flo 1 Reference Point */
         {
            0.498100f,  /* R/G ratio */
            0.635700f,  /* B/G ratio */
         },
         /* Custom Flo 2 Reference Point */
         {
            0.498100f,  /* R/G ratio */
            0.635700f,  /* B/G ratio */
         },
      },
      290, /* Indoor Index */
      190, /* Outdoor Index */
      /* AWB Min Gains - RGB */
      {1.000000f, 1.000000f, 1.000000f},
      /* AWB Max Gains - RGB */
      {3.990000f, 3.990000f, 3.990000f},
      0, /* AWB Self-Calibrate */
      1.150000f, /* Self Cal Adj Ratio High */
      0.900000f, /* Self Cal Adj Ratio Low */

      /*********************************************************************/
      // Feature name: AWB Lowlight Adj LUT.
      // Lowlight look up table
      //
      // Variable name: Enable
      // Enable/disable to use low light LUT.
      // Default value: 1 (enable).
      // Data range: 0 to 1 (0: disable, 1: enable).
      //
      // Variable name: lux_index.
      // Trigger exposure index for interpolation.
      // Default value: 0.
      // Data range: 0 to 1000.
      //
      // Variable name: green_rg_offset_adj.
      // Offset value for moving right side of green zone.
      // Default value: -100.
      // Data range: -100 to 100.
      //
      // Variable name: green_bg_offset_adj.
      // Offset value for moving top side of green zone.
      // Default value: -100.
      // Data range: -100 to 100.
      //
      // Variable name: outlier_dist_adj.
      // Outlier distance adjustment.
      // Default value: 0.
      // Data range: 0 to 16.
      /*********************************************************************/

      /* Lowlight LUT */
      {
         1, /* Enable */
         {
            /* Entry 0 */
            {
               280, /* Lux Index */
               -30.000000f, /* Green RG Offset Adj */
               -0.000000f, /* Green BG Offset Adj */
               0.000000f, /* Outlier Dist Adj */
            },
            /* Entry 1 */
            {
               310, /* Lux Index */
               -30.496380f, /* Green RG Offset Adj */
               -30.776225f, /* Green BG Offset Adj */
               0.000000f, /* Outlier Dist Adj */
            },
            /* Entry 2 */
            {
               350, /* Lux Index */
               -52.603243f, /* Green RG Offset Adj */
               -51.730360f, /* Green BG Offset Adj */
               0.330000f, /* Outlier Dist Adj */
            },
            /* Entry 3 */
            {
               370, /* Lux Index */
               -60.928494f, /* Green RG Offset Adj */
               -60.923221f, /* Green BG Offset Adj */
               0.330000f, /* Outlier Dist Adj */
            },
            /* Entry 4 */
            {
               388, /* Lux Index */
               -100.962530f, /* Green RG Offset Adj */
               -100.577155f, /* Green BG Offset Adj */
               1.000000f, /* Outlier Dist Adj */
            },
            /* Entry 5 */
            {
               415, /* Lux Index */
               -100.962530f, /* Green RG Offset Adj */
               -100.644009f, /* Green BG Offset Adj */
               2.000000f, /* Outlier Dist Adj */
            },
         },
      },
      /* Gain Adjust */
      {

         /*********************************************************************/
         // Feature name: AWB Adjust Gain Tables
         //
         // Variable name: awb_interpolate_gain_adj_enable.
         //
         // Variable name: exp_index_bright_light_gain_adjust.
         // Gain adjust table trigger point between bright and normal.
         //
         // Variable name: exp_index_lowlight_gain_adjust.
         // Gain adjust table trigger point betewen normal and lowlight.
         //
         // Variable name: control_gain_adj_lowlight.
         // Default value: 0 for lux_index -- remove later
         //
         // Variable name: gain_adj_brightlight.
         // Bright light adjust gain table.
         //
         // Variable name: gain_adj_normallight.
         // Normal light adjust gain table.
         //
         // Variable name: gain_adj_lowlight.
         // Lowlight adjust gain table.
         /*********************************************************************/

         0, /* Interpolate Gain Adj Enable */
         /* Gain Adj Bright Light Trigger */
         {
            2.000000f, /* Gain Start */
            1.000000f, /* Gain End */
            206, /* Lux Index Start */
            185, /* Lux Index End */
         },
         /* Gain Adj Lowlight Trigger */
         {
            19.799999f, /* Gain Start */
            22.000000f, /* Gain End */
            370, /* Lux Index Start */
            412, /* Lux Index End */
         },
         0, /* Control Method - 1 = Gain, 0 = Lux Index */
         /* AWB Bright Light Gain Adjust */
         {
            /* D65 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* D75 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* A */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* TL84 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* CW */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Horizon */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* D50 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Cust Flo */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Noon */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Daylight */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Cust A */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* U30 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Custom Daylight 1 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Custom Daylight 2 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Custom Flo 1 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Custom Flo 2 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
         },
         /* AWB Gain Adjust */
         {
            /* D65 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* D75 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* A */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* TL84 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* CW */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Horizon */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* D50 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Cust Flo */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Noon */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Daylight */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Cust A */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* U30 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Custom Daylight 1 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Custom Daylight 2 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Custom Flo 1 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Custom Flo 2 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
         },
         /* AWB Lowlight Gain Adjust */
         {
            /* D65 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* D75 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* A */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* TL84 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* CW */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Horizon */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* D50 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Cust Flo */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Noon */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Daylight */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Cust A */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* U30 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Custom Daylight 1 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Custom Daylight 2 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Custom Flo 1 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
            /* Custom Flo 2 */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
         },
      },
      /* Outlier Distances */
      {

         /*********************************************************************/
         // Feature name: Outlier Distance
         //
         // Variable name: outlier_distance.
         // Outlier distance for all clusters, globally applied.
         // Default value: 16.
         // Data Range: 4 to 20.
         //
         // Variable name: outlier_distance_day.
         // Outlier distance for the day cluseter.
         // Default value: 16.
         // Data Range: 4 to 20.
         //
         // Variable name: outlier_distance_f.
         // Outlier distance for the F cluster.
         // Default value: 16.
         // Data Range: 4 to 20.
         //
         // Variable name: outlier_distance_a.
         // Outlier distance for the A cluster.
         // Default value: 16.
         // Data Range: 4 to 20.
         //
         // Variable name: outlier_distance_h.
         // Outlier distnace for the H cluster.
         // Default value: 16.
         // Data Range: 4 to 20.
         //
         // Variable name: outlier_distance_customday.
         // Outlier distance for the custom day cluster.
         // Default value: 16.
         // Data Range: 4 to 20.
         //
         // Variable name: outlier_distance_customf.
         // Outlier distance for the custom F cluster.
         // Default value: 16.
         // Data Range: 4 to 20.
         //
         // Variable name: awb_day_cluster_left_outlier_distance.
         // The outlier distance for left side of the day light line.
         // Default value: 16.
         // Data range: 8 to 100.
         // Constraints: It can vary from 8 to 100 for the grid system of 241 grids.
         // Effect: Smaller value reduces the outlier distance for the left side of the day light line.
         //
         // Variable name: awb_day_cluster_top_outlier_distance.
         // The outlier distance for top of day light zone.
         // Default value: 16.
         // Data range: 8 to 100.
         // Constraints: It can vary from 8 to 100 for the grid system of 241 grids.
         // Effect: Smaller value reduces the outlier distance for the top of the day light zone.
         //
         // Variable name: awb_a_h_cluster_top_outlier_distance.
         // The outlier distance for left side of A and H light zones.
         // Default value: 16.
         // Data range: 8 to 100.
         // Constraints: It can vary from 8 to 100 for the grid system of 241 grids.
         // Effect: Smaller value reduces the outlier distance for the left side of A and H light zones
         /*********************************************************************/

         16, /* Outlier Distance */
         16, /* Outlier Distance Day */
         16, /* Outlier Distance F */
         16, /* Outlier Distance A */
         16, /* Outlier Distance H */
         16, /* Outlier Distance Custom Day */
         14, /* Outlier Distance Custom F */
         /* Special */
         {
            14, /* Outlier Distance for Left Side of the Day Light Line */
            14, /* Outlier Distance for Top Side of the Day Light Zone */
            10, /* Outlier Distance for Left Side of the A/H Light Zone */
         },
      },
   },
   /* Weights */
   {
      /* Weight Vector */
      {

         /*********************************************************************/
         // Feature name: AWB Weight Vector.
         // Weight vector tables in terms of illuminant and distance.
         //
         // Variable name: weight_vector.
         // Weight vector corresponding to different range of exposure index and different color temparature (subzones)
         //   The actual table size is 38x13 (up to now).
         //   38: total number of subzones.
         //   13: total number of different exposure values.
         //
         // Default exposure values (calculated):
         // [0, outdoor_index/4, outdoor_index/2, outdoor_index*3/4,
         //  outdoor_index, (outdoor_index+inoutdoor_midpoint)/2,
         // inoutdoor_midpoint, (inoutdoor_midpoint+indoor_index)/2,
         // indoor_index, ((3*indoor_index+max_exp_index)/4),
         // (indoor_index+max_exp_index)/2,  ((3*max_exp_index+indoor_index)/4),
         // max_exp_index].
         //
         // 38 columns in each entry correspond to color temparature associated with subzones defined in awb_hybrid_decision_type.
         //
         // Data range: 0 to 10.
         // Constraints: None.
         // Effect: Higher values give higher weight to the stat at the exposure index in the corresponding range.
         //
         // Default values:
         // {
         //   0,
         //   {1,  1,  1,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  3,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0}
         // },
         // {
         //   47,
         //   {1,  1,  1,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  3,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0}
         // },
         // {
         //   95,
         //   {1,  1,  1,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  3,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0}
         // },
         // {
         //   143,
         //   {1,  1,  1,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  3,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0}
         // },
         // {
         //   190,
         //   {1,    1,  1,  6,  6,  6,  6,  4,  4,  4,  6,  6,  4,  4,  4,  2,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0}
         // },
         // {
         //    215,
         // {4,  4,  4,  6,  6,  6,  6,  4,  4,  4,  6,  6,  4,  4,  4,  2,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0}
         // },
         // {
         //   240,
         //   {6,  6,  6,  10, 10, 10, 10, 4,  4,  4,  10, 10, 4,  4,  4,  2,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0}
         // },
         // {
         //   265,
         //   {6,  6,  6,  10, 10, 10, 10, 8,  8,  8,  10, 10, 8,  8,  8,  4,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0}
         // },
         // {
         //   290,
         //   {1,  1,  1,  6,  6,  6,  6,  8,  8,  8,  6,  6,  8,  8,  8,  4,  1,  1,  1,  1,  2,  2,  2,  2,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0}
         // },
         // {
         //   323,
         //   {1,  1,  1,  2,  2,  2,  2,  8,  8,  8,  2,  2,  8,  8,  8,  4,  1,  1,  1,  1,  2,  2,  2,  2,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0}
         // },
         // {
         //   356,
         //   {1,  1,  1,  2,  2,  2,  2,  8,  8,  8,  2,  2,  8,  8,  8,  4,  1,  1,  1,  1,  2,  2,  2,  2,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0}
         // },
         // {
         //   389,
         //   {1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  1,  1,  1,  1,  2,  2,  2,  2,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0}
         // },
         // {
         //   422,
         //   {1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0}
         // }
         //
         // Variable name: distance_weight_table[241].
         // Distance weight table.
         // Default value: 1.
         // Data range: 0 to 3888.
         // Constraints: None
         // Effect: This array is used to control the distance weighting.  The index to the LUT is the grid distance.
         //         If the outlier distance is N, only the first N entries of this weight table is non-zero, and all other entries are 0s.
         //         With a Gaussian kernel, the stat closer to reference points are given higher weight than stat farther away.
         //         With equal weight, all samples in the grey zone are treated equally.
         /*********************************************************************/

         /* Region 0 */
         {
            0, /* Index */
            {
               1, /* AWB_DAY_D75 */
               1, /* AWB_DAY_D75_D65_1 */
               1, /* AWB_DAY_D75_D65_2 */
               5, /* AWB_DAY_D75_D65_3 */
               5, /* AWB_DAY_D65 */
               5, /* AWB_DAY_D65_D50_1 */
               5, /* AWB_DAY_D65_D50_2 */
               5, /* AWB_DAY_D65_D50_3 */
               5, /* AWB_DAY_D50 */
               5, /* AWB_DAY_NOON_LINE_0 */
               5, /* AWB_DAY_NOON_LINE_1 */
               5, /* AWB_DAY_NOON_LINE_2 */
               5, /* AWB_DAY_NOON_LINE_3 */
               5, /* AWB_DAY_NOON_LINE_4 */
               5, /* AWB_DAY_D50_FLO_1 */
               3, /* AWB_DAY_D50_FLO_2 */
               1, /* AWB_DAY_D50_FLO_3 */
               0, /* AWB_DAY_D50_FLO_4 */
               0, /* AWB_F_TL84 */
               0, /* AWB_F_TL84_CW_2 */
               0, /* AWB_F_TL84_CW_3 */
               0, /* AWB_F_CW */
               0, /* AWB_F_FLO_A_1 */
               0, /* AWB_F_FLO_A_2 */
               0, /* AWB_F_FLO_A_3 */
               0, /* AWB_A */
               0, /* AWB_AH_A_H_1 */
               0, /* AWB_AH_A_H_2 */
               0, /* AWB_AH_A_H_3 */
               0, /* AWB_H */
               0, /* AWB_CUSTOM_DAYLIGHT1 */
               0, /* AWB_CUSTOM_DAYLIGHT2 */
               0, /* AWB_CUSTOM_DAYLIGHT3 */
               0, /* AWB_CUSTOM_FLO1 */
               0, /* AWB_CUSTOM_FLO2 */
               0, /* AWB_CUSTOM_FLO3 */
               0, /* AWB_CUSTOM_A */
               0  /* AWB_U30 */
            },
         },
         /* Region 1 */
         {
            47, /* Index */
            {
               1, /* AWB_DAY_D75 */
               1, /* AWB_DAY_D75_D65_1 */
               1, /* AWB_DAY_D75_D65_2 */
               5, /* AWB_DAY_D75_D65_3 */
               5, /* AWB_DAY_D65 */
               5, /* AWB_DAY_D65_D50_1 */
               5, /* AWB_DAY_D65_D50_2 */
               5, /* AWB_DAY_D65_D50_3 */
               5, /* AWB_DAY_D50 */
               5, /* AWB_DAY_NOON_LINE_0 */
               5, /* AWB_DAY_NOON_LINE_1 */
               5, /* AWB_DAY_NOON_LINE_2 */
               5, /* AWB_DAY_NOON_LINE_3 */
               5, /* AWB_DAY_NOON_LINE_4 */
               5, /* AWB_DAY_D50_FLO_1 */
               3, /* AWB_DAY_D50_FLO_2 */
               1, /* AWB_DAY_D50_FLO_3 */
               0, /* AWB_DAY_D50_FLO_4 */
               0, /* AWB_F_TL84 */
               0, /* AWB_F_TL84_CW_2 */
               0, /* AWB_F_TL84_CW_3 */
               0, /* AWB_F_CW */
               0, /* AWB_F_FLO_A_1 */
               0, /* AWB_F_FLO_A_2 */
               0, /* AWB_F_FLO_A_3 */
               0, /* AWB_A */
               0, /* AWB_AH_A_H_1 */
               0, /* AWB_AH_A_H_2 */
               0, /* AWB_AH_A_H_3 */
               0, /* AWB_H */
               0, /* AWB_CUSTOM_DAYLIGHT1 */
               0, /* AWB_CUSTOM_DAYLIGHT2 */
               0, /* AWB_CUSTOM_DAYLIGHT3 */
               0, /* AWB_CUSTOM_FLO1 */
               0, /* AWB_CUSTOM_FLO2 */
               0, /* AWB_CUSTOM_FLO3 */
               0, /* AWB_CUSTOM_A */
               0  /* AWB_U30 */
            },
         },
         /* Region 2 */
         {
            95, /* Index */
            {
               1, /* AWB_DAY_D75 */
               1, /* AWB_DAY_D75_D65_1 */
               1, /* AWB_DAY_D75_D65_2 */
               5, /* AWB_DAY_D75_D65_3 */
               5, /* AWB_DAY_D65 */
               5, /* AWB_DAY_D65_D50_1 */
               5, /* AWB_DAY_D65_D50_2 */
               5, /* AWB_DAY_D65_D50_3 */
               5, /* AWB_DAY_D50 */
               5, /* AWB_DAY_NOON_LINE_0 */
               5, /* AWB_DAY_NOON_LINE_1 */
               5, /* AWB_DAY_NOON_LINE_2 */
               5, /* AWB_DAY_NOON_LINE_3 */
               5, /* AWB_DAY_NOON_LINE_4 */
               5, /* AWB_DAY_D50_FLO_1 */
               3, /* AWB_DAY_D50_FLO_2 */
               1, /* AWB_DAY_D50_FLO_3 */
               0, /* AWB_DAY_D50_FLO_4 */
               0, /* AWB_F_TL84 */
               0, /* AWB_F_TL84_CW_2 */
               0, /* AWB_F_TL84_CW_3 */
               0, /* AWB_F_CW */
               0, /* AWB_F_FLO_A_1 */
               0, /* AWB_F_FLO_A_2 */
               0, /* AWB_F_FLO_A_3 */
               0, /* AWB_A */
               0, /* AWB_AH_A_H_1 */
               0, /* AWB_AH_A_H_2 */
               0, /* AWB_AH_A_H_3 */
               0, /* AWB_H */
               0, /* AWB_CUSTOM_DAYLIGHT1 */
               0, /* AWB_CUSTOM_DAYLIGHT2 */
               0, /* AWB_CUSTOM_DAYLIGHT3 */
               0, /* AWB_CUSTOM_FLO1 */
               0, /* AWB_CUSTOM_FLO2 */
               0, /* AWB_CUSTOM_FLO3 */
               0, /* AWB_CUSTOM_A */
               0  /* AWB_U30 */
            },
         },
         /* Region 3 */
         {
            143, /* Index */
            {
               1, /* AWB_DAY_D75 */
               1, /* AWB_DAY_D75_D65_1 */
               1, /* AWB_DAY_D75_D65_2 */
               5, /* AWB_DAY_D75_D65_3 */
               5, /* AWB_DAY_D65 */
               5, /* AWB_DAY_D65_D50_1 */
               5, /* AWB_DAY_D65_D50_2 */
               5, /* AWB_DAY_D65_D50_3 */
               5, /* AWB_DAY_D50 */
               5, /* AWB_DAY_NOON_LINE_0 */
               5, /* AWB_DAY_NOON_LINE_1 */
               5, /* AWB_DAY_NOON_LINE_2 */
               5, /* AWB_DAY_NOON_LINE_3 */
               5, /* AWB_DAY_NOON_LINE_4 */
               5, /* AWB_DAY_D50_FLO_1 */
               3, /* AWB_DAY_D50_FLO_2 */
               1, /* AWB_DAY_D50_FLO_3 */
               0, /* AWB_DAY_D50_FLO_4 */
               0, /* AWB_F_TL84 */
               0, /* AWB_F_TL84_CW_2 */
               0, /* AWB_F_TL84_CW_3 */
               0, /* AWB_F_CW */
               0, /* AWB_F_FLO_A_1 */
               0, /* AWB_F_FLO_A_2 */
               0, /* AWB_F_FLO_A_3 */
               0, /* AWB_A */
               0, /* AWB_AH_A_H_1 */
               0, /* AWB_AH_A_H_2 */
               0, /* AWB_AH_A_H_3 */
               0, /* AWB_H */
               0, /* AWB_CUSTOM_DAYLIGHT1 */
               0, /* AWB_CUSTOM_DAYLIGHT2 */
               0, /* AWB_CUSTOM_DAYLIGHT3 */
               0, /* AWB_CUSTOM_FLO1 */
               0, /* AWB_CUSTOM_FLO2 */
               0, /* AWB_CUSTOM_FLO3 */
               0, /* AWB_CUSTOM_A */
               0  /* AWB_U30 */
            },
         },
         /* Region 4 */
         {
            190, /* Index */
            {
               1, /* AWB_DAY_D75 */
               1, /* AWB_DAY_D75_D65_1 */
               1, /* AWB_DAY_D75_D65_2 */
               6, /* AWB_DAY_D75_D65_3 */
               6, /* AWB_DAY_D65 */
               6, /* AWB_DAY_D65_D50_1 */
               6, /* AWB_DAY_D65_D50_2 */
               4, /* AWB_DAY_D65_D50_3 */
               4, /* AWB_DAY_D50 */
               6, /* AWB_DAY_NOON_LINE_0 */
               6, /* AWB_DAY_NOON_LINE_1 */
               4, /* AWB_DAY_NOON_LINE_2 */
               4, /* AWB_DAY_NOON_LINE_3 */
               4, /* AWB_DAY_NOON_LINE_4 */
               4, /* AWB_DAY_D50_FLO_1 */
               2, /* AWB_DAY_D50_FLO_2 */
               1, /* AWB_DAY_D50_FLO_3 */
               0, /* AWB_DAY_D50_FLO_4 */
               0, /* AWB_F_TL84 */
               0, /* AWB_F_TL84_CW_2 */
               0, /* AWB_F_TL84_CW_3 */
               0, /* AWB_F_CW */
               0, /* AWB_F_FLO_A_1 */
               0, /* AWB_F_FLO_A_2 */
               0, /* AWB_F_FLO_A_3 */
               0, /* AWB_A */
               0, /* AWB_AH_A_H_1 */
               0, /* AWB_AH_A_H_2 */
               0, /* AWB_AH_A_H_3 */
               0, /* AWB_H */
               1, /* AWB_CUSTOM_DAYLIGHT1 */
               0, /* AWB_CUSTOM_DAYLIGHT2 */
               1, /* AWB_CUSTOM_DAYLIGHT3 */
               0, /* AWB_CUSTOM_FLO1 */
               0, /* AWB_CUSTOM_FLO2 */
               0, /* AWB_CUSTOM_FLO3 */
               0, /* AWB_CUSTOM_A */
               0  /* AWB_U30 */
            },
         },
         /* Region 5 */
         {
            215, /* Index */
            {
               4, /* AWB_DAY_D75 */
               4, /* AWB_DAY_D75_D65_1 */
               4, /* AWB_DAY_D75_D65_2 */
               6, /* AWB_DAY_D75_D65_3 */
               6, /* AWB_DAY_D65 */
               6, /* AWB_DAY_D65_D50_1 */
               6, /* AWB_DAY_D65_D50_2 */
               4, /* AWB_DAY_D65_D50_3 */
               4, /* AWB_DAY_D50 */
               6, /* AWB_DAY_NOON_LINE_0 */
               6, /* AWB_DAY_NOON_LINE_1 */
               4, /* AWB_DAY_NOON_LINE_2 */
               4, /* AWB_DAY_NOON_LINE_3 */
               4, /* AWB_DAY_NOON_LINE_4 */
               4, /* AWB_DAY_D50_FLO_1 */
               2, /* AWB_DAY_D50_FLO_2 */
               1, /* AWB_DAY_D50_FLO_3 */
               0, /* AWB_DAY_D50_FLO_4 */
               0, /* AWB_F_TL84 */
               0, /* AWB_F_TL84_CW_2 */
               0, /* AWB_F_TL84_CW_3 */
               0, /* AWB_F_CW */
               0, /* AWB_F_FLO_A_1 */
               0, /* AWB_F_FLO_A_2 */
               0, /* AWB_F_FLO_A_3 */
               0, /* AWB_A */
               0, /* AWB_AH_A_H_1 */
               0, /* AWB_AH_A_H_2 */
               0, /* AWB_AH_A_H_3 */
               0, /* AWB_H */
               1, /* AWB_CUSTOM_DAYLIGHT1 */
               1, /* AWB_CUSTOM_DAYLIGHT2 */
               1, /* AWB_CUSTOM_DAYLIGHT3 */
               0, /* AWB_CUSTOM_FLO1 */
               0, /* AWB_CUSTOM_FLO2 */
               0, /* AWB_CUSTOM_FLO3 */
               0, /* AWB_CUSTOM_A */
               0  /* AWB_U30 */
            },
         },
         /* Region 6 */
         {
            240, /* Index */
            {
               6, /* AWB_DAY_D75 */
               6, /* AWB_DAY_D75_D65_1 */
               6, /* AWB_DAY_D75_D65_2 */
               10, /* AWB_DAY_D75_D65_3 */
               10, /* AWB_DAY_D65 */
               10, /* AWB_DAY_D65_D50_1 */
               10, /* AWB_DAY_D65_D50_2 */
               4, /* AWB_DAY_D65_D50_3 */
               4, /* AWB_DAY_D50 */
               10, /* AWB_DAY_NOON_LINE_0 */
               10, /* AWB_DAY_NOON_LINE_1 */
               4, /* AWB_DAY_NOON_LINE_2 */
               4, /* AWB_DAY_NOON_LINE_3 */
               4, /* AWB_DAY_NOON_LINE_4 */
               4, /* AWB_DAY_D50_FLO_1 */
               3, /* AWB_DAY_D50_FLO_2 */
               2, /* AWB_DAY_D50_FLO_3 */
               1, /* AWB_DAY_D50_FLO_4 */
               1, /* AWB_F_TL84 */
               1, /* AWB_F_TL84_CW_2 */
               1, /* AWB_F_TL84_CW_3 */
               1, /* AWB_F_CW */
               1, /* AWB_F_FLO_A_1 */
               1, /* AWB_F_FLO_A_2 */
               1, /* AWB_F_FLO_A_3 */
               1, /* AWB_A */
               1, /* AWB_AH_A_H_1 */
               1, /* AWB_AH_A_H_2 */
               1, /* AWB_AH_A_H_3 */
               1, /* AWB_H */
               1, /* AWB_CUSTOM_DAYLIGHT1 */
               1, /* AWB_CUSTOM_DAYLIGHT2 */
               1, /* AWB_CUSTOM_DAYLIGHT3 */
               0, /* AWB_CUSTOM_FLO1 */
               0, /* AWB_CUSTOM_FLO2 */
               0, /* AWB_CUSTOM_FLO3 */
               0, /* AWB_CUSTOM_A */
               0  /* AWB_U30 */
            },
         },
         /* Region 7 */
         {
            265, /* Index */
            {
               6, /* AWB_DAY_D75 */
               6, /* AWB_DAY_D75_D65_1 */
               6, /* AWB_DAY_D75_D65_2 */
               10, /* AWB_DAY_D75_D65_3 */
               10, /* AWB_DAY_D65 */
               10, /* AWB_DAY_D65_D50_1 */
               10, /* AWB_DAY_D65_D50_2 */
               8, /* AWB_DAY_D65_D50_3 */
               8, /* AWB_DAY_D50 */
               10, /* AWB_DAY_NOON_LINE_0 */
               10, /* AWB_DAY_NOON_LINE_1 */
               8, /* AWB_DAY_NOON_LINE_2 */
               8, /* AWB_DAY_NOON_LINE_3 */
               8, /* AWB_DAY_NOON_LINE_4 */
               8, /* AWB_DAY_D50_FLO_1 */
               5, /* AWB_DAY_D50_FLO_2 */
               3, /* AWB_DAY_D50_FLO_3 */
               1, /* AWB_DAY_D50_FLO_4 */
               1, /* AWB_F_TL84 */
               1, /* AWB_F_TL84_CW_2 */
               1, /* AWB_F_TL84_CW_3 */
               1, /* AWB_F_CW */
               1, /* AWB_F_FLO_A_1 */
               1, /* AWB_F_FLO_A_2 */
               1, /* AWB_F_FLO_A_3 */
               1, /* AWB_A */
               1, /* AWB_AH_A_H_1 */
               1, /* AWB_AH_A_H_2 */
               1, /* AWB_AH_A_H_3 */
               1, /* AWB_H */
               1, /* AWB_CUSTOM_DAYLIGHT1 */
               1, /* AWB_CUSTOM_DAYLIGHT2 */
               1, /* AWB_CUSTOM_DAYLIGHT3 */
               1, /* AWB_CUSTOM_FLO1 */
               1, /* AWB_CUSTOM_FLO2 */
               1, /* AWB_CUSTOM_FLO3 */
               1, /* AWB_CUSTOM_A */
               0  /* AWB_U30 */
            },
         },
         /* Region 8 */
         {
            290, /* Index */
            {
               1, /* AWB_DAY_D75 */
               1, /* AWB_DAY_D75_D65_1 */
               1, /* AWB_DAY_D75_D65_2 */
               6, /* AWB_DAY_D75_D65_3 */
               6, /* AWB_DAY_D65 */
               6, /* AWB_DAY_D65_D50_1 */
               6, /* AWB_DAY_D65_D50_2 */
               10, /* AWB_DAY_D65_D50_3 */
               10, /* AWB_DAY_D50 */
               6, /* AWB_DAY_NOON_LINE_0 */
               6, /* AWB_DAY_NOON_LINE_1 */
               10, /* AWB_DAY_NOON_LINE_2 */
               10, /* AWB_DAY_NOON_LINE_3 */
               10, /* AWB_DAY_NOON_LINE_4 */
               10, /* AWB_DAY_D50_FLO_1 */
               7, /* AWB_DAY_D50_FLO_2 */
               4, /* AWB_DAY_D50_FLO_3 */
               2, /* AWB_DAY_D50_FLO_4 */
               1, /* AWB_F_TL84 */
               2, /* AWB_F_TL84_CW_2 */
               1, /* AWB_F_TL84_CW_3 */
               2, /* AWB_F_CW */
               1, /* AWB_F_FLO_A_1 */
               1, /* AWB_F_FLO_A_2 */
               1, /* AWB_F_FLO_A_3 */
               1, /* AWB_A */
               1, /* AWB_AH_A_H_1 */
               1, /* AWB_AH_A_H_2 */
               1, /* AWB_AH_A_H_3 */
               1, /* AWB_H */
               1, /* AWB_CUSTOM_DAYLIGHT1 */
               1, /* AWB_CUSTOM_DAYLIGHT2 */
               1, /* AWB_CUSTOM_DAYLIGHT3 */
               1, /* AWB_CUSTOM_FLO1 */
               1, /* AWB_CUSTOM_FLO2 */
               1, /* AWB_CUSTOM_FLO3 */
               1, /* AWB_CUSTOM_A */
               1  /* AWB_U30 */
            },
         },
         /* Region 9 */
         {
            323, /* Index */
            {
               1, /* AWB_DAY_D75 */
               1, /* AWB_DAY_D75_D65_1 */
               1, /* AWB_DAY_D75_D65_2 */
               2, /* AWB_DAY_D75_D65_3 */
               2, /* AWB_DAY_D65 */
               2, /* AWB_DAY_D65_D50_1 */
               2, /* AWB_DAY_D65_D50_2 */
               10, /* AWB_DAY_D65_D50_3 */
               10, /* AWB_DAY_D50 */
               2, /* AWB_DAY_NOON_LINE_0 */
               2, /* AWB_DAY_NOON_LINE_1 */
               8, /* AWB_DAY_NOON_LINE_2 */
               8, /* AWB_DAY_NOON_LINE_3 */
               8, /* AWB_DAY_NOON_LINE_4 */
               10, /* AWB_DAY_D50_FLO_1 */
               7, /* AWB_DAY_D50_FLO_2 */
               4, /* AWB_DAY_D50_FLO_3 */
               2, /* AWB_DAY_D50_FLO_4 */
               1, /* AWB_F_TL84 */
               2, /* AWB_F_TL84_CW_2 */
               1, /* AWB_F_TL84_CW_3 */
               2, /* AWB_F_CW */
               1, /* AWB_F_FLO_A_1 */
               1, /* AWB_F_FLO_A_2 */
               1, /* AWB_F_FLO_A_3 */
               1, /* AWB_A */
               1, /* AWB_AH_A_H_1 */
               1, /* AWB_AH_A_H_2 */
               1, /* AWB_AH_A_H_3 */
               1, /* AWB_H */
               1, /* AWB_CUSTOM_DAYLIGHT1 */
               1, /* AWB_CUSTOM_DAYLIGHT2 */
               1, /* AWB_CUSTOM_DAYLIGHT3 */
               1, /* AWB_CUSTOM_FLO1 */
               1, /* AWB_CUSTOM_FLO2 */
               1, /* AWB_CUSTOM_FLO3 */
               1, /* AWB_CUSTOM_A */
               1  /* AWB_U30 */
            },
         },
         /* Region 10 */
         {
            356, /* Index */
            {
               1, /* AWB_DAY_D75 */
               1, /* AWB_DAY_D75_D65_1 */
               1, /* AWB_DAY_D75_D65_2 */
               2, /* AWB_DAY_D75_D65_3 */
               2, /* AWB_DAY_D65 */
               2, /* AWB_DAY_D65_D50_1 */
               2, /* AWB_DAY_D65_D50_2 */
               8, /* AWB_DAY_D65_D50_3 */
               8, /* AWB_DAY_D50 */
               2, /* AWB_DAY_NOON_LINE_0 */
               2, /* AWB_DAY_NOON_LINE_1 */
               8, /* AWB_DAY_NOON_LINE_2 */
               8, /* AWB_DAY_NOON_LINE_3 */
               8, /* AWB_DAY_NOON_LINE_4 */
               8, /* AWB_DAY_D50_FLO_1 */
               6, /* AWB_DAY_D50_FLO_2 */
               4, /* AWB_DAY_D50_FLO_3 */
               2, /* AWB_DAY_D50_FLO_4 */
               1, /* AWB_F_TL84 */
               2, /* AWB_F_TL84_CW_2 */
               1, /* AWB_F_TL84_CW_3 */
               2, /* AWB_F_CW */
               1, /* AWB_F_FLO_A_1 */
               1, /* AWB_F_FLO_A_2 */
               1, /* AWB_F_FLO_A_3 */
               1, /* AWB_A */
               1, /* AWB_AH_A_H_1 */
               1, /* AWB_AH_A_H_2 */
               1, /* AWB_AH_A_H_3 */
               1, /* AWB_H */
               1, /* AWB_CUSTOM_DAYLIGHT1 */
               1, /* AWB_CUSTOM_DAYLIGHT2 */
               1, /* AWB_CUSTOM_DAYLIGHT3 */
               1, /* AWB_CUSTOM_FLO1 */
               1, /* AWB_CUSTOM_FLO2 */
               1, /* AWB_CUSTOM_FLO3 */
               1, /* AWB_CUSTOM_A */
               1  /* AWB_U30 */
            },
         },
         /* Region 11 */
         {
            389, /* Index */
            {
               1, /* AWB_DAY_D75 */
               1, /* AWB_DAY_D75_D65_1 */
               1, /* AWB_DAY_D75_D65_2 */
               2, /* AWB_DAY_D75_D65_3 */
               2, /* AWB_DAY_D65 */
               2, /* AWB_DAY_D65_D50_1 */
               2, /* AWB_DAY_D65_D50_2 */
               2, /* AWB_DAY_D65_D50_3 */
               2, /* AWB_DAY_D50 */
               2, /* AWB_DAY_NOON_LINE_0 */
               2, /* AWB_DAY_NOON_LINE_1 */
               2, /* AWB_DAY_NOON_LINE_2 */
               2, /* AWB_DAY_NOON_LINE_3 */
               2, /* AWB_DAY_NOON_LINE_4 */
               2, /* AWB_DAY_D50_FLO_1 */
               2, /* AWB_DAY_D50_FLO_2 */
               2, /* AWB_DAY_D50_FLO_3 */
               2, /* AWB_DAY_D50_FLO_4 */
               1, /* AWB_F_TL84 */
               2, /* AWB_F_TL84_CW_2 */
               1, /* AWB_F_TL84_CW_3 */
               2, /* AWB_F_CW */
               1, /* AWB_F_FLO_A_1 */
               1, /* AWB_F_FLO_A_2 */
               1, /* AWB_F_FLO_A_3 */
               1, /* AWB_A */
               1, /* AWB_AH_A_H_1 */
               1, /* AWB_AH_A_H_2 */
               1, /* AWB_AH_A_H_3 */
               1, /* AWB_H */
               1, /* AWB_CUSTOM_DAYLIGHT1 */
               1, /* AWB_CUSTOM_DAYLIGHT2 */
               1, /* AWB_CUSTOM_DAYLIGHT3 */
               1, /* AWB_CUSTOM_FLO1 */
               1, /* AWB_CUSTOM_FLO2 */
               1, /* AWB_CUSTOM_FLO3 */
               1, /* AWB_CUSTOM_A */
               1  /* AWB_U30 */
            },
         },
         /* Region 12 */
         {
            422, /* Index */
            {
               1, /* AWB_DAY_D75 */
               1, /* AWB_DAY_D75_D65_1 */
               1, /* AWB_DAY_D75_D65_2 */
               1, /* AWB_DAY_D75_D65_3 */
               1, /* AWB_DAY_D65 */
               1, /* AWB_DAY_D65_D50_1 */
               1, /* AWB_DAY_D65_D50_2 */
               1, /* AWB_DAY_D65_D50_3 */
               1, /* AWB_DAY_D50 */
               1, /* AWB_DAY_NOON_LINE_0 */
               1, /* AWB_DAY_NOON_LINE_1 */
               1, /* AWB_DAY_NOON_LINE_2 */
               1, /* AWB_DAY_NOON_LINE_3 */
               1, /* AWB_DAY_NOON_LINE_4 */
               1, /* AWB_DAY_D50_FLO_1 */
               1, /* AWB_DAY_D50_FLO_2 */
               1, /* AWB_DAY_D50_FLO_3 */
               1, /* AWB_DAY_D50_FLO_4 */
               1, /* AWB_F_TL84 */
               1, /* AWB_F_TL84_CW_2 */
               1, /* AWB_F_TL84_CW_3 */
               1, /* AWB_F_CW */
               1, /* AWB_F_FLO_A_1 */
               1, /* AWB_F_FLO_A_2 */
               1, /* AWB_F_FLO_A_3 */
               1, /* AWB_A */
               1, /* AWB_AH_A_H_1 */
               1, /* AWB_AH_A_H_2 */
               1, /* AWB_AH_A_H_3 */
               1, /* AWB_H */
               1, /* AWB_CUSTOM_DAYLIGHT1 */
               1, /* AWB_CUSTOM_DAYLIGHT2 */
               1, /* AWB_CUSTOM_DAYLIGHT3 */
               1, /* AWB_CUSTOM_FLO1 */
               1, /* AWB_CUSTOM_FLO2 */
               1, /* AWB_CUSTOM_FLO3 */
               1, /* AWB_CUSTOM_A */
               1  /* AWB_U30 */
            },
         },
      },
      /* Dist Weight Table */
      {
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1,
         1
      },
   },

   /******************************************************************************/
   // Feature name: AWB Green Tuning.
   //
   // Variable name: green_proj.
   // Select green projection method.
   // Default value: 0.
   // Data range : 0 (projection on day lines) or 1 (projection on one point).
   //
   // Variable name: green_offset_bg.
   // Green offset b/g for top part of the green zone.
   // Default value: -100 (disable top part of the green zone before tuning).
   // Data range: -100 to 100.
   //
   // Variable name: green_rg_offset_top_H.
   // Green offset r/g for top part of the green zone.
   // Default value: -100 (disable top part of the green zone before tuning).
   // Data range: -100 to 100.
   //
   // Variable name: green_rg_offset_bottom_H.
   // Green offset r/g for bottom part of the green zone.
   // Default value: -100 (disable bottom part of the green zone before tuning).
   // Data range: -100 to 100.
   //
   // Variable name: slope_factor_m.
   // The parameter to adjust the slope of the projection line from center of the green stats to the day light line.
   // Default value: 1.5
   // Data range: 0 to 100.
   // Effect: The smaller the value, the smaller slope the projection line has.
   //           The resulted green scene images go towards the bluish green direction.
   //         The larger the value, the larger slope the projection line has.
   //           The resulted green scene images go towards the yellowish green color direction.
   //
   // Variable name: slope_factor_m_shade.
   // Slope factor used for green zone projection in shade condition.
   // Default value: 1.5 (a must tune parameter for different sensors).
   // Data range: 0 to 100.
   //
   // Variable names: awb_cw_green_reject_threshold, awb_custom_fl_green_reject_threshold.
   // The threshold used to screen out the possible green samples for indoor CW/custom flo conditions.
   // Default value: 0 (disable).
   // Data range: 0 to 255.
   // Effect: When a stat is close to CW/CF but its green value is less than this threshold,
   //   the sample is counted as an outlier instead of a grey sample.
   //
   // Variable name: bright_green_percentage.
   // Bright green percentage at outdoor index.
   // Default value: 6.
   // Data range: 0 to 100.
   // Constraints: This is a pre-set threshold obtained by testing.
   // Effect: Higher value extends the outdoor green range.
   //
   // Variable name: dark_green_percentage.
   // Dark green percentage at indoor index.
   // Default value: 12.
   // Data range: 0 to 100.
   // Constraints: This is a pre-set threshold obtained by testing.
   // Effect: Indoor green range is extended or narrowed down.
   //
   // Variable name: green_enhance_low_pec
   // Low green percentage for running green enhancement.
   //
   // Variable name: green_enhance_high_pec.
   // High green percentage for running green enhancement.
   //
   // Variable name: green2f_outlier_dist2.
   // Distance from CW reference point for rejecting green stats inside the grey zone.
   // Default value: 0.
   // Data range: 0 to 16.
   //
   // Variable name: green_enhance_gain_adjust_high.
   // Adjust gain for green enhancement with high green percentage.
   //
   // Variable name: green_zone_assist.
   // Additional green zones for handling other green colors (e.g., artificial green grass) as follows:
   //
   // Variable name: zone_control.
   // Specify the control method of the corresponding misleading zone.
   // Default Value: 0.
   // Data range: 0 to 10
   //
   // Variable name: trigger_type.
   // Specify trigger point for enabling the corresponding misleading zone.
   // Default Value: 0.
   // Data range: >= 0
   //
   // Variable name: control_direction.
   // Specify the direction of zone changes.
   // Default value: 0.
   // Data range : 0 to 10.
   //
   // Variable name: detect_zone.
   // Rectangle zone misleading color zone as follows:
   //
   // Variable name: rg_center.
   // The center point of zone in horizontal axis.
   // Default value: 0.0
   // Data range: 0.0 to 2.0
   //
   // Variable name: bg_center.
   // The center point of zone in vertical axis.
   // Default value: 0.0
   // Data range: 0.0 to 2.0
   //
   // Variable name: rg_radius_grid.
   // The horizontal offset from the center point.
   // Default value: 0.
   // Data range: 0 to 241.
   //
   // Variable name: bg_radius_grid.
   // The vertical offset from the center point.
   // Default value: 0.
   // Data range: 0 to 241.
   //
   // Variable name:  exp_index_trigger.
   // This exposure index indicates if the current misleading color zone is used
   //   or not under the current brightness value.
   // Data range: >= 0.
   //
   // Variable name: bright_green_exp_index.
   // green zone projection slope factor trigger point for normal scenes.
   // Data range (calculatd): 0 to outdoor_index.
   //
   // Variable name: shade_green_exp_index.
   // Green zone projection slope factor trigger point for shade scenes.
   // Data range (caluclated): outdoor_index/2 to inoutdoor_index.
   //
   // Variable name: exp_weight.
   // Exposure based offset that triggers slope_factor_m_shade.
   // Default value: 0.
   // Data range: 0 to 300.
   //
   // Enable/disable green projection interpolation.
   // If it is enabled, the green interpolation ratio will be computed and do interpolating weighted sample average
   // and green target point with the computed interpolation ratio
   // Default value: 0 - disable
   // Data range: 1 - enable 0 - disable
   //
   // Variable name: green_proj_per_low;
   // The offset percentage for determining the lowest green percentage threshold.
   // No effect on interpolation ratio between weighed sample average and green projected target point
   // Default value: 2.0
   // Data range: [0,50]
   // Constraint: green_proj_per_low <= green_proj_per_high
   //
   // Variable name: green_proj_per_high;
   // The offset percentage for determining the highest green percentage threshold.
   // The interpolation ratio will be computed
   // the lowest green percentage threshold and the highest green percentage threshold
   // Default value: 20.0
   // Data range: [0,80]
   // Constraints: green_proj_per_high >= green_proj_per_low
   //              green_proj_per_high <= green_proj_per_max
   //
   // Variable name: green_proj_per_max;
   // The offset percentage for determining the maximum green percentage threshold.
   // The interpolation ratio will be computed  with the highest green percentage threshold,
   // the maximum green percentage threshold, and the maximum interpolation ratio
   // Default value: 80.0
   // Data range: [50,100]
   // Constraints: green_proj_per_max >= green_proj_per_high
   //
   // Variable name: green_proj_per_max_ratio;
   // The maximum interpolation ratio.
   // If the green percentage is larger than the maximum green percentage threshold,
   // this ratio should be the interpolation ratio
   // Default value: 1.2
   // Data range: [1.0,2.0]
   // Constraints:
   //
   // Variable name: green_proj_index_start;
   // The minimum exposure index for determining the interpolation ratio.
   // If the current exposure index is lower than this index, no changes on the interpolation ratio.
   // Note that we change the interpolation ratio that has been already computed by green percentage thresholds
   // Default value: 210.0
   // Data range: [150,300]
   // Constraints: green_proj_index_start >= outdoor_heuristic_exposure_index_trigger
   //              green_proj_index_start <= green_proj_index_end
   //
   // Variable name: green_proj_index_end;
   // The maximum exposure index for determining the interpolation ratio.
   // If the current exposure index is between index_start and index_end, the interpolation ratio is modified.
   // If the current exposure index is higher than index_end, the final interpolation ratio will be set to 0
   // Default value: 310.0
   // Data range: [200,350]
   // Constraints: green_proj_index_end <= indoor_index
   /******************************************************************************/

   /* Green */
   {
      0, /* Green Projection Method */
      5, /* Green Zone Offset BG */
      -35, /* Green RG Offset Top H */
      0, /* Green RG Offset Bottom H */
      1.050000f, /* Slope Factor M */
      3.000000f, /* Slope Factor M Shade */
      0, /* Cool White Green Reject Threshold */
      0, /* Custom Fluorescent Green Reject Threshold */
      10, /* Bright Green Percentage */
      18, /* Dark Green Percentage */
      30, /* Green Enhance Low Pec */
      70, /* Green Enhance High Pec */
      8, /* Green2f Outlier Dist2 */
      /* Green Enhance Gain Adjust High */
      {
         1.000000f, /* Red Adjust */
         1.000000f, /* Blue Adjust */
      },
      /* Green Zone Assist */
      {
         /* Zone 0 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 1 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 2 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 3 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 4 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
      },
      /* Trigger */
      {
         0.000000f, /* Gain Start */
         0.000000f, /* Gain End */
         0, /* Lux Index Start */
         0, /* Lux Index End */
      },
      /* Trigger */
      {
         0.000000f, /* Gain Start */
         0.000000f, /* Gain End */
         0, /* Lux Index Start */
         0, /* Lux Index End */
      },
      0, /* Exp Weight */
      0, /* Green Proj Interp Enable */
      2.000000f, /* Green Proj Pct Low */
      20.00000f, /* Green Proj Pct High */
      80.00000f, /* Green Proj Pct Max */
      1.200000f, /* Green Proj Pct Max Ratio */
      210.0000f, /* Green Proj Index Start */
      310.0000f, /* Green Proj Index End */
   },
   /* Dark Threshold */
   {

      /*********************************************************************/
      // Feature name: AWB Dark Threshold.
      //
      // Variable name: lowlight_measure_delta.
      // Trigger point to use the low light threshold values (dark_(r/g/b)_lowlight_threshold).
      // Default value: 0.
      // Data range: 0 to  max_exp_index-indoor_exp_index.
      //
      // Variable name: dark_r_threshold.
      // R stat ave below this value is rejected (8-bit domain).
      // Default value: 1.
      // Data range: 0 to 255.
      // Constraints: This is a pre-set threshold for collecting certain level of the red stat.
      // Effect: Lower values allow stats with lower r values to be collected.
      //
      // Variable name: dark_g_threshold.
      // G stat ave below this value is rejected (8-bit domain).
      // Default value: 1.
      // Data range: 0 to 255.
      // Constraints: This is a pre-set threshold for collecting certain level of the green stat.
      // Effect: Lower values allow stats with lower g values to be collected.
      //
      // Variable name: dark_b_threshold.
      // B stat ave below this value is rejected (8-bit domain).
      // Default value: 1.
      // Data range: 0 to 255.
      // Constraints: This is a pre-set threshold for collecting certain level of the blue stat.
      // Effect: Lower values allow stats with lower b values to be collected.
      //
      // Variable name: dark_r_threshold_lowlight.
      // R stat ave below this value is rejected (8-bit domain).
      // Default value: 1.
      // Data range: 0 to 10.
      // Constraints: This is a pre-set threshold for collecting certain level of the red stat.
      // Effect: Lower values allow stats with lower r values to be collected.
      //
      // Variable name: dark_g_threshold_lowlight.
      // G stat ave below this value is rejected (8-bit domain).
      // Default value: 1.
      // Data range: 0 to 10.
      // Constraints: This is a pre-set threshold for collecting certain level of the green stat.
      // Effect: Lower values allow stats with lower g values to be collected.
      //
      // Variable name: dark_b_threshold_lowlight.
      // B stat ave below this value is rejected (8-bit domain).
      // Default value: 1.
      // Data range: 0 to 10.
      // Constraints: This is a pre-set threshold for collecting certain level of the blue stat.
      // Effect: Lower values allow stats with lower b values to be collected.
      /*********************************************************************/

      0, /* Lowlight Measure Delta */
      1, /* Dark R Threshold */
      1, /* Dark G Threshold */
      1, /* Dark B Threshold */
      1, /* Dark R Threshold Lowlight */
      1, /* Dark G Threshold Lowlight */
      1, /* Dark B Threshold Lowlight */
   },
   /* Temporal Tuning */
   {

      /*********************************************************************/
      // Feature name: AWB Temporal Tuning.
      // Tuning parameters for Temporal Heuristic Stage.
      //
      // Variable name: awb_history_buffer_size.
      // AWB history size.
      // Default value: 30.
      // Data range: 15 to 1000.
      // Constraints:
      // Effect: Used for temporal heuristic.
      //
      // Variable names: day_stability_enable, f_stability_enable, a_stability_enable, h_stability_enable.
      // Flag to enable day/f/a/h stability by history.
      // Default value: 1.
      // Data range: 0 (disable) or 1 (enable).
      // Constraints:
      // Effect:
      //
      // Variable names: awb_lock_day_enable, awb_lock_f_enable, awb_lock_a_enable.
      // Flags used to enable/disable lock/unlock for Day, F, and A light.
      // Default value: 0 (disable).
      // Data range: 0 or 1.
      // Constraints:
      // Effect:
      //
      // Variable names: lock_exp_threshold_day, lock_exp_threshold_f, lock_exp_threshold_a.
      // Lock/unlock threshold for Day, F and A. Used in temporal heuristics.
      // Default value: 25.
      // Data range: 0 to 50.
      // Constraints:
      // Effect: The higher the value, the higher possibility to get locked to that light.
      //
      // Variable name: save_historyaverage2history.
      // Flag to enable save history average as current frame's final AWB decision to history.
      // Default value: 1.
      // Data range: 0 (disable) or 1 (enable).
      // Constraints:
      // Effect: Enable the feature to have more smooth/stable AWB performance.
      //         Disable the feature to have a faster AWB convergence process.
      //
      // Variable name: awb_convergence_factor_camera, awb_convergence_factor_video.
      // AWB convergence speed is changed to floating point scaler instead of
      //   the level 0, 1, and 2 for more accurate convergence speed control.
      //   Camera and video need different convergence speed.
      // Default value: 0.05
      // Data range: 0 to 1.
      // Constraints:
      // Effect: Too fast convergence speed could cause color jitter.
      //         Old convergence speed slow=0.05, medium=0.1, fast=0.3
      /*********************************************************************/

      30, /* AWB History Size */
      1, /* Day Stability Enable */
      1, /* F Stability Enable */
      1, /* A Stability Enable */
      1, /* H Stability Enable */
      0, /* Lock Day */
      0, /* Lock F */
      0, /* Lock A */
      20, /* Day Lock/Unlock Threshold */
      20, /* F Lock/Unlock Threshold */
      25, /* A Lock/Unlock Threshold */
      0, /* Save History Average */
      0.150000f, /* Convergence Factor Camera */
      0.050000f, /* Convergence Factor Video */
   },
   /* Heuristic Control */
   {

      /*********************************************************************/
      // Feature name: AWB Heuristic Control.
      // Definition of grey and white weights for different conditions.
      //
      // Variable names: grey_weight_day, grey_weight_f, grey_weight_a, grey_weight_h.
      // Weight for grey decision when grey decision is the same as white decision.
      // Default value: 1.
      // Data range: 0 to 10.
      // Constraints: None.
      // Effect: Increase the value to increase the weight of grey decision for the final AWB decision.
      //
      // Variable names: white_weight_day, white_weight_f, white_weight_a, white_weight_h.
      // Weight for white decision when white decision is the same as grey decision.
      // Default value: 1.
      // Data range: 0 to 10.
      // Constraints: None.
      // Effect: Increase the value to increase the weight of white decision for the final AWB decision.
      //
      // Variable name: exposure_adjustment.
      // Interpolation range adjustment on the boundary of two different AWB decisions.
      // Default value: 5.
      // Data range: 0 to 140.
      // Constraints: None.
      // Effect: This parameter adjusts the interpolation range on the boundary of two different AWB decisions based on exposure.
      //         Higher values give a larger interpolation range which results in a smoother AWB decision change.
      /*********************************************************************/

      1, /* Gray Weight Day */
      1, /* Gray Weight F */
      1, /* Gray Weight A */
      1, /* Gray Weight H */
      1, /* White Weight Day */
      1, /* White Weight F */
      0, /* White Weight A */
      0, /* White Weight H */
      10, /* Exposure Adjustment */
   },

   /*********************************************************************/
   // Feature name: AWB Heuristic Weight.
   // Exposure and CCT weights for all heuristic functions.
   //
   // Variable name:exp_weight_low[2].
   // Default value: {0.5, 0.5}.
   // Data range: 0 to 1.
   //
   // Variable name:exp_weight_high[2].
   // Default value: {0.5, 0.5}.
   // Data range: 0 to 1.
   //
   // Variable name:cct_weight_low[2].
   // Default value: {0.5, 0.5}.
   // Data range: 0 to 1.
   //
   // Variable name:cct_weight_high[2].
   // Default value: {0.5, 0.5}.
   // Data range: 0 to 1.
   /*********************************************************************/

   /* Heuristic Weights */
   {
      /* Region 0 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 1 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 2 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 3 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 4 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 5 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 6 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 7 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 8 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 9 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 10 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 11 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 12 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 13 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 14 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 15 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 16 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 17 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 18 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
      /* Region 19 */
      {
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
         {
            0.500000f, 0.500000f
         },
      },
   },
   /* White World */
   {

      /*********************************************************************/
      // Feature name: AWB White World.
      //
      // Variable name: white_stat_y_threshold_high.
      // The Y threshold for a region to be a white stat.
      // Default value: white_stat_y_threshold_high=245.
      // Data range: 0 to 255.
      // Constraints: None.
      // Effect: The upper limit for collecting white stat.
      //         Too high will involve saturated stat,
      //         and too low may reduce white stat collection accuracy.
      //
      // Variable name: white_outlier_valid_ymax_ratio.
      // Check if Y max in outliers is outlier_valid_ymax_ratio
      //   times higher than the Y max in valid samples.
      // Default value: 3.
      // Data range: 1 to 10.
      // Constraints: None.
      // Effect: If outlier Y max is outlier_valid_ymax times more than the Y max in valid samples,
      //         set white world decision to be -1. Higher value requires a higher threshold for this decision.
      //
      // Variable name: white_stat_cnt_threshold.
      // The minimum white stat count required for making a white decision.
      // Default value: 10.
      // Data range: 0 to 10000.
      // Constraints:
      // Effect:
      //
      // Variable name: white_peak_separation_distance.
      // The minimum distance required between the first Y peak and the second Y peak among day, f, a, h clusters.
      // Default value: 5.
      // Data range: 0  to 255.
      // Constraints:
      // Effect:
      //
      // Variable name: white_aec_stable_range_threshold.
      // Lock unlock threshold for temporal history heuristic of white world.
      // Default value: 5.
      // Data range: 0  to 100.
      // Constraints:
      // Effect: The lower the value, the higher restriction for applying lock to white world history.
      //
      // Variable name: white_history_weight.
      // Weight for history white decision.
      // Default value: 0.5
      // Data range: 0 to 1.
      // Constraints:
      // Effect: The higher the value, the higher the weight for history white decision.
      //
      // Variable name: white_current_weight.
      // Weight for current white decision.
      // Default: 0.5
      // Range : 0 to 1.
      // Effect: The same as white_history_weight.
      /*********************************************************************/

      240, /* White Stat Y Threshold High */
      4.000000f, /* Outlier Valid yMax */
      3, /* Minimum White Stat Count Required for Making a White Decision */
      5, /* Minimum Distance Between First Y Peak and Second Y Peak */
      5, /* Lock Unlock Threshold for temporal history of white world */
      0.500000f, /* Weight for history white decision */
      0.500000f, /* Current Weight */
   },
   /* Decision Boundary */
   {

      /*********************************************************************/
      // Feature name: AWB Decision Boundary.
      //
      // Variable name: a_h_line_boundary.
      // Boundary of A and H decision zones.
      // Default value: 0.5
      // Data range: 0 to 1.
      //
      // Variable name: day_f_line_boundary.
      // Boundary of Day and F deicsion zones.
      // Default value: 0.5
      // Data range: 0 to 1.
      //
      // Variable name: d75_d65_line_boundary.
      // Boundary of D75 and D65 decision zones.
      // Default value: 0.5
      // Data range: 0 to 1.
      //
      // Variable name: d65_d50_line_boundary.
      // Boundary of D65 and D50 decision zones.
      // Default value: 0.5
      // Data range: 0 to 1.
      //
      // Variable name: d65_d50_shifted_line_boundary.
      // Boundary of shifted D65 and shifted D50 decision zones.
      // Default value: 0.5
      // Data range: 0 to 1.
      //
      // Variable name: f_a_line_boundary.
      // Boudnary of F and A decision zones.
      // Default value: 0.5
      // Data range: 0 to 1.
      //
      // Variable name: cw_tl84_line_boundary.
      // Boundary of CW and TL84 decision zones.
      // Default value: 0.5
      // Data range: 0 to 1.
      //
      // Variable name: d50_weighted_sample_boundary.
      // Boundary for stat screening for D65 and D50 clusters.
      // Default value: 1.0
      // Data range: 0 to 1.
      //
      // Variable name: d65_weighted_sample_boundary.
      // Boundary for stat screending for D75 and D65 clusters.
      // Default value: 1.0
      // Data range: 0 to 1.
      /*********************************************************************/

      0.500000f, /* A H Line Boundary */
      0.500000f, /* Day F Line Boundary */
      0.500000f, /* D75 D65 Line Boundary */
      0.500000f, /* D65 D50 Line Boundary */
      0.500000f, /* D65 D50 Shifted Line Boundary */
      0.500000f, /* F A Line Boundary */
      0.500000f, /* CW Tl84 Line Boundary */
      0.650000f, /* D50 Weighted Sample Boundary */
      1.000000f, /* D65 Weighted Sample Boundary */
   },
   /* Cluster Tuning */
   {

      /*********************************************************************/
      // Feature name: AWB Cluster Tuning.
      //
      // Variable name: dominant_cluster_enable.
      // Turn on/off Dominant cluster functionality.
      // Default: 1 (enable).
      // Range : 0 (disable) or 1 (enalbe).
      //
      // Variable names: cluster_high_pec, cluster_mid_pec, cluster_low_pec.
      // Cluster percentage to determine dominant light in heuristics.
      // Default values: 0.40, 0.25, 0.15
      // Data range: 0 to 1.
      // Constraints: None.
      // Effect: These three parameters set three boundaries to recognize the dominant cluster in heuristics.
      //         Higher values require a larger number of cluster counts. For example, cluster_high_pec=0.25 requires
      //         the corresponding cluster to have a 25 percentage of the total-cluster-counts to proceed to the
      //         corresponding AWB decision making. While cluster_low_pec=0.1 only requires 10 percentage of the
      //         total-cluster counts to proceed to the corresponding AWB decision making.
      //
      // Variable name: threshold_compact_cluster_valid.
      // Radius of the compact cluster within grey zone.
      // Default value: 4.
      // Data range: 0 to 100.
      // Constraints: None.
      // Effect: Lower value requires that the recognized compact cluster have a smaller radius.
      //
      // Variable name: threshold_compact_cluster.
      // Compact cluster threshold.
      // Default value: 60.
      // Data range: 0 to 1000.
      // Constraints: None.
      // Effect: This is the threshold of measured distance from outlier sample grid to the average.
      //         If the measured maximum distance is lower than this threshold, a compact cluster is recognized.
      //         Therefore, a too high threshold results in false-alarm compact cluster recognition,
      //         and too low threshold may result in missed detection on the compact clusters.
      //
      // Variable name: compact_to_grey_dis.
      // Outlier compact cluster distance to grey zone.
      // Default value: 4.
      // Data range: 0 to 100.
      // Constraints: None
      // Effect: Lower value requires the recognized compact cluster is
      //         closer to the grey zone.
      //
      // Variable name: dominant_cluster_threshold.
      // Dominant cluster threshold.
      // Default value: 4.
      // Data range: 0 to 1000.
      // Constraints: None
      // Effect: This threshold decides on if there is a dominant cluster or not.
      //         Higher threshold gives higher requirement on the cluster counts
      //         to be recognized as a dominant cluster.
      /*********************************************************************/

      1, /* Dominant Cluster Enable */
      0.700000f, /* Cluster High PEC */
      0.600000f, /* Cluster Mid PEC */
      0.150000f, /* Cluster Low PEC */
      10, /* Threshold Compact Cluster Valid */
      60, /* Threshold Compact Cluster */
      4, /* Compact To Grey DIS */
      6, /* Dominant Cluster Threshold */
   },

   /******************************************************************************/
   // Feature name: AWB Low Light Weight Warm Color Appearance.
   //
   // Variable name: warmup_enable_aa.
   // Enable/disable weight_referece_aa.
   // Default Value: 1.
   // Data range: 0 (disable) or 1 (enable).
   //
   // Variable name: warmup_enable_hh.
   // Enable/disable weight_referece_hh.
   // Default Value: 1.
   // Data range: 0 (disable) or 1 (enable).
   //
   // Variable name: weight_reference_aa.
   // Weights for lowlight condition for warm color appearance (A light decision).
   // Default value: 0.5
   // Data range: 0 to 1.
   //
   // Variable name: weight_reference_ah.
   // Weights for lowlight condition for warm color appearance (between A and H ).
   // Default value: 0.5
   // Data range: 0 to 1.
   //
   // Variable name: weight_reference_hh.
   // Weights for lowlight condition for warm color appearance (H light decision).
   // Default value: 0.5
   // Data range: 0 to 1.
   //
   // Variable name: warmup_ah_interp_eanble
   // Enable/Disable interpolation in warm color appearance
   // Default value: 0
   // Data range: 1 - Enable (0 - Disable)
   /******************************************************************************/

   /* Lowlight Warm */
   {
      1, /* Enable AA */
      1, /* Enable HH */
      0.500000f, /* Weight Reference AA */
      0.500000f, /* Weight Reference AH */
      0.500000f, /* Weight Reference HH */
      0, /* Enable Warmup AH Interp */
   },
   /* Color Correction */
   {

      /*********************************************************************/
      // Feature name: AWB driven CCM
      //
      // Variable name: awb_ccm_enable.
      // Enable/Disable AWB driven CCMs. If it is set to be 0, the conventional ISP ccm is used.
      // Defaut value: 1 (enable).
      // Data range: 0 (disable) or 1 (enable).
      //
      // Variable name: awb_ccm_exp_index_trigger_outdoor.
      // Trigger points for selecting either indoor or outdoor CCMs
      // Default values: {0, 0, 180, 220}.
      // Data range (calculated): outdoor_index/2 to inoutdoor_index.
      //
      // Variable name: awb_ccm_exp_index_trigger_lowlight.
      // Trigger points for selecting either normal or lowlight CCMs.
      // Default values: {0, 0, 350, 370}.
      // Data range (calculated): >= (indoor_index+inoutdoor_index)/2.
      //
      // Variable name: awb_ccm_exp_index_trigger_LED_lowlight.
      // Trigger points for selecting either normal or lowlight CCMs for LED.
      // Default values: {0, 0, 350, 370}.
      // Data range: >= (indoor_index+inoutdoor_index)/2.
      //
      // Variable name: awb_ccm_LED_trigger.
      // Trigger points for selecting either ambient or LED CCMs (K sensitivity value).
      // Default values: {10.0, 15.0}.
      // Data range: 1.0 to 100.0
      //
      // Variable name:  awb_ccm_cct_trigger_outdoor
      // Trigger points for selecting either shade or sunny CCMs.
      // Default values: {6500, 7000}.
      // Data range: 5000 to 7500.
      //
      // Variable name: awb_ccm_cct_trigger_indoor_day.
      // Trigger points for selecting either indoor D65 or indoor D50 CCMs.
      // Default values: {6100,6200}
      // Range: [5000, 6500]

      // Variable name:  awb_ccm_cct_trigger_indoor_dayf
      // Trigger points for selecting either indoor D50 or indoor CW CCMS.
      // Default values: {4300, 4600}.
      // Data range: 4100 to 5000.
      //
      // Variable name: awb_ccm_cct_trigger_indoor_fa.
      // Trigger points for selecting either indoor CW  or indoor A CCMS.
      // Default values: {2700, 2850}.
      // Data range: 2500, 4850.
      //
      // Variable name:  awb_ccm_cct_trigger_indoor_ah.
      // Trigger points for selecting either indoor A or indoor H CCMs.
      // Default values: {2300, 2400}.
      // Data range: 2000 to 2850.
      //
      // AWB Extended CCMs as follows:
      //
      //   Variable name: enable.
      //   Enable/Disable the corresponding CCM.
      //   Default value: 0.
      //   Data range: 0 (disable) or 1 (enable).
      //
      //   Variable name: CCM
      //   CCM data
      //   Default and range of each CCM element:
      //   Default values: c0=1, c1=0, c2=0, c3=0, c4=1, c5=0, c6=0, c7=0, c8=1, k0=k1=k2=0.
      //   Data ranges: 0.5 to 3 for each c, -2^10 to 2^10-1 for each k.
      //
      // Variable name: awb_ccm_indoor.
      // Indoor CCMs.
      //
      // Variable name: awb_ccm_portrait.
      // Portrait CCMS (triggering by face dections).
      //
      // Variable name: awb_ccm_lowlight.
      // Lowlight CCMs (each lowlight CCM corresponds to each one in Indoor CCMs).
      //
      // Variable name: awb_ccm_outdoor.
      // Outdoor CCM.
      // Note: green CCM, sky CCM, and skin CCM are not used (reserved for future expansion).
      //
      // Variable name:  awb_ccm_flash.
      // Flash CCMs (both single, pre-flash, and dual leds).
      //
      // Variable name:  awb_ccm_flash_lowlight.
      // Flash lowlight CCMs.
      /*********************************************************************/

      1, /* Enable */
      /* Trigger */
      {
         1.000000f, /* Gain Start */
         2.000000f, /* Gain End */
         180, /* Lux Index Start */
         220, /* Lux Index End */
      },
      /* Trigger */
      {
         18.000000f, /* Gain Start */
         20.000000f, /* Gain End */
         390, /* Lux Index Start */
         410, /* Lux Index End */
      },
      /* Trigger */
      {
         18.000000f, /* Gain Start */
         20.000000f, /* Gain End */
         390, /* Lux Index Start */
         410, /* Lux Index End */
      },
      /* LED Trigger */
      {
         15.000000f, /* Start */
         15.000000f, /* End */
      },
      /* Outdoor CCT Trigger */
      {
         6500, /* Start */
         7000, /* End */
      },
      /* Indoor Day CCT Trigger */
      {
         6100, /* Start */
         6200, /* End */
      },
      /* Indoor Day F CCT Trigger */
      {
         4300, /* Start */
         4600, /* End */
      },
      /* Indoor Day F A CCT Trigger */
      {
         2700, /* Start */
         2950, /* End */
      },
      /* Indoor Day A H CCT Trigger */
      {
         2300, /* Start */
         2400, /* End */
      },
      /* Indoor Color Correction */
      {
         /* D65 */
         {
            0, /* Enable */
            /* D65 */
            {
               2.216200f,    -1.305700f,    0.089500f,
               -0.168400f,    1.372200f,    -0.203800f,
               0.070600f,    -0.855400f,    1.784800f,
               0,    0,    0,
               0
            },
         },
         /* D50 */
         {
            0, /* Enable */
            /* D50 */
            {
               2.168300f,    -1.302800f,    0.134500f,
               -0.208400f,    1.350100f,    -0.141600f,
               0.067000f,    -1.005300f,    1.938200f,
               0,    0,    0,
               0
            },
         },
         /* CW */
         {
            0, /* Enable */
            /* Cool White */
            {
               2.131900f,    -1.407000f,    0.275100f,
               -0.292100f,    1.472200f,    -0.180000f,
               0.031000f,    -1.281200f,    2.250300f,
               0,    0,    0,
               0
            },
         },
         /* TL84 */
         {
            0, /* Enable */
            /* TL84 */
            {
               2.131900f,    -1.407000f,    0.275100f,
               -0.292100f,    1.472200f,    -0.180000f,
               0.031000f,    -1.281200f,    2.250300f,
               0,    0,    0,
               0
            },
         },
         /* A */
         {
            0, /* Enable */
            /* A */
            {
               2.300300f,    -1.427200f,    0.126900f,
               -0.340400f,    1.400700f,    -0.060400f,
               -0.193300f,    -1.268400f,    2.461600f,
               0,    0,    0,
               0
            },
         },
         /* H */
         {
            0, /* Enable */
            /* Horizon */
            {
               2.562000f,    -1.740400f,    0.178400f,
               -0.461400f,    1.429700f,    0.031700f,
               -0.543000f,    -1.380600f,    2.923600f,
               0,    0,    0,
               0
            },
         },
      },
      /* Portrait Color Correction */
      {
         /* D65 */
         {
            0, /* Enable */
            /* D65 */
            {
               1.000000f,    0.000000f,    0.000000f,
               0.000000f,    1.000000f,    0.000000f,
               0.000000f,    0.000000f,    1.000000f,
               0,    0,    0,
               0
            },
         },
         /* D50 */
         {
            0, /* Enable */
            /* D50 */
            {
               1.000000f,    0.000000f,    0.000000f,
               0.000000f,    1.000000f,    0.000000f,
               0.000000f,    0.000000f,    1.000000f,
               0,    0,    0,
               0
            },
         },
         /* CW */
         {
            0, /* Enable */
            /* Cool White */
            {
               1.000000f,    0.000000f,    0.000000f,
               0.000000f,    1.000000f,    0.000000f,
               0.000000f,    0.000000f,    1.000000f,
               0,    0,    0,
               0
            },
         },
         /* TL84 */
         {
            0, /* Enable */
            /* TL84 */
            {
               1.000000f,    0.000000f,    0.000000f,
               0.000000f,    1.000000f,    0.000000f,
               0.000000f,    0.000000f,    1.000000f,
               0,    0,    0,
               0
            },
         },
         /* A */
         {
            0, /* Enable */
            /* A */
            {
               1.000000f,    0.000000f,    0.000000f,
               0.000000f,    1.000000f,    0.000000f,
               0.000000f,    0.000000f,    1.000000f,
               0,    0,    0,
               0
            },
         },
         /* H */
         {
            0, /* Enable */
            /* H */
            {
               1.000000f,    0.000000f,    0.000000f,
               0.000000f,    1.000000f,    0.000000f,
               0.000000f,    0.000000f,    1.000000f,
               0,    0,    0,
               0
            },
         },
      },
      /* Lowlight Color Correction */
      {
         /* D65 */
         {
            0, /* Enable */
            /* D65 */
            {
               1.708300f,    -0.776900f,    0.068600f,
               -0.294500f,    1.350200f,    -0.055700f,
               -0.048100f,    -0.852500f,    1.900500f,
               0,    0,    0,
               0
            },
         },
         /* D50 */
         {
            0, /* Enable */
            /* D50 */
            {
               1.708300f,    -0.776900f,    0.068600f,
               -0.294500f,    1.350200f,    -0.055700f,
               -0.048100f,    -0.852500f,    1.900500f,
               0,    0,    0,
               0
            },
         },
         /* CW */
         {
            0, /* Enable */
            /* Cool White */
            {
               1.708300f,    -0.776900f,    0.068600f,
               -0.294500f,    1.350200f,    -0.055700f,
               -0.048100f,    -0.852500f,    1.900500f,
               0,    0,    0,
               0
            },
         },
         /* TL84 */
         {
            0, /* Enable */
            /* TL84 */
            {
               1.708300f,    -0.776900f,    0.068600f,
               -0.294500f,    1.350200f,    -0.055700f,
               -0.048100f,    -0.852500f,    1.900500f,
               0,    0,    0,
               0
            },
         },
         /* A */
         {
            0, /* Enable */
            /* A */
            {
               1.708300f,    -0.776900f,    0.068600f,
               -0.294500f,    1.350200f,    -0.055700f,
               -0.048100f,    -0.852500f,    1.900500f,
               0,    0,    0,
               0
            },
         },
         /* H */
         {
            0, /* Enable */
            /* H */
            {
               1.708300f,    -0.776900f,    0.068600f,
               -0.294500f,    1.350200f,    -0.055700f,
               -0.048100f,    -0.852500f,    1.900500f,
               0,    0,    0,
               0
            },
         },
      },
      /* Outdoor Color Correction */
      {
         /* D75 */
         {
            0, /* Enable */
            /* D75 */
            {
               2.030600f,    -1.148900f,    0.118400f,
               -0.222200f,    1.355500f,    -0.133300f,
               0.092200f,    -1.123700f,    2.031400f,
               0,    0,    0,
               0
            },
         },
         /* D50 */
         {
            0, /* Enable */
            /* D50 */
            {
               2.030600f,    -1.148900f,    0.118400f,
               -0.222200f,    1.355500f,    -0.133300f,
               0.092200f,    -1.123700f,    2.031400f,
               0,    0,    0,
               0
            },
         },
         /* Green */
         {
            0, /* Enable */
            /* Green */
            {
               1.000000f,    0.000000f,    0.000000f,
               0.000000f,    1.000000f,    0.000000f,
               0.000000f,    0.000000f,    1.000000f,
               0,    0,    0,
               0
            },
         },
         /* Sky */
         {
            0, /* Enable */
            /* Sky */
            {
               1.000000f,    0.000000f,    0.000000f,
               0.000000f,    1.000000f,    0.000000f,
               0.000000f,    0.000000f,    1.000000f,
               0,    0,    0,
               0
            },
         },
         /* Skin */
         {
            0, /* Enable */
            /* Skin */
            {
               1.000000f,    0.000000f,    0.000000f,
               0.000000f,    1.000000f,    0.000000f,
               0.000000f,    0.000000f,    1.000000f,
               0,    0,    0,
               0
            },
         },
         /* Lowlight */
         {
            0, /* Enable */
            /* Lowlight */
            {
               1.708300f,    -0.776900f,    0.068600f,
               -0.294500f,    1.350200f,    -0.055700f,
               -0.048100f,    -0.852500f,    1.900500f,
               0,    0,    0,
               0
            },
         },
      },
      /* LED Color Correction */
      {
         /* LED 1 */
         {
            0, /* Enable */
            /* LED 1 */
            {
               1.000000f,    0.000000f,    0.000000f,
               0.000000f,    1.000000f,    0.000000f,
               0.000000f,    0.000000f,    1.000000f,
               0,    0,    0,
               0
            },
         },
         /* LED 2 */
         {
            0, /* Enable */
            /* LED 2 */
            {
               1.000000f,    0.000000f,    0.000000f,
               0.000000f,    1.000000f,    0.000000f,
               0.000000f,    0.000000f,    1.000000f,
               0,    0,    0,
               0
            },
         },
      },
      /* Lowlight LED Color Correction */
      {
         /* LED 1 */
         {
            0, /* Enable */
            /* LED 1 */
            {
               1.000000f,    0.000000f,    0.000000f,
               0.000000f,    1.000000f,    0.000000f,
               0.000000f,    0.000000f,    1.000000f,
               0,    0,    0,
               0
            },
         },
         /* LED 2 */
         {
            0, /* Enable */
            /* LED 2 */
            {
               1.000000f,    0.000000f,    0.000000f,
               0.000000f,    1.000000f,    0.000000f,
               0.000000f,    0.000000f,    1.000000f,
               0,    0,    0,
               0
            },
         },
      },
   },
   /* Preflash */
   {

      /*********************************************************************/
      // Feature name: AWB Pre-flash.
      //
      // Variable name: awb_pre_flash_enable.
      // Enable/Disable the pre-flash process.
      // Default value: 0.
      // Data range: 0 (disable) or 1 (enable).
      //
      // Variable name: awb_flash_stat_sat_threshold.
      // Saturation threshold for flash AWB.
      // Default value: 75.
      // Data range: 0 to 100.
      //
      // Variable name: awb_preflash_outlier_distance.
      // Outlier distance for Pre-flash AWB.
      // Default value: 4.
      // Data range: 2 to 20.
      //
      // Variable name: awb_preflash_outlier_distance_no_flash.
      // Outlier distance for AWB without flash light in led_WB_update.
      // Default value: 8.
      // Data range: 8 to 16.
      //
      // Variable name: awb_mainflash_typ_ref.
      // Main Flash typical module reference points.
      //
      // Variable name: awb_preFlash_min_ref.
      // Pre-flash min reference points.
      //
      // Variable name: awb_preFlash_max_ref.
      // Pre-flash max reference points.
      //
      // Variable name: awb_mainflash_min_ref.
      // Main flash min reference points.
      //
      // Variable name: awb_mainflash_max_ref.
      // Main flash max reference points.
      //
      // Variable name: awb_flash_valid_sample_high_threshold.
      // Upper threshold of valid sample in a flash scene.
      // Data range: 0 to 3072.
      //
      // Variable name: awb_flash_valid_sample_low_threshold.
      // Lower threshold of valid sample in a flash scene.
      // Data range: 0 to 3072.
      //
      // Variable name: awb_flash_typ_decision_rg_offset.
      // Valid rg ratio range for AWB decision with regard to TYP module.
      // Default value: 0.015
      // Data range: -0.02 to 0.02
      //
      // Variable name: awb_flash_typ_decision_bg_offset.
      // Valid bg ratio range for AWB decision with regard to TYP module.
      // Default value: 0.015
      // Data range: -0.02 to 0.02
      //
      // Variable name: awb_flash_corner_sample_ref_adjust.
      // Flash AWB corner module reference point adjust.
      // Default value: 1.0
      // Data range: 0.5 to 1.5
      //
      // Variable name: awb_flash_lut.
      // Flash AWB adjust Look up table.
      /*********************************************************************/

      0, /* Enable */
      75, /* Stat Sat Thresh */
      4, /* Outlier Distance */
      8, /* Outlier Distance No Flash */
      /* Mainflash Typical Reference Point */
      {
         1.000000f, /* R/G ratio */
         1.000000f, /* B/G ratio */
      },
      /* Preflash Minimum Reference Point */
      {
         1.000000f, /* R/G ratio */
         1.000000f, /* B/G ratio */
      },
      /* Preflash Maximum Reference Point */
      {
         1.000000f, /* R/G ratio */
         1.000000f, /* B/G ratio */
      },
      /* Mainflash Minimum Reference Point */
      {
         1.000000f, /* R/G ratio */
         1.000000f, /* B/G ratio */
      },
      /* Mainflash Maximum Reference Point */
      {
         1.000000f, /* R/G ratio */
         1.000000f, /* B/G ratio */
      },
      1800, /* Valid Sample High Threshold */
      600, /* Valid Sample Low Threshold */
      /* Trigger */
      {
         0.015000f, /* Gain Start */
         0.015000f, /* Gain End */
         0, /* Lux Index Start */
         0, /* Lux Index End */
      },
      /* Trigger */
      {
         0.015000f, /* Gain Start */
         0.015000f, /* Gain End */
         0, /* Lux Index Start */
         0, /* Lux Index End */
      },
      /* Corner Sample Ref Adjust */
      {
         1.000000f, /* Red Adjust */
         1.000000f, /* Blue Adjust */
      },

      /*********************************************************************/
      // Feature name: Pre-flash AWB Lookup table.
      //
      // Variable name: lux_index.
      // Measured lux value.
      // Data range: 0 to 1500.
      //
      // Variable name: flash_sensitivity_ratio.
      // Flash sensitivity value correspondent to the above lux_index.
      //
      // Variable name: cct_threshold.
      // Color temperature trigger points for interpolating adjust ratios.
      //
      // Variable name: adjust_ratio.
      // Adjust rg/bg ratio for each condition specified by flash_sensitivity_ratio
      // Default value: 0.015
      // Data range : -0.02 to 0.02
      /*********************************************************************/

      /* Adjust LUT */
      {
         /* Region 0 */
         {
            0, /* Lux Index */
            1.000000f, /* Flash Sensitivity Ratio */
            /* CCT Trigger */
            {
               7500, /* Start */
               7500, /* End */
            },
            /* Adjust Ratio */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
         },
         /* Region 1 */
         {
            0, /* Lux Index */
            1.000000f, /* Flash Sensitivity Ratio */
            /* CCT Trigger */
            {
               7500, /* Start */
               7500, /* End */
            },
            /* Adjust Ratio */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
         },
         /* Region 2 */
         {
            0, /* Lux Index */
            1.000000f, /* Flash Sensitivity Ratio */
            /* CCT Trigger */
            {
               7500, /* Start */
               7500, /* End */
            },
            /* Adjust Ratio */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
         },
         /* Region 3 */
         {
            0, /* Lux Index */
            1.000000f, /* Flash Sensitivity Ratio */
            /* CCT Trigger */
            {
               7500, /* Start */
               7500, /* End */
            },
            /* Adjust Ratio */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
         },
         /* Region 4 */
         {
            0, /* Lux Index */
            1.000000f, /* Flash Sensitivity Ratio */
            /* CCT Trigger */
            {
               7500, /* Start */
               7500, /* End */
            },
            /* Adjust Ratio */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
         },
      },
   },
   /* LED Tuning */
   {
      0.000000f, /* LED/Strobe Adjustment Factor */

      /*********************************************************************/
      // Feature name: Dual LED CCT Matching Flash.
      // Applicable chipset(s): All VFE with 3A 4.1 and newer.
      // Applicable operation mode:  Preview, snapshot, camcorder modes and ZSL.
      //
      // Variable name: dual_led_enable.
      // Flag to enable/disable feature.
      // Default value: 0.
      // Data range: 0 to 1.
      // Constraints: None.
      // Effect: 0 disables Dual LED CCT Matching, 1 enables Dual LED CCT Matching.
      //
      // Variable name: preflash_current_ratio.
      // TBD .
      //
      // Variable name: continuous_burst_current_ratio.
      // TBD.
      //
      // Variable name: led1_gain_adj.
      // gain adjust for LED1 of dual LED.
      //
      // Variable name: led2_gain_adj.
      // gain adjust for LED2 of dual LED.
      //
      // Variable name: table_size.
      // CCT_control table size, which depends on the dual LED controller IC.
      //
      // Variable name: CCT.
      // Color temperature.
      // Default value:  5000.
      // Data range: 1000 to 10000.
      // Constraints: None.
      // Effect:
      //
      // Variable name: LED1_setting.
      // The LED1 current configuration for LED controller IC.
      // Default value: 0.
      //
      // Variable name: LED2_setting.
      // The LED2 current configuration for LED controller IC.
      // Default value: 0
      //
      // Variable name: rg_ratio.
      // rg_ratio measured for LUT entry
      //   LED current settings by the sensor, use sgw logs in AWB.
      // Default value:  1.0
      // Data range: 0.1 to 7.0
      // Constraints: None.
      // Effect: Allows WB based on this rg-ratio to be applied under LED influence
      //   only. Interpolation between ambient and this value when LED partially
      //   influences the scene.
      //
      // Variable name: bg_ratio.
      // bg_ratio measured for LUT entry
      //   LED current settings by the sensor, use sgw logs in AWB.
      // Default value:  1.0
      // Data range: 0.1 to 7.0
      // Constraints: None.
      // Effect: Allows WB based on this bg_ratio to be applied under LED influence
      //   only. Interpolation between ambient and this value when LED partially
      //   influences the scene.
      //
      // Variable name: flux.
      // Flux value for LUT entry settings.
      // Default value:  1.0
      // Data range: 0 to 1000.
      // Constraints: None.
      // Effect: Higher flux values expects more influence from LED flash.
      //
      // Variable name: preflash_flux.
      // Flux value for preflash mode.
      // Default value:  1.0
      // Data range: 0 to 1000.
      // Constraints: None.
      //
      // Variable name: const_burst_flux.
      // Flux value for torch mode.
      // Default value:  1.0
      // Data range: 0 to 1000.
      // Constraints: None.
      /*********************************************************************/

      /* Mix LED Table */
      {
         0, /* Dual LED Enable */
         0.000000f, /* Preflash Current Ratio */
         0.000000f, /* Continuous Burst Current Ratio */
         /* LED1 Gain Adjust */
         {
            1.000000f, /* Red Gain */
            1.000000f, /* Blue Gain */
         },
         /* LED2 Gain Adjust */
         {
            1.000000f, /* Red Gain */
            1.000000f, /* Blue Gain */
         },
         11, /* Table Size */
         {
            /* Entry 0 */
            {
               1, /* CCT */
               900, /* LED1 Config */
               0, /* LED2 Config */
               0.711943f, /* RG Ratio */
               0.444595f, /* BG Ratio */
               6.500000f, /* Flux */
               1.000000f, /* Preflash Flux */
               0.000000f, /* Continuous Burst Flux */
            },
            /* Entry 1 */
            {
               1, /* CCT */
               810, /* LED1 Config */
               90, /* LED2 Config */
               0.657459f, /* RG Ratio */
               0.506000f, /* BG Ratio */
               6.500000f, /* Flux */
               1.000000f, /* Preflash Flux */
               0.000000f, /* Continuous Burst Flux */
            },
            /* Entry 2 */
            {
               1, /* CCT */
               720, /* LED1 Config */
               180, /* LED2 Config */
               0.628474f, /* RG Ratio */
               0.544897f, /* BG Ratio */
               6.500000f, /* Flux */
               1.000000f, /* Preflash Flux */
               0.000000f, /* Continuous Burst Flux */
            },
            /* Entry 3 */
            {
               1, /* CCT */
               630, /* LED1 Config */
               270, /* LED2 Config */
               0.609196f, /* RG Ratio */
               0.574345f, /* BG Ratio */
               6.500000f, /* Flux */
               1.000000f, /* Preflash Flux */
               0.000000f, /* Continuous Burst Flux */
            },
            /* Entry 4 */
            {
               1, /* CCT */
               540, /* LED1 Config */
               360, /* LED2 Config */
               0.590284f, /* RG Ratio */
               0.602550f, /* BG Ratio */
               6.500000f, /* Flux */
               1.000000f, /* Preflash Flux */
               0.000000f, /* Continuous Burst Flux */
            },
            /* Entry 5 */
            {
               1, /* CCT */
               450, /* LED1 Config */
               450, /* LED2 Config */
               0.567267f, /* RG Ratio */
               0.621544f, /* BG Ratio */
               6.500000f, /* Flux */
               1.000000f, /* Preflash Flux */
               0.000000f, /* Continuous Burst Flux */
            },
            /* Entry 6 */
            {
               1, /* CCT */
               360, /* LED1 Config */
               540, /* LED2 Config */
               0.553616f, /* RG Ratio */
               0.653256f, /* BG Ratio */
               6.500000f, /* Flux */
               1.000000f, /* Preflash Flux */
               0.000000f, /* Continuous Burst Flux */
            },
            /* Entry 7 */
            {
               1, /* CCT */
               270, /* LED1 Config */
               630, /* LED2 Config */
               0.534940f, /* RG Ratio */
               0.682176f, /* BG Ratio */
               6.500000f, /* Flux */
               1.000000f, /* Preflash Flux */
               0.000000f, /* Continuous Burst Flux */
            },
            /* Entry 8 */
            {
               1, /* CCT */
               180, /* LED1 Config */
               720, /* LED2 Config */
               0.516528f, /* RG Ratio */
               0.718911f, /* BG Ratio */
               6.500000f, /* Flux */
               1.000000f, /* Preflash Flux */
               0.000000f, /* Continuous Burst Flux */
            },
            /* Entry 9 */
            {
               1, /* CCT */
               90, /* LED1 Config */
               810, /* LED2 Config */
               0.493718f, /* RG Ratio */
               0.754468f, /* BG Ratio */
               6.500000f, /* Flux */
               1.000000f, /* Preflash Flux */
               0.000000f, /* Continuous Burst Flux */
            },
            /* Entry 10 */
            {
               1, /* CCT */
               0, /* LED1 Config */
               900, /* LED2 Config */
               0.451947f, /* RG Ratio */
               0.801890f, /* BG Ratio */
               6.500000f, /* Flux */
               1.000000f, /* Preflash Flux */
               0.000000f, /* Continuous Burst Flux */
            },
            /* Entry 11 */
            {
               1, /* CCT */
               0, /* LED1 Config */
               0, /* LED2 Config */
               1.000000f, /* RG Ratio */
               1.000000f, /* BG Ratio */
               0.000000f, /* Flux */
               0.000000f, /* Preflash Flux */
               0.000000f, /* Continuous Burst Flux */
            },
            /* Entry 12 */
            {
               1, /* CCT */
               0, /* LED1 Config */
               0, /* LED2 Config */
               1.000000f, /* RG Ratio */
               1.000000f, /* BG Ratio */
               0.000000f, /* Flux */
               0.000000f, /* Preflash Flux */
               0.000000f, /* Continuous Burst Flux */
            },
            /* Entry 13 */
            {
               1, /* CCT */
               0, /* LED1 Config */
               0, /* LED2 Config */
               1.000000f, /* RG Ratio */
               1.000000f, /* BG Ratio */
               0.000000f, /* Flux */
               0.000000f, /* Preflash Flux */
               0.000000f, /* Continuous Burst Flux */
            },
            /* Entry 14 */
            {
               1, /* CCT */
               0, /* LED1 Config */
               0, /* LED2 Config */
               1.000000f, /* RG Ratio */
               1.000000f, /* BG Ratio */
               0.000000f, /* Flux */
               0.000000f, /* Preflash Flux */
               0.000000f, /* Continuous Burst Flux */
            },
            /* Entry 15 */
            {
               1, /* CCT */
               0, /* LED1 Config */
               0, /* LED2 Config */
               1.000000f, /* RG Ratio */
               1.000000f, /* BG Ratio */
               0.000000f, /* Flux */
               0.000000f, /* Preflash Flux */
               0.000000f, /* Continuous Burst Flux */
            },
         },
      },
      /* LED Gain Adjust */
      {
         1.000000f, /* Red */
         1.000000f, /* Blue */
      },
      /* Strobe Gain Adjust */
      {
         1.000000f, /* Red */
         1.000000f, /* Blue */
      },
   },
   /* Extended Outdoor Heuristics */
   {

      /*********************************************************************/
      //Feature name: AWB Extended Outdoor Heuristics
      //
      // Variable name: awb_exposure_outdoor_heuristic
      // Select the different outdoor heuristics.
      // Default value: 0.
      // Data range: 0 (basic) or 1 (advanced).
      //
      // ---
      //
      // Special Outdoor Heuristics.
      // NOTE: This is a superset of parameters for all special outdoor heuristics.
      //       Not all parameters below are used for every special outdoor heuristics.
      //
      //   Variable name: detection_zone
      //   Rectangle zone for gathering stat information as follows:
      //
      //     Variable name: rg_center.
      //     The center point of zone in horizontal axis.
      //     Default value: 0.0
      //     Data range: 0.0 to 2.0
      //
      //     Variable name: bg_center.
      //     The center point of zone in vertical axis.
      //     Default value: 0.0
      //     Data range: 0.0 to 2.0
      //
      //     Variable name: rg_radius_grid.
      //     The horizontal offset from the center point.
      //     Default value: 0.
      //     Data range: 0 to 241.
      //
      //     Variable name: bg_radius_grid.
      //     The vertical offset from the center point.
      //     Default value: 0.
      //     Data range: 0 to 241.
      //
      //   Variable name: count_trigger.
      //   Count based trigger points for setting up interpolation zone.
      //   Data range : 0 to 3072.
      //
      //   Variable name:  exp_index_trigger.
      //   Exposure index based trigger points for setting up interploation zone.
      //   Data range: 0 to 500.
      //
      //   Variable name: aux_cond[2].
      //   Auxiliary conditions for applying adjust ratio.
      //
      //   Variable name: adjust_ratio.
      //   Adjust rg/bg gains.
      //   Data range: 0.5 to 1.5
      //
      // Variable name: awb_outdoor_green_adjust.
      // Adjusts the special outdoor green heuristic parameters.
      // Default values: {-1, -1, -1.0f, -1.0f, -1, -1, -1.0f, -1.0f, 1.0, 1.0}.
      //
      // Variable name: awb_outdoor_bright_blue_sky_adjust.
      // Adjusts the special blue sky heuristic parameters in very bright scene.
      // Default values: {-1, -1, -1.0f, -1.0f, -1, -1, -1.0f, -1.0f, 1.0, 1.0}.
      //
      // Variable name: awb_outdoor_not_enough_stat_adjust.
      // Adjusts the special outdoor heuristic parameters with only very small stats.
      // Default values: {-1, -1, -1.0f, -1.0f, -1, -1, -1.0f, -1.0f, 1.0, 1.0}.
      //
      // Variable name: awb_outdoor_blue_ground_adjust.
      // Adjusts the special outdoor heuristic parameters for blue ground.
      // Default values: {-1, -1, -1.0f, -1.0f, -1, -1, -1.0f, -1.0f, 1.0, 1.0}.
      //
      // Variable name: awb_outdoor_cloud_sky_adjust.
      // Adjusts the special outdoor heuristic parameters for cloud sky.
      // Default values: {-1, -1, -1.0f, -1.0f, -1, -1, -1.0f, -1.0f, 1.0, 1.0}.
      //
      // Variable name: awb_outdoor_blue_sky_adjust.
      // Adjusts the special outdoor heuristic parameters for blue sky.
      // Default values: {-1, -1, -1.0f, -1.0f, -1, -1, -1.0f, -1.0f, 1.0, 1.0}.
      //
      // Variable name: awb_outdoor_fog_sky_adjust.
      // Adjusts the special outdoor heuristic parameters for smog sky.
      // Default values: {-1, -1, -1.0f, -1.0f, -1, -1, -1.0f, -1.0f, 1.0, 1.0}.
      //
      // Variable name: awb_outdoor_green_detect_adjust.
      // Adjusts the special outdoor heuristic parameters for green detect.
      // Default values: {-1, -1, -1.0f, -1.0f, -1, -1, -1.0f, -1.0f, 1.0, 1.0}.
      //
      // Variable name: awb_outdoor_no_day_weighted_sample_adjust.
      // Adjusts rg/bg gains when no valid day samples and no weighted samples.
      // Default values: {-1, -1, -1.0f, -1.0f, -1, -1, -1.0f, -1.0f, 1.0, 1.0}.
      //
      // Variable name: awb_outdoor_all_out_of_zone_adjust.
      // Adjusts rg/bg gains when stats are located out of grey zone.
      // Default values: {-1, -1, -1.0f, -1.0f, -1, -1, -1.0f, -1.0f, 1.0, 1.0}.
      //
      // ---
      //
      // Variable name: awb_extended_outdoor_exp_trigger.
      // Auxiliary exposure indeces for special outdoor heuristics.
      /*********************************************************************/

      0, /* Heuristic (0: basic, 1: advanced) */
      /* Green Adjust */
      {
         /* Detection Zones */
         {
            /* Zone 0 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 1 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 2 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 3 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 4 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 5 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 6 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 7 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
         },
         /* Count Trigger */
         {
            -1, /* Start */
            -1, /* End */
         },
         /* Exp Index Trigger */
         {
            -1.000000f, /* Gain Start */
            -1.000000f, /* Gain End */
            -1, /* Lux Index Start */
            -1, /* Lux Index End */
         },
         {
            -1.000000f, -1.000000f
         },
         /* Adjust Ratio */
         {
            1.000000f, /* Red */
            1.000000f, /* Blue */
         },
      },
      /* Bright Blue Sky Adjust */
      {
         /* Detection Zones */
         {
            /* Zone 0 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 1 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 2 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 3 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 4 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 5 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 6 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 7 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
         },
         /* Count Trigger */
         {
            -1, /* Start */
            -1, /* End */
         },
         /* Exp Index Trigger */
         {
            -1.000000f, /* Gain Start */
            -1.000000f, /* Gain End */
            -1, /* Lux Index Start */
            -1, /* Lux Index End */
         },
         {
            -1.000000f, -1.000000f
         },
         /* Adjust Ratio */
         {
            1.000000f, /* Red */
            1.000000f, /* Blue */
         },
      },
      /* Not Enough Stat Adjust */
      {
         /* Detection Zones */
         {
            /* Zone 0 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 1 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 2 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 3 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 4 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 5 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 6 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 7 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
         },
         /* Count Trigger */
         {
            -1, /* Start */
            -1, /* End */
         },
         /* Exp Index Trigger */
         {
            -1.000000f, /* Gain Start */
            -1.000000f, /* Gain End */
            -1, /* Lux Index Start */
            -1, /* Lux Index End */
         },
         {
            -1.000000f, -1.000000f
         },
         /* Adjust Ratio */
         {
            1.000000f, /* Red */
            1.000000f, /* Blue */
         },
      },
      /* Blue Ground Adjust */
      {
         /* Detection Zones */
         {
            /* Zone 0 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 1 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 2 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 3 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 4 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 5 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 6 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 7 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
         },
         /* Count Trigger */
         {
            -1, /* Start */
            -1, /* End */
         },
         /* Exp Index Trigger */
         {
            -1.000000f, /* Gain Start */
            -1.000000f, /* Gain End */
            -1, /* Lux Index Start */
            -1, /* Lux Index End */
         },
         {
            -1.000000f, -1.000000f
         },
         /* Adjust Ratio */
         {
            1.000000f, /* Red */
            1.000000f, /* Blue */
         },
      },
      /* Cloud Sky Adjust */
      {
         /* Detection Zones */
         {
            /* Zone 0 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 1 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 2 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 3 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 4 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 5 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 6 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 7 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
         },
         /* Count Trigger */
         {
            -1, /* Start */
            -1, /* End */
         },
         /* Exp Index Trigger */
         {
            -1.000000f, /* Gain Start */
            -1.000000f, /* Gain End */
            -1, /* Lux Index Start */
            -1, /* Lux Index End */
         },
         {
            -1.000000f, -1.000000f
         },
         /* Adjust Ratio */
         {
            1.000000f, /* Red */
            1.000000f, /* Blue */
         },
      },
      /* Blue Sky Adjust */
      {
         /* Detection Zones */
         {
            /* Zone 0 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 1 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 2 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 3 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 4 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 5 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 6 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 7 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
         },
         /* Count Trigger */
         {
            -1, /* Start */
            -1, /* End */
         },
         /* Exp Index Trigger */
         {
            -1.000000f, /* Gain Start */
            -1.000000f, /* Gain End */
            -1, /* Lux Index Start */
            -1, /* Lux Index End */
         },
         {
            -1.000000f, -1.000000f
         },
         /* Adjust Ratio */
         {
            1.000000f, /* Red */
            1.000000f, /* Blue */
         },
      },
      /* Fog Sky Adjust */
      {
         /* Detection Zones */
         {
            /* Zone 0 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 1 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 2 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 3 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 4 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 5 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 6 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 7 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
         },
         /* Count Trigger */
         {
            -1, /* Start */
            -1, /* End */
         },
         /* Exp Index Trigger */
         {
            -1.000000f, /* Gain Start */
            -1.000000f, /* Gain End */
            -1, /* Lux Index Start */
            -1, /* Lux Index End */
         },
         {
            -1.000000f, -1.000000f
         },
         /* Adjust Ratio */
         {
            1.000000f, /* Red */
            1.000000f, /* Blue */
         },
      },
      /* Green Detect Adjust */
      {
         /* Detection Zones */
         {
            /* Zone 0 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 1 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 2 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 3 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 4 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 5 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 6 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Zone 7 */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
         },
         /* Count Trigger */
         {
            -1, /* Start */
            -1, /* End */
         },
         /* Exp Index Trigger */
         {
            -1.000000f, /* Gain Start */
            -1.000000f, /* Gain End */
            -1, /* Lux Index Start */
            -1, /* Lux Index End */
         },
         {
            -1.000000f, -1.000000f
         },
         /* Adjust Ratio */
         {
            1.000000f, /* Red */
            1.000000f, /* Blue */
         },
      },
      /* No Day Weighted Sample Adjust */
      {
         1.000000f, /* Red Adjust */
         1.000000f, /* Blue Adjust */
      },
      /* All Out Of Zone Adjust */
      {
         1.000000f, /* Red Adjust */
         1.000000f, /* Blue Adjust */
      },

      /******************************************************************************/
      // Feature name: Outdoor exposure indices for triggering
      //               special outdoor heuristics.
      //
      // Variable name: directsun_exp_index.
      // Exposure index for very bright sunlight (under direct sun light).
      // Default value: 140.
      // Data range: 90 to 170.
      //
      // Variable name: outdoor_heuristic_exposure_index_trigger.
      // Exposure index based trigger points for running outdoor heuristic.
      // Default value (calculated): outdoor_index.
      // Data range (calculated): 0 to outdoor_index.
      //
      // Variable name: outdoor_exp_bright_shade_enable
      // Enable/disable outdoor heuristic bright and shade exposure trigger points
      // Default value: 0 - disable
      // Data range: 1 - enable, 0 - disable
      //
      // Variable name: outdoor_heuristic_exp_index_bright
      // Exposure index based trigger point for bright condition
      // Default value: 170
      // Data range: [0, outdoor_index]
      //
      // Variable name: outdoor_heuristic_exp_index_shade
      // Exposure index based trigger point for shade condition
      // Default value: 200
      // Data range: [0, (outdoor_index+indoor_index)/2]
      /******************************************************************************/

      /* Exp Trigger */
      {
         140, /* Direct Sun Exp Index */
         200, /* Outdoor Heurstic Exposure Index Trigger */
         0, /* Outdoor Heurstic Outdoor Exp Bright Shade Enable */
         170, /* Outdoor Heuristic Exp Index Bright */
         200, /* Outdoor Heuristic Exp Index Shade */
      },
   },
   /* Single Color Tracking */
   {

      /*********************************************************************/
      // Feature name: AWB Single Color Tracking, Speical Heuristics
      //
      // Variable name: awb_single_color_heuristic_enable.
      // Enable flag for running special heuristic for single color tracking.
      // Default value: 0.
      // Data range: 0 (disable) or 1 (enable).
      //
      // Variable name: awb_single_color_detect.
      // A table for containing single color decision parameters as follows:
      //
      //   Variable name: detection_zone
      //   Rectangle zone for gathering stat information:
      //
      //     Variable name: rg_center.
      //     The center point of zone in horizontal axis.
      //     Data range: 0.0 to 2.0
      //
      //     Variable name: bg_center.
      //     The center point of zone in vertical axis.
      //     Data range: 0.0 to 2.0
      //
      //     Variable name: rg_radius_grid.
      //     The horizontal offset from the center point.
      //     Data range: 0 to 241.
      //
      //     Variable name: bg_radius_grid.
      //     The vertical offset from the center point.
      //     Data range: 0 to 241.
      //
      //   Variable name: exp_index.
      //   Exposure index based trigger points for applying special color heuristic.
      //   Default values: {0.0, 0.0, 0, 0}.
      //
      //   Variable name: count_offset.
      //   Number of stats that are classified as a corresponding special color.
      //   Default values: {0, 0}.
      //
      //   Variable name: adjust_ratio.
      //   Adjust rg/bg ratios.
      //   Default values: {1.0, 1.0}.
      /*********************************************************************/

      0, /* Enable */
      /* Table */
      {
         /* Index 0 */
         {
            /* Detection Zones */
            {
               /* Zone 0 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 1 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 2 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 3 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 4 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 5 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 6 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 7 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
            },
            /* Exp Index Trigger */
            {
               0.000000f, /* Gain Start */
               0.000000f, /* Gain End */
               0, /* Lux Index Start */
               0, /* Lux Index End */
            },
            /* Count Offset */
            {
               0, /* Start */
               0, /* End */
            },
            /* Adjust Ratio */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
         },
         /* Index 1 */
         {
            /* Detection Zones */
            {
               /* Zone 0 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 1 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 2 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 3 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 4 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 5 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 6 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 7 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
            },
            /* Exp Index Trigger */
            {
               0.000000f, /* Gain Start */
               0.000000f, /* Gain End */
               0, /* Lux Index Start */
               0, /* Lux Index End */
            },
            /* Count Offset */
            {
               0, /* Start */
               0, /* End */
            },
            /* Adjust Ratio */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
         },
         /* Index 2 */
         {
            /* Detection Zones */
            {
               /* Zone 0 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 1 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 2 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 3 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 4 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 5 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 6 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 7 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
            },
            /* Exp Index Trigger */
            {
               0.000000f, /* Gain Start */
               0.000000f, /* Gain End */
               0, /* Lux Index Start */
               0, /* Lux Index End */
            },
            /* Count Offset */
            {
               0, /* Start */
               0, /* End */
            },
            /* Adjust Ratio */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
         },
         /* Index 3 */
         {
            /* Detection Zones */
            {
               /* Zone 0 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 1 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 2 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 3 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 4 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 5 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 6 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 7 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
            },
            /* Exp Index Trigger */
            {
               0.000000f, /* Gain Start */
               0.000000f, /* Gain End */
               0, /* Lux Index Start */
               0, /* Lux Index End */
            },
            /* Count Offset */
            {
               0, /* Start */
               0, /* End */
            },
            /* Adjust Ratio */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
         },
         /* Index 4 */
         {
            /* Detection Zones */
            {
               /* Zone 0 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 1 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 2 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 3 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 4 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 5 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 6 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 7 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
            },
            /* Exp Index Trigger */
            {
               0.000000f, /* Gain Start */
               0.000000f, /* Gain End */
               0, /* Lux Index Start */
               0, /* Lux Index End */
            },
            /* Count Offset */
            {
               0, /* Start */
               0, /* End */
            },
            /* Adjust Ratio */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
         },
         /* Index 5 */
         {
            /* Detection Zones */
            {
               /* Zone 0 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 1 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 2 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 3 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 4 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 5 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 6 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 7 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
            },
            /* Exp Index Trigger */
            {
               0.000000f, /* Gain Start */
               0.000000f, /* Gain End */
               0, /* Lux Index Start */
               0, /* Lux Index End */
            },
            /* Count Offset */
            {
               0, /* Start */
               0, /* End */
            },
            /* Adjust Ratio */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
         },
         /* Index 6 */
         {
            /* Detection Zones */
            {
               /* Zone 0 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 1 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 2 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 3 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 4 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 5 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 6 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 7 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
            },
            /* Exp Index Trigger */
            {
               0.000000f, /* Gain Start */
               0.000000f, /* Gain End */
               0, /* Lux Index Start */
               0, /* Lux Index End */
            },
            /* Count Offset */
            {
               0, /* Start */
               0, /* End */
            },
            /* Adjust Ratio */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
         },
         /* Index 7 */
         {
            /* Detection Zones */
            {
               /* Zone 0 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 1 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 2 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 3 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 4 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 5 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 6 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
               /* Zone 7 */
               {
                  0.000000f, /* RG Center */
                  0.000000f, /* BG Center */
                  0, /* RG Radius Grid */
                  0, /* BG Radius Grid */
               },
            },
            /* Exp Index Trigger */
            {
               0.000000f, /* Gain Start */
               0.000000f, /* Gain End */
               0, /* Lux Index Start */
               0, /* Lux Index End */
            },
            /* Count Offset */
            {
               0, /* Start */
               0, /* End */
            },
            /* Adjust Ratio */
            {
               1.000000f, /* Red */
               1.000000f, /* Blue */
            },
         },
      },
   },
   /* Misleading Zone Process */
   {

      /*********************************************************************/
      // Feature name: AWB Misleading Zone Process.
      // Advanced outlier stat screening with misleading color zones.
      //
      // Variable name: awb_day_sum_threshold_count.
      // Count based trigger points for varying size of misleading color zone with Day stats.
      // Default value: 0.
      // Data range: 0 to 3072.
      //
      // Variable name: awb_flo_sum_threshold_count.
      // Count based trigger points for varying size of misleading color zone with Flou stats.
      // Default value: 0.
      // Data range: 0 to 3072.
      //
      // Variable name:  awb_misleading_color_zones.
      // A table of misleading color zones as follows:
      //
      //   Variable name: zone_control.
      //   Specify the control method of the corresponding misleading zone.
      //   Default Value: 0.
      //   Data range: 0 to 10
      //
      //   Variable name: trigger_type.
      //   Specify trigger point for enabling the corresponding misleading zone.
      //   Default Value: 0.
      //   Data range: >= 0
      //
      //   Variable name: control_direction.
      //   Specify the direction of zone changes.
      //   Default value: 0.
      //   Data range : 0 to 10.
      //
      //   Variable name: detect_zone.
      //   Rectangle zone misleading color zone as follows:
      //
      //     Variable name: rg_center.
      //     The center point of zone in horizontal axis.
      //     Default value: 0.0
      //     Data range: 0.0 to 2.0
      //
      //     Variable name: bg_center.
      //     The center point of zone in vertical axis.
      //     Default value: 0.0
      //     Data range: 0.0 to 2.0
      //
      //     Variable name: rg_radius_grid.
      //     The horizontal offset from the center point.
      //     Default value: 0.
      //     Data range: 0 to 241.
      //
      //     Variable name: bg_radius_grid.
      //     The vertical offset from the center point.
      //     Default value: 0.
      //     Data range: 0 to 241.
      //
      //   Variable name:  exp_index_trigger.
      //   This exposure index indicates if the current misleading color zone is used
      //     or not under the current brightness value.
      //   Data range: >= 0.
      //   Default value: {0.0, 0.0, 0, 0}.
      /*********************************************************************/

      /* Day Sum Threshold Count */
      {
         0, /* Start */
         0, /* End */
      },
      /* F Sum Threshold Count */
      {
         0, /* Start */
         0, /* End */
      },
      /* Misleading Zones */
      {
         /* Zone 0 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 1 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 2 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 3 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 4 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 5 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 6 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 7 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 8 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 9 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 10 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 11 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 12 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 13 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 14 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 15 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 16 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 17 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 18 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 19 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 20 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 21 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 22 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 23 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 24 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 25 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 26 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 27 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 28 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
         /* Zone 29 */
         {
            0, /* Zone Control */
            0, /* Trigger Type */
            0, /* Control Direction */
            /* Detect Zone */
            {
               0.000000f, /* RG Center */
               0.000000f, /* BG Center */
               0, /* RG Radius Grid */
               0, /* BG Radius Grid */
            },
            /* Trigger */
            {
               1.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               1, /* Lux Index Start */
               1, /* Lux Index End */
            },
         },
      },
   },
   /* Golden Module Info */
   {

      /*********************************************************************/
      // Feature name : AWB golden module calibration data
      //                for module-by-module variation.
      //
      // Variable name: enable_AWB_module_cal.
      // Enable/Disable for reading golden module calibration data.
      //
      // Variable name: AWB_golden_module_R_Gr_ratio.
      // Not tunable. Read it out from modules EEPROM and convert into floating point.
      // Default value: None. The value is read out from modules EEPROM.
      // Data range: 0 to 4.
      // Constraints: None
      // Effect: Not tunable.
      //
      // Variable name: AWB_golden_module_Gb_Gr_ratio.
      // Not tunable. Read it out from modules EEPROM and convert into floating point.
      // Default value: None. The value is read out from modules EEPROM.
      // Data range: 0.8 and 1.2
      // Constraints: none
      // Effect: Not tunable.
      //
      // Variable name: AWB_golden_module_B_Gr_ratio.
      // Not tunable. Read it out from modules EEPROM and convert into floating point.
      // Default value: None. The value is read out from modules EEPROM.
      // Data range: 0 to 4.
      // Constraints: None
      // Effect: Not tunable.
      /*********************************************************************/

      0, /* Enable AWB Module Cal */
      /* R/Gr */
      {
         1.000000f, /* Golden Module R/Gr ratio D65 */
         1.000000f, /* Golden Module R/Gr ratio D75 */
         1.000000f, /* Golden Module R/Gr ratio A */
         1.000000f, /* Golden Module R/Gr ratio TL84 */
         1.000000f, /* Golden Module R/Gr ratio CW */
         1.000000f, /* Golden Module R/Gr ratio H */
         1.000000f, /* Golden Module R/Gr ratio D50 */
         1.000000f, /* Golden Module R/Gr ratio Cust F */
         1.000000f, /* Golden Module R/Gr ratio Noon */
         1.000000f, /* Golden Module R/Gr ratio Cust Daylight */
         1.000000f, /* Golden Module R/Gr ratio Cust A */
         1.000000f, /* Golden Module R/Gr ratio U30 */
         1.000000f, /* Golden Module R/Gr ratio Custom Daylight 1 */
         1.000000f, /* Golden Module R/Gr ratio Custom Daylight 2 */
         1.000000f, /* Golden Module R/Gr ratio Custom Flo 1 */
         1.000000f, /* Golden Module R/Gr ratio Custom Flo 2 */
      },
      /* Gb/Gr */
      {
         1.000000f, /* Golden Module Gb/Gr ratio D65 */
         1.000000f, /* Golden Module Gb/Gr ratio D75 */
         1.000000f, /* Golden Module Gb/Gr ratio A */
         1.000000f, /* Golden Module Gb/Gr ratio TL84 */
         1.000000f, /* Golden Module Gb/Gr ratio CW */
         1.000000f, /* Golden Module Gb/Gr ratio H */
         1.000000f, /* Golden Module Gb/Gr ratio D50 */
         1.000000f, /* Golden Module Gb/Gr ratio Cust F */
         1.000000f, /* Golden Module Gb/Gr ratio Noon */
         1.000000f, /* Golden Module Gb/Gr ratio Cust Daylight */
         1.000000f, /* Golden Module Gb/Gr ratio Cust A */
         1.000000f, /* Golden Module Gb/Gr ratio U30 */
         1.000000f, /* Golden Module Gb/Gr ratio Custom Daylight 1 */
         1.000000f, /* Golden Module Gb/Gr ratio Custom Daylight 2 */
         1.000000f, /* Golden Module Gb/Gr ratio Custom Flo 1 */
         1.000000f, /* Golden Module Gb/Gr ratio Custom Flo 2 */
      },
      /* B/Gr */
      {
         1.000000f, /* Golden Module B/Gr ratio D65 */
         1.000000f, /* Golden Module B/Gr ratio D75 */
         1.000000f, /* Golden Module B/Gr ratio A */
         1.000000f, /* Golden Module B/Gr ratio TL84 */
         1.000000f, /* Golden Module B/Gr ratio CW */
         1.000000f, /* Golden Module B/Gr ratio H */
         1.000000f, /* Golden Module B/Gr ratio D50 */
         1.000000f, /* Golden Module B/Gr ratio Cust F */
         1.000000f, /* Golden Module B/Gr ratio Noon */
         1.000000f, /* Golden Module B/Gr ratio Cust Daylight */
         1.000000f, /* Golden Module B/Gr ratio Cust A */
         1.000000f, /* Golden Module B/Gr ratio U30 */
         1.000000f, /* Golden Module B/Gr ratio Custom Daylight 1 */
         1.000000f, /* Golden Module B/Gr ratio Custom Daylight 2 */
         1.000000f, /* Golden Module B/Gr ratio Custom Flo 1 */
         1.000000f, /* Golden Module B/Gr ratio Custom Flo 2 */
      },
   },
   /* Flow Control */
   {

      /*********************************************************************/
      // Feature name: AWB Flow Control.
      //
      // Variable name: skip_frames.
      // Default value: 0.
      // Data range: 0 to 100.
      // Number of frames for skipping AWB process,
      //
      // Variable name: stat_saturation_threshold.
      // Bayer AWB stat saturation threshold; only stats with saturation percentage less than this threshold
      //   will be used for AWB process.
      // Default value: 80.
      // Data range: 0 to 100.
      // Constraints:
      // Effect: Higher value allows using stats with higher saturation percentage.
      //
      // Variable name: all_outlier_heuristic_flag.
      // Enable all outlier heuristic function. If disabled
      //   the frame is skipped when all stats are outliers.
      // Data range: 0 (disable) or 1 (enable).
      // Default value: 1.
      //
      // Variable name: valid_per_th.
      // Required percentage of valid sample for AWB.
      // Default value: 1.
      // Data range: 0 to 100.
      /*********************************************************************/

      2, /* Num Frames to skip after changing VFE */
      80, /* Stat Saturation Threshold */
      1, /* All Outlier Heuristic Flag */
      1, /* Valid Percentage Threshold */
   },
   /* Blue Tuning */
   {
      /* Blue Sky Params */
      {

         /*********************************************************************/
         // Feature name: AWB Blue Sky.
         // Structure definition of blue sky parameters.
         //
         // Variable name: ref_b_bg_tl84.
         // This reference R, B's r/g and b/g are for 8k FFA; it needs to be tuned for other sensors.
         //   Corresponding rolloff table should be applied when doing the measurement.
         // Default value: These two values are specifically estimated for the
         //                corresponding sensor. Default value for 8k Foxcon sensor are:
         //                ref_b_bg_tl84 = 1.4049; ref_r_rg_a = 3.1547.
         // Data range: 0 to 10.
         // Constraints: None.
         // Effect: Accurately estimated values decide the stat collected for extreme blue and red.
         //         For calibration of these two values, take full-view MCC chart under TL84 and A lighting.
         //         Apply correct rolloff table and then measure the blues b/g from the MCC taken under TL84.
         //         Measure the reds r/g from the MCC taken under A.
         //
         // Variable name: extreme_range_perc_b.
         // Extreme blue and red threshold.
         // Default value: 1.
         // Data range: 0 to 10.
         // Constraints: None.
         // Effect: Higher values increase the boundary of collecting extreme red and blue stat.
         //         Lower values reduce the boundary of collecting the extreme stat.
         //
         // Variable name: blue_sky_pec.
         // Percentage of the extreme blue stats.
         // Default value: 0.20
         // Data range: 0 to 1.
         // Constraints: None.
         // Effect: If the extreme blue stats exceed this percentage of all the collected stats, the blue sky prevention is to be conducted
         //         to prevent purple sky. The smaller the percentage, the easier the purple sky prevention will be performed when AWB decision
         //         is day light.
         //
         // Variable name: blue_sky_pec_buffer.
         // Percentage of the extreme blue stats.
         // Default value: 0.15
         // Data range: 0 to awb2_blue_sky_pec.
         // Constraints: None.
         // Effect: This percentage is to set a buffer zone between doing the purple sky prevention and not doing it. The closer to awb2_blue_sky_pec,
         //         the smaller the buffer zone is. The smaller it is than awb2_blue_sky_pec, the larger the buffer zone is.
         //
         // Variable name: threshold_extreme_b_percent.
         // Threshold of the blue or red extreme stat counts.
         // Default value: 0.1
         // Data range: 0 to 1.
         // Constraints: None.
         // Effect: Higher value requires a higher number of the collected
         //         extreme stats to be recognized as an extreme color case.
         //
         // Variable name: snow_blue_gain_adj_ratio.
         // Snow blue gain adjustment.
         // Default: 1.0
         // Range: 0.0f to 4.0f.
         //
         // Variable name: beach_blue_gain_adj_ratio.
         // Beach blue gain adjustment
         // Default: 1.0
         // Range: 0.0f, 4.0f.
         /*********************************************************************/

         1.176527f, /* Ref B BG Tl84 */
         0.850000f, /* Extreme Range Offset B */
         0.200000f, /* Blue Sky Percent */
         0.150000f, /* Blue Sky Percent Buffer */
         1.382003f, /* Extreme MCC Blue Threshold */
         /* Purple Prevent */
         {

            /******************************************************************************/
            // Feature name: AWB Purple Prevent.
            //
            // Variable name: AWB_purple_prevent_enable.
            // Enables the feature.
            // Default value: 1.
            // Data range: 0 to 1.
            // Constraints: None.
            //
            // Variable name: control_purple_prevent.
            // Control with gain or lux_index.
            // Default value: 0.
            // Data Range: 0 or 1.
            // Constraints: None.
            // Effect: Use gain or lux_index to control purple sky prevention.
            //
            // Variable name: purple_prevent_trigger.
            // Control the purple sky prevention adjustment trigger.
            // Default value (caluculated): Between 1/2 outdoor index and outdoor index.
            // Data Range: Integers 0 to a few hundreds.
            // Constraints: Only for bright outdoor.
            // Effect: Smaller index values make the purple sky prevention harder to take
            //         effect (has to be very bright).
            //
            // Variable name: purple_sky_prevention_bg_threshold.
            // Controls the purple sky prevention adjustment.
            // Default value (calculated): BG ratio of D50.
            // Data Range: 0 to 2.
            // Constraints: Around D50.
            // Effect: Smaller index values make the adjustment larger.
            /******************************************************************************/

            1, /* Enable */
            0, /* Control Method - 1 = Gain, 0 = Lux Index */
            /* Trigger Point */
            {
               2.000000f, /* Gain Start */
               1.000000f, /* Gain End */
               190, /* Lux Index Start */
               95, /* Lux Index End */
            },
            1.000000f, /* Sky Prevention BG Thresh */
         },
      },
      1.100000f, /* Snow Blue Gain Adj Ratio */
      0.900000f, /* Beach Blue Gain Adj Ratio */
   },
   /* Skin Control */
   {

      /*********************************************************************/
      // Feature name: AWB Skin Control.
      //
      // Variable name: skin_ctrl_enable.
      // Enable/Disable Skin reference points and skin exposure trigger info.
      // Default: 0 (disable).
      // Range: 0 - disable, 1-enable.
      //
      // Variable name: skin_ref_exp_index_trigger.
      // Skin reference point trigger start and end points.
      // Default: 0, 0.
      // Range  : 0 to 1000.
      //
      // Variable name: skin_reference[AGW_AWB_MAX_LIGHT];
      // Skin reference points.
      /*********************************************************************/

      0, /* Enable */
      /* Trigger */
      {
         0.000000f, /* Gain Start */
         0.000000f, /* Gain End */
         0, /* Lux Index Start */
         0, /* Lux Index End */
      },
      /* Skin Reference Points */
      {
         /* D65 AWB Skin Reference Point */
         {
            1.000000f,  /* R/G ratio */
            1.000000f,  /* B/G ratio */
         },
         /* Shade AWB Skin Reference Point */
         {
            1.000000f,  /* R/G ratio */
            1.000000f,  /* B/G ratio */
         },
         /* A AWB Skin Reference Point */
         {
            1.000000f,  /* R/G ratio */
            1.000000f,  /* B/G ratio */
         },
         /* TL84 AWB Skin Reference Point */
         {
            1.000000f,  /* R/G ratio */
            1.000000f,  /* B/G ratio */
         },
         /* CoolWhite AWB Skin Reference Point */
         {
            1.000000f,  /* R/G ratio */
            1.000000f,  /* B/G ratio */
         },
         /* Horizon AWB Skin Reference Point */
         {
            1.000000f,  /* R/G ratio */
            1.000000f,  /* B/G ratio */
         },
         /* D50 AWB Skin Reference Point */
         {
            1.000000f,  /* R/G ratio */
            1.000000f,  /* B/G ratio */
         },
         /* Cust. Fluor. AWB Skin Reference Point */
         {
            1.000000f,  /* R/G ratio */
            1.000000f,  /* B/G ratio */
         },
         /* Noon AWB Skin Reference Point */
         {
            1.000000f,  /* R/G ratio */
            1.000000f,  /* B/G ratio */
         },
         /* Custom Daylight AWB Skin Reference Point */
         {
            1.000000f,  /* R/G ratio */
            1.000000f,  /* B/G ratio */
         },
         /* Custom A AWB Skin Reference Point */
         {
            1.000000f,  /* R/G ratio */
            1.000000f,  /* B/G ratio */
         },
         /* U30 AWB Skin Reference Point */
         {
            1.000000f,  /* R/G ratio */
            1.000000f,  /* B/G ratio */
         },
         /* Custom Daylight 1 Skin Reference Point */
         {
            1.000000f,  /* R/G ratio */
            1.000000f,  /* B/G ratio */
         },
         /* Custom Daylight 2 Skin Reference Point */
         {
            1.000000f,  /* R/G ratio */
            1.000000f,  /* B/G ratio */
         },
         /* Custom Flo 1 Skin Reference Point */
         {
            1.000000f,  /* R/G ratio */
            1.000000f,  /* B/G ratio */
         },
         /* Custom Flo 2 Skin Reference Point */
         {
            1.000000f,  /* R/G ratio */
            1.000000f,  /* B/G ratio */
         },
      },
   },
   /* Aux Sensor */
   {

      /*********************************************************************/
      // Feature name : AWB auxiliary sensors.
      // NOTE: currently have motion sensor only. In future, more members will be added.
      //
      // Variable name: aux_sensor_enable.
      // Enable/Disable auxiliary AWB sensor info.
      // Default: 0 (disable).
      // Range: 0 - disable, 1-enable.
      //
      // Variable name: awb_gyro_trigger.
      // Used to control how scene change should be detected for AEC.
      // Default value: 0.0.
      // Data range: -16000.0 to +16000.0.
      // Constraints: None.
      // Effect: The bigger the value is, the less sensitive AEC response to
      //         gyro output value.
      //
      // Variable name: awb_accelerometer_trigger.
      // Used to control how scene change should be detected for AEC.
      // Default value: 0.0.
      // Data range: -16000.0 to +16000.0.
      // Constraints: None.
      // Effect: The bigger the value is, the less sensitive AEC response to
      //         accelerometer change.
      //
      // Variable name: awb_magnetometer_trigger.
      // Used to control how scene change should be detected for AEC.
      // Default value: 0.0.
      // Data range: 0.0 to 360.0.
      // Constraints: None.
      // Effect: The bigger the value is, the less sensitive AEC response to
      //         magnetic field change.
      //
      // Variable name: awb_DIS_motion_vector_trigger.
      // Used to control how scene change should be detected for AEC.
      // Default value: 0.0.
      // Data range: -16000.0 to +16000.0.
      // Constraints: None.
      // Effect: The bigger the value is, the less sensitive AEC response to
      //         digital image stabilization movement/compensation value.
      /*********************************************************************/

      0, /* Enable */
      /* AWB Motion Sensor */
      {
         0.000000f, /* Gyro Trigger */
         0.000000f, /* Accelerometer Trigger */
         0.000000f, /* Magnetometer Trigger */
         0.000000f, /* DIS Motion Vector Trigger */
      },
   },
   /* Front Camera Control */
   {

      /*********************************************************************/
      // Feature name: AWB Front Camera Control.
      // A set of flags for enabling/disabling front camera features.
      //
      // Variable name: awb_front_camera.
      // Enable/disable front camera speific features.
      // Default value: 0.
      // Data range: 0 (disable) or 1 (enable).
      //
      // Variable name: awb_cap_gain_enable.
      // AWB cap gain adjust.
      // Default value: 0.
      // Data range: 0 (disable) or 1 (enable).
      //
      // Variable name: awb_fd_awb_enable.
      // Enable/disable face info delivery and face-aware AWB.
      // Default value: 0.
      // Data range: 0 (disable) or 1 (enable).
      /*********************************************************************/

      0, /* AWB Front Camera */
      0, /* AWB Cap Gain Enable */
      0, /* AWB FD AWB Enable */
   },
   /* Manual Whitebalance */
   {

      /*********************************************************************/
      // Feature name: Manual white balance gains for both
      //               snapshot and viewfinder.
      /*********************************************************************/

      /* TL84 Whitebalance - RGB */
      {1.382800f, 1.000000f, 1.857100f},
      /* D50 Whitebalance - RGB */
      {1.785500f, 1.000000f, 1.507300f},
      /* A Whitebalance - RGB */
      {1.256500f, 1.000000f, 2.193300f},
      /* D65 Whitebalance - RGB */
      {2.024400f, 1.000000f, 1.285300f},
      /* Strobe Flash Whitebalance - RGB */
      {1.000000f, 1.000000f, 1.000000f},
      /* LED Flash Whitebalance - RGB */
      {1.740000f, 1.000000f, 1.362000f},
   },

   /******************************************************************************/
   // Feature name: awb_dynamic_convergence_type
   // Control dynamic skip frames
   //
   // Variable name: awb_dynamic_frame_skip_control_enable
   // Enable/Disable dynamic frame skip control
   // Default value: 0 - disable
   // Data range: 0 - disable, 1 - enable
   //
   // Variable name: awb_settle_time_threshold_for_temp_stability
   // Define the awb settle time threshold for enabling awb_temproal_stability
   // If awb_temproal_stability is enabled and awb settle time is longer than the threshold,
   // the current average r/g and b/g ratio will be replaced by awb historys average r/g and b/g ratio
   // Default value: 1.0
   // Data range: [0.3, 2]
   //
   // Variable name: awb_settle_time_threshold_for_awb_frame_skip
   // If dynamic frame skip control is enabled and awb settle time is longer than the threshold,
   // the AWB will start to kip frame, otherwise, AWB will not skip any frame
   // Default value: 1.0
   // Data range: [0.3, 2]
   //
   // Variable name: convergence_factor
   // convergence speed of red gain (blue gain) for gain adjust
   // Default value: (0.075, 0.075)
   // Data range: [0.02, 1.0]
   //
   // Variable name: convergence_factor_camera_before_awb_settle
   // convergence speed of still mode for awb output gain before AWB settle,
   // the convergence speed should be slower before AWB settle
   // Default value: 0.03
   // Data range: [0.005, 0.2]
   //
   // Variable name: convergence_factor_camera_after_awb_settle
   // convergence speed of still mode for awb output gain before AWB settle,
   // the convergence speed should be faster after AWB settle
   // Default value: 0.15
   // Range : [0.005, 0.2]
   //
   // Variable name: convergence_factor_video_before_awb_settle
   // convergence speed of video mode for awb output gain before AWB settle,
   // the convergence speed should be slower before AWB settle
   // Default value: 0.01
   // Data range: [0.005, 0.2]
   //
   // Variable name: convergence_factor_video_after_awb_settle
   // convergence speed of video mode for awb output gain before AWB settle,
   // the convergence speed should be faster after AWB settle
   // Default value: 0.05
   // Data range: [0.005, 0.2]
   /******************************************************************************/

   /* AWB Dynamic Convergence */
   {
      0, /* AWB Dynamic Convergence Dynamic Frame Skip Control Enable */
      1.000000f, /* AWB Settle Time Thresh For Temp Stability */
      1.000000f, /* AWB Settle Time Thresh For AWB Frame Skp */
      /* Convergence factor */
      {
         0.075000f, /* AWB Convergence Factor Red Adj */
         0.075000f, /* AWB Convergence Factor Blue Adj */
      },
      0.030000f, /* AWB Convergence Factor Camera Before AWB Settle */
      0.150000f, /* AWB Convergence Factor Camera After AWB Settle */
      0.010000f, /* AWB Convergence Factor Video Before AWB Settle */
      0.050000f, /* AWB Convergence Factor Video After AWB Settle */
   },

   /******************************************************************************/
   // Feature name: awb_gyro_assistance_type
   // Convergence with gyro information
   //
   // Variable name: awb_gyro_assisted_awb_enable
   // Enable/Disable gyro assistance awb convergence
   // Default value: 0 - disable
   // Data range: 0 - disable, 1 - enable
   //
   // Variable name: awb_gyro_threshold
   // Define gyro min/max threshold for triggering awb_convergence_speed
   // fstart: min threshold, fend: max threshold
   // Default value: (0.01, 0.3)
   // Data range: [0.005, 1.0]
   //
   // Variable name: awb_gyro_convergence_speed
   // Define min/max AWB convergence speed for gyro information
   // fstart: minimum AWB convergence speed
   // fend: maximum AWB convergence speed
   // Default value: (0.03, 0.3)
   // Data range: [0.005, 0.2]
   //
   // Variable name: awb_gyro_stable_th
   // define the gyro stable threshold
   // Default value: 0.01
   // Data range: [0.005, 0.03]
   //
   // Variable name: awb_gyro_luma_delta_th[AWB_GYRO_LUMA_DELTA_NUM]
   // Define the min/max/stable luma difference values
   // 0: minimum, 1: maximum, 2:stable
   // Default value: [5, 10, 2]
   // Data range: [1, 15]
   //
   // Variable name: awb_gyro_convergence_speed_for_luma
   // Define min/max convergence speed for luma information
   // fstart: min, fend:max
   // Default value: (0.15, 0.3)
   // Data range: [0.2 ,0.005]
   //
   // Variable name: awb_gyro_holdind_time_enable
   // Enable/disable holding time control
   // Default value: 0 - disable
   // Data range: 0 -disable, 1 - enable
   //
   // Variable name: awb_gyro_holding_time_param[AWB_GYRO_HT_PARAM]
   // Define several thresholds corresponding to the holding time properties
   // 0: holding time threshold
   // 1: luma delta threshold
   // 2: maximum holding time threshold
   // 3: lower boundary of gyro average values
   // 4: the percentage of maximum holding time
   // 5: higher boundary of gyro average value
   // 6: the percentage of maximum holding time
   // Default value: [ 3.0, 10, 1.0, 0.01, 1.0, 0.3, 0.5 ]
   // Data range: 0: [1.0, 5.0]
   //             1: [5,2 0]
   //             2: [0.5, 5.0]
   //             3: [0.005, 0.05]
   //             4: [0.1, 1.0]
   //             5: [0.1, 1.0]
   //             6: [0.1, 1.0]
   //
   /******************************************************************************/

   /* AWB Gyro Assisted Convergence */
   {
      0, /* AWB Gyro Assisted Convergence Enable */
      /* AWB Gyro Threshold */
      {
         0.010000f, /* AWB Gyro Assisted Convergence Gyro Thresh Start */
         0.300000f, /* AWB Gyro Assisted Convergence Gyro Thresh End */
      },
      /* AWB Gyro Convergence Speed */
      {
         0.030000f, /* AWB Gyro Assisted Convergence Gyro Convergence Speed Start */
         0.300000f, /* AWB Gyro Assisted Convergence Gyro Convergence Speed End */
      },
      0.010000f, /* AWB Gyro Assisted Convergence Gyro Stable Thresh */
      /* AWB Gyro Assisted Convergence Gyro Luma Delta Thresh */
      {
         5.000000f, 10.00000f, 2.000000f
      },
      /* AWB Gyro Convergence Speed For Luma */
      {
         0.150000f, /* AWB Gyro Assisted Convergence Gyro Convergenc Speed For Luma Start */
         0.300000f, /* AWB Gyro Assisted Convergence Gyro Convergenc Speed For Luma End */
      },
      0, /* AWB Gyro Assisted Convergence Gyro Holding Time Enable */
      /* AWB Gyro Assisted Convergence Gyro Holding Time Param */
      {
         3.000000f, 10.00000f, 1.000000f, 0.010000f, 1.000000f, 0.300000f, 0.500000f
      },
   },
   /* Reserved */
   {
      /* Reserved Integers */
      {
         310, /*dark_threshold_trigger_start*/
         350, /*dark_threshold_trigger_end*/
         0,   /*outdoor_day_top_left_size_reduce_enable*/
         1,   /*highcct_explow_weight_day*/
         1,   /*highcct_exphigh_weight_day*/
         1,   /*highcct_exphigh_weight_f*/
         12,  /*enable_misleading_zone_number*/
         10,  /*w_day*/
         8,   /*w_f*/
         8,   /*w_a*/
         1,   /*w_f*/
         0,/*region_pix_cnt*/
         3,   /*enable single color number*/
         0,   /*white world enable*/
         15,  /*luma delta for preflash*/
         1,   /*awb_skip_lowlux*/
         1000,/*toggle_trigger_val*/
         0, 0, 0, /*reserved params*/
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /* OTP calibration data for misleading color zone*/
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /* OTP calibration data for misleading color zone*/
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /* OTP calibration data for misleading color zone*/
      },
      /* Reserved Floats */
      {
         0.516000f,  /*dark_condition_led_rg_initial*/
         0.560000f,  /*dark_condition_led_bg_initial*/
         5000.000000f,  /*dark_condition_led_cct_initial*/
         1.000000f,  /*typical module selection*/
         0.000000f,  /*min module selection */
         0.000000f,  /*max moulle selection*/
         0.992693f,  /*typical rg ratio*/
         0.989779f,  /*typical bg ratio*/
         0.906849f,  /*min rg ratio*/
         0.911841f,  /*min bg ratio*/
         1.045662f,  /*max rg ratio*/
         1.077939f,  /*min bg ratio*/
         0.100000f,  /*horizon zone rg limit*/
         0.100000f,  /*horizon zone bg limht*/
         1.000000f,  /*led_gain_adjust_r*/
         1.000000f,  /*led_gain_adjust_b*/
         1.591090f,  /*initial r gain */
         1.000000f,  /*initial g gain*/
         1.935734f,  /*initial b gain*/
         4100.000f,  /*initial cct*/
         390.0000f,  /*trigger point to lux index*/
         4100.000f,  /*cct_ct1*/
         1.000000f,  /*cct_w1*/
         4100.000f,  /*cct_ct2*/
         1.000000f,  /*cct_w2*/
         4100.000f,  /*cct_awb_bayer*/
         4100.000f,  /*initial prev_color_temp*/
         1.000000f,  /*dual led intersect slope*/
         0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
      },
   },
},
/* AEC */
{

   /******************************************************************************/
   // Feature name: Common AEC tuning parameters.
   //
   // Variable name: aec_start_index.
   // The initial AEC exposure index when sensor streams on (preview starts).
   // Default value: 240.
   // Data range: 0 to 500.
   //
   // Variable name: luma_tolerance.
   // Luma tolerance to be used in all preview/camcorder AEC convergence.
   //   The smaller the luma tolerance, the more consistent AEC will be. However,
   //   chances of oscillation could also be higher.
   // Suggest NOT tune unless absolutely necessary.
   // Default value: 2.
   // Data range: 1 to 3.
   //
   // Variable name: pct_based_luma_tolerance_enable
   // Set this flag to enable AEC algorithm to use percentage based luma tolerance.
   // It provides more consistency in AEC for lowlight and EV-minus use cases. This
   // is required if ADRC is enabled.
   // Default value: 0
   // Data range: 0 and 1
   //
   // Variable name: luma_tolerance_pct
   // Luma tolerance to be used in all preview/camcorder AEC convergence.
   // The smaller the luma tolerance, the more consistent AEC will be. However,
   // chances of oscillation could also be higher.
   // Suggest NOT tune unless absolutely necessary.
   // Default value: 0.03
   // Data range: (0, 1]
   //
   // Variable name: frame_skip_startup.
   // Number of frames AEC will skip when streaming on. Increase this value if
   //   sensor gives bad output at first few frames.
   // Default value: 0.
   // Data range: 0 to 5.
   //
   // Variable name: aggressiveness_startup.
   // Convergence speed for AEC start up. Increase this value to improve
   //   AEC convergence at stream on. If overshoot/undershoot is observed,
   //   reduce this value to help.
   // Default value: 0.95
   // Data range: 0 to 1.
   //
   // Variable name: exposure_index_adj_step.
   // Exposure index adj step is tied to exposure table. It is 1/(log(step size)).
   // 77.9 corresponds to 3% exposure step size.
   // We do not recommend the user change this value unless exposure table step size is changed.
   //
   // Variable name: ISO100_gain,
   // ISO 100 gain is calibrated by Chromatix tool.
   //
   // Variable name: antibanding_vs_ISO_priority.
   // Use this flag to control the priority between antibanding and manual ISO.
   // Value of 1 means antibanding will take priority, and as a result in manual
   //   ISO case, final ISO speeds of the images may not match exactly what the
   //   user requested from UI.
   // Value of 0 means manual ISO will take priority, which guarantees exact ISO
   //   speed is used, at the cost of having flicker/banding in preview as well as
   //   the final images.
   // Default value: 1.
   // Data range: 0 or 1.
   //
   // Variable name: iso_quantization_enable
   // Set this flag to enable standardized ISO value reporting from AEC.
   // Gains sent to sensor are not changed.
   // Default value: 1
   // Data range: 0 and 1
   /******************************************************************************/

   /* Generic Tuning */
   {
      220, /* AEC Start Index */
      2, /* Luma Tolerance */
      0, /* Enable AEC To Use Percentage Based Luma Tolerance */
      0.000000f, /* Luma Tolerance Percentage */
      2, /* Frame Skip Startup */
      0.950000f, /* Aggressiveness Startup */
      77.90000f, /* Exposure Index Adj Step */
      2.407805f, /* ISO 100 Gain */
      1, /* Antibanding vs. ISO Priority */
      0, /* Enable Standardized ISO Value Reporting */

      /******************************************************************************/
      // Variable name: max_snapshot_exposure_time_allowed
      // Max exposure time allowed is defined in seconds. It is used
      // for lowlight.
      // Effect: Larger value will result in lower noise image but with more blur.
      //
      // Variable name: lux_index_ref
      // Reference luma target for calculating lux index as well as awb exposure index.
      // No need to tune.
      // Default value: 50
      // Data range: [0 255]
      //
      // Variable name: aec_subsampling_factor
      // Subsampling factor for AEC to skip bayer stats for the purpose of power saving
      // Default value: 4
      // Data range: 1 to 8
      /******************************************************************************/

      0.500000f, /* Max Snapshot Exposure Time Allowed */
      50, /* Reference Target For Lux Index Computation */
      8, /* AEC Subsampling Factor */

      /******************************************************************************/
      // Feature name: AEC index compensation
      // Applicable operation mode:  Snapshot, Preview and Camcorder
      // When this feature is enabled, AEC output normalized AWB exposure index and
      // lux index, regardless of the sensor resolution mode.
      //
      // Variable name: awb_exp_idx_comp_enable
      // Flag to enable the AWB exposure index compensation feature
      // Default value: 0
      // Data range: 0 and 1
      //
      // Variable name: lux_idx_comp_enable
      // Flag to enable the lux index compensation feature
      // Default value: 0
      // Data range: 0 and 1
      //
      // Variable name: ref_sensitivity
      // Reference sensitivity. A must tune value if any of the above enable flags are set.
      // The value is the sensitivity of the first entry of the preview mode exposure table.
      // The sensitivity is calculated as exposure time (in second) multipled by gain, and
      // further multipled by binning factor (most of the time, binning factor is 1).
      // Default value: 0.00001
      // Data range: [0 1]
      /******************************************************************************/

      /* Idx Comp */
      {
         0, /* Enable Compensation Of AWB Exposure Index */
         0, /* Enable Compensation Of Lux Index */
         0.000000f, /* Reference Sensitivity Used In Compensation */
      },

      /******************************************************************************/
      // Feature name: AEC EV compensation
      // Applicable operation mode:  Snapshot, Preview and Camcorder
      // This structure enables tuning of the EV tables for both regular EV compensation
      // and bracketing use cases.
      //
      // Variable name: steps_per_ev
      // This variable defines the number of steps for each EV in the EV tables
      // Due to s/w limitation, this variable needs to be changed simultaneously with
      // the hard-coded values inside stats module code (aec_module.c) on LA.
      // Default value: 6
      // Data range: 1 to 12 (integer)
      //
      // Variable name: min_ev_val
      // The minimal EV value in the ev table. It is recommended to NOT change normally.
      // Also this variable needs to be changed simultaneously with the hard-coded
      // values inside stats module code (aec_module.c) on LA.
      // Default value: -2
      // Data range: -2 to 0
      //
      // Variable name: max_ev_val
      // The maximal EV value in the ev table. It is recommended to NOT change normally.
      // Also this variable needs to be changed simultaneously with the hard-coded
      // values inside stats module code (aec_module.c) on LA.
      // Default value: 2
      // Data range: 0 to 2
      //
      // Variable name: ev_comp_table
      // EV table that can be tuned for EV compensation in AEC auto mode. The EV table
      // normally starts from -2, and ends at +2. With steps_per_ev set at 6, the table
      // will need 25 entries. The maximum steps_per_ev is 12, which requires 49 entries
      // in the EV table.
      // Default value: {0.2500f, 0.2806f, 0.3150f, 0.3536f, 0.3969f, 0.4454f, 0.5000f,
      //   0.5612f, 0.6299f, 0.7071f, 0.7937f, 0.8909f, 1.0000f, 1.1225f, 1.2599f, 1.4142f,
      //   1.5874f, 1.7818f, 2.0000f, 2.2449f, 2.5198f, 2.8284f, 3.1748f, 3.5636f, 4.0000f}
      // Data range: [0.0f, 10.0f] for each entry
      //
      // Variable name: bracketing_table
      // It is also an EV table, except that it is used in bracketing exposure calculation
      // which is the multi-frame HDR use case. It can be tuned independently of regular
      // AEC EV compensation.
      // Default value: {0.2500f, 0.2806f, 0.3150f, 0.3536f, 0.3969f, 0.4454f, 0.5000f,
      //   0.5612f, 0.6299f, 0.7071f, 0.7937f, 0.8909f, 1.0000f, 1.1225f, 1.2599f, 1.4142f,
      //   1.5874f, 1.7818f, 2.0000f, 2.2449f, 2.5198f, 2.8284f, 3.1748f, 3.5636f, 4.0000f}
      // Data range: [0.0f, 10.0f] for each entry
      /******************************************************************************/

      /* AEC EV Table */
      {
         6, /* Steps Per EV */
         -2, /* Minimal Allowed EV Value */
         2, /* Maximum Allowed EV Value */
         /* EV Table */
         {
            0.250000f, 0.280600f, 0.315000f, 0.353600f, 0.396900f, 0.445400f, 0.500000f, 0.561200f, 0.629900f, 0.707100f,
            0.793700f, 0.890900f, 1.000000f, 1.122500f, 1.259900f, 1.414200f, 1.587400f, 1.781800f, 2.000000f, 2.244900f,
            2.519800f, 2.828400f, 3.174800f, 3.563600f, 4.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
         /* Bracketing Table */
         {
            0.250000f, 0.280600f, 0.315000f, 0.353600f, 0.396900f, 0.445400f, 0.500000f, 0.561200f, 0.629900f, 0.707100f,
            0.793700f, 0.890900f, 1.000000f, 1.122500f, 1.259900f, 1.414200f, 1.587400f, 1.781800f, 2.000000f, 2.244900f,
            2.519800f, 2.828400f, 3.174800f, 3.563600f, 4.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
      },

      /******************************************************************************/
      // Feature name: AEC Luma Weight
      // Applicable operation mode:  Snapshot, Preview and Camcorder
      // Luma weight for calculating the luma is exposed. Also a compensation feature
      // is introduced to allow AEC to compensate the r/g/b weights for luma
      // calculation based on the current white balance decision. In addition, since
      // WB gains are OTP corrected, the additional benefit of this feature is to also
      // compensate luma variation caused by module-to-module variation as well.
      //
      // Variable name: r_weight
      // The default weight used to multiply red channel to calculate luma. If color and
      // sensor compensation is not enabled, this is the final red weight used by AEC.
      // Default value: 0.2988
      // Data range: [0, 1]
      //
      // Variable name: g_weight
      // The default weight used to multiply green channel to calculate luma. If color and
      // sensor compensation is not enabled, this is the final green weight used by AEC.
      // Default value: 0.5869
      // Data range: [0, 1]
      //
      // Variable name: b_weight
      // The default weight used to multiply blue channel to calculate luma. If color and
      // sensor compensation is not enabled, this is the final blue weight used by AEC.
      // Default value: 0.1137
      // Data range: [0, 1]
      //
      // Variable name: color_and_sensor_comp_enable
      // Enabling compensation for luma calculation under different lighting as well as
      // different sensor modules. If this flag is set, "r_weight", "g_weight" and "b_weight"
      // are modified dynamically based on the difference between current white balance gains
      // and reference white balance gains as defined below.
      // Default value: 0
      // Data range: 0 and 1
      //
      // Variable name: ref_rGain
      // The reference white balance gain used to calculate the adjustment factor on
      // r_weight. It is recommended to set this value to D50 red gain of the golden module.
      // If feature is enabled, this value is must tune.
      // Default value: 1.8
      // Data range: [1, 3]
      //
      // Variable name: ref_gGain
      // The reference white balance gain used to calculate the adjustment factor on
      // g_weight. It is recommended to set this value to D50 green gain of the golden module.
      // If feature is enabled, this value is must tune.
      // Default value: 1.0
      // Data range: [1, 3]
      //
      // Variable name: ref_bGain
      // The reference white balance gain used to calculate the adjustment factor on
      // b_weight. It is recommended to set this value to D50 blue gain of the golden module.
      // If feature is enabled, this value is must tune.
      // Default value: 1.5
      // Data range: [1, 3]
      /******************************************************************************/

      /* AEC Luma Weight */
      {
         0.298800f, /* R Weight For Calculating Luma */
         0.586900f, /* G Weight For Calculating Luma */
         0.113700f, /* B Weight For Calculating Luma */
         0, /* Enable Color And Sensor Compensation */
         0.000000f, /* Reference R Gain */
         0.000000f, /* Reference G Gain */
         0.000000f, /* Reference B Gain */
      },
      /* Reserved */
      {
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
      }
   },

   /*********************************************************************/
   // Feature name: AEC Exposure Table.
   //
   // Variable name: valid_entries.
   // Number of entries in the exposure table, not counting EV lowlight section.
   //
   // Variable name: aec_enable_digital_gain_for_EV_lowlight.
   // Indicates if extended exp table is used for EV lowlight case.
   // Default value: 0.
   // Data range : 0 or 1.
   //
   // Variable name: total_entries_with_digital_gain_for_EV.
   // The maximum exposure table size when EV lowlight in enabled.
   // It needs to be in sync with the table contents.
   //
   // Variable name: fix_fps_aec_table_index.
   // The last exposure index which maintains fixed/max fps. This means that
   //    beyond this exposure index, FPS will start dropping.
   // Value should be calculated by Chromatix tool once fix fps linecount is
   //    provided by reading sensor driver information.
   //
   // Variable name: exposure_entries.
   // Exposure table contains 2 columns. The first column is real gain values
   //    right shifted 8 bits. For example, 256 means gain of 1.0. The 2nd column
   //    is sensor integration (exposure) time in terms of number of lines.
   //    Exposure table is generated by Chromatix or sensor driver team.
   //    It can be regenerated in Chromatix tool by specifying different max gain
   //    and max line count.  We do not recommend user to manually modify it because it
   //    potentially will change trigger points for many parameters.
   /*********************************************************************/

   /* Exposure Table */
   {
      293, /* Max Exposure Table Entries for EV0 */
      1, /* Enable Digital Gain for EV Lowlight */
      339, /* Max Exposure Table Entries for EV+2 with digital gain */
      292, /* Fix FPS AEC Table Index */
      {
         {256, 4}, /* Gain= 1.000 Exposure Index=0 */
         {264, 4}, /* Gain= 1.031 Exposure Index=1 */
         {272, 4}, /* Gain= 1.063 Exposure Index=2 */
         {280, 4}, /* Gain= 1.094 Exposure Index=3 */
         {288, 4}, /* Gain= 1.125 Exposure Index=4 */
         {297, 4}, /* Gain= 1.160 Exposure Index=5 */
         {306, 4}, /* Gain= 1.195 Exposure Index=6 */
         {315, 4}, /* Gain= 1.230 Exposure Index=7 */
         {260, 5}, /* Gain= 1.016 Exposure Index=8 */
         {268, 5}, /* Gain= 1.047 Exposure Index=9 */
         {276, 5}, /* Gain= 1.078 Exposure Index=10 */
         {284, 5}, /* Gain= 1.109 Exposure Index=11 */
         {293, 5}, /* Gain= 1.145 Exposure Index=12 */
         {302, 5}, /* Gain= 1.180 Exposure Index=13 */
         {259, 6}, /* Gain= 1.012 Exposure Index=14 */
         {267, 6}, /* Gain= 1.043 Exposure Index=15 */
         {275, 6}, /* Gain= 1.074 Exposure Index=16 */
         {283, 6}, /* Gain= 1.105 Exposure Index=17 */
         {291, 6}, /* Gain= 1.137 Exposure Index=18 */
         {257, 7}, /* Gain= 1.004 Exposure Index=19 */
         {265, 7}, /* Gain= 1.035 Exposure Index=20 */
         {273, 7}, /* Gain= 1.066 Exposure Index=21 */
         {281, 7}, /* Gain= 1.098 Exposure Index=22 */
         {289, 7}, /* Gain= 1.129 Exposure Index=23 */
         {260, 8}, /* Gain= 1.016 Exposure Index=24 */
         {268, 8}, /* Gain= 1.047 Exposure Index=25 */
         {276, 8}, /* Gain= 1.078 Exposure Index=26 */
         {284, 8}, /* Gain= 1.109 Exposure Index=27 */
         {260, 9}, /* Gain= 1.016 Exposure Index=28 */
         {268, 9}, /* Gain= 1.047 Exposure Index=29 */
         {276, 9}, /* Gain= 1.078 Exposure Index=30 */
         {284, 9}, /* Gain= 1.109 Exposure Index=31 */
         {263, 10}, /* Gain= 1.027 Exposure Index=32 */
         {271, 10}, /* Gain= 1.059 Exposure Index=33 */
         {279, 10}, /* Gain= 1.090 Exposure Index=34 */
         {261, 11}, /* Gain= 1.020 Exposure Index=35 */
         {269, 11}, /* Gain= 1.051 Exposure Index=36 */
         {277, 11}, /* Gain= 1.082 Exposure Index=37 */
         {262, 12}, /* Gain= 1.023 Exposure Index=38 */
         {270, 12}, /* Gain= 1.055 Exposure Index=39 */
         {257, 13}, /* Gain= 1.004 Exposure Index=40 */
         {265, 13}, /* Gain= 1.035 Exposure Index=41 */
         {273, 13}, /* Gain= 1.066 Exposure Index=42 */
         {261, 14}, /* Gain= 1.020 Exposure Index=43 */
         {269, 14}, /* Gain= 1.051 Exposure Index=44 */
         {259, 15}, /* Gain= 1.012 Exposure Index=45 */
         {267, 15}, /* Gain= 1.043 Exposure Index=46 */
         {258, 16}, /* Gain= 1.008 Exposure Index=47 */
         {266, 16}, /* Gain= 1.039 Exposure Index=48 */
         {258, 17}, /* Gain= 1.008 Exposure Index=49 */
         {266, 17}, /* Gain= 1.039 Exposure Index=50 */
         {259, 18}, /* Gain= 1.012 Exposure Index=51 */
         {267, 18}, /* Gain= 1.043 Exposure Index=52 */
         {261, 19}, /* Gain= 1.020 Exposure Index=53 */
         {269, 19}, /* Gain= 1.051 Exposure Index=54 */
         {263, 20}, /* Gain= 1.027 Exposure Index=55 */
         {258, 21}, /* Gain= 1.008 Exposure Index=56 */
         {266, 21}, /* Gain= 1.039 Exposure Index=57 */
         {262, 22}, /* Gain= 1.023 Exposure Index=58 */
         {258, 23}, /* Gain= 1.008 Exposure Index=59 */
         {266, 23}, /* Gain= 1.039 Exposure Index=60 */
         {263, 24}, /* Gain= 1.027 Exposure Index=61 */
         {260, 25}, /* Gain= 1.016 Exposure Index=62 */
         {258, 26}, /* Gain= 1.008 Exposure Index=63 */
         {266, 26}, /* Gain= 1.039 Exposure Index=64 */
         {264, 27}, /* Gain= 1.031 Exposure Index=65 */
         {262, 28}, /* Gain= 1.023 Exposure Index=66 */
         {261, 29}, /* Gain= 1.020 Exposure Index=67 */
         {260, 30}, /* Gain= 1.016 Exposure Index=68 */
         {259, 31}, /* Gain= 1.012 Exposure Index=69 */
         {258, 32}, /* Gain= 1.008 Exposure Index=70 */
         {258, 33}, /* Gain= 1.008 Exposure Index=71 */
         {258, 34}, /* Gain= 1.008 Exposure Index=72 */
         {258, 35}, /* Gain= 1.008 Exposure Index=73 */
         {258, 36}, /* Gain= 1.008 Exposure Index=74 */
         {259, 37}, /* Gain= 1.012 Exposure Index=75 */
         {260, 38}, /* Gain= 1.016 Exposure Index=76 */
         {261, 39}, /* Gain= 1.020 Exposure Index=77 */
         {262, 40}, /* Gain= 1.023 Exposure Index=78 */
         {257, 42}, /* Gain= 1.004 Exposure Index=79 */
         {259, 43}, /* Gain= 1.012 Exposure Index=80 */
         {261, 44}, /* Gain= 1.020 Exposure Index=81 */
         {257, 46}, /* Gain= 1.004 Exposure Index=82 */
         {259, 47}, /* Gain= 1.012 Exposure Index=83 */
         {261, 48}, /* Gain= 1.020 Exposure Index=84 */
         {258, 50}, /* Gain= 1.008 Exposure Index=85 */
         {261, 51}, /* Gain= 1.020 Exposure Index=86 */
         {259, 53}, /* Gain= 1.012 Exposure Index=87 */
         {257, 55}, /* Gain= 1.004 Exposure Index=88 */
         {260, 56}, /* Gain= 1.016 Exposure Index=89 */
         {259, 58}, /* Gain= 1.012 Exposure Index=90 */
         {258, 60}, /* Gain= 1.008 Exposure Index=91 */
         {257, 62}, /* Gain= 1.004 Exposure Index=92 */
         {256, 64}, /* Gain= 1.000 Exposure Index=93 */
         {260, 65}, /* Gain= 1.016 Exposure Index=94 */
         {260, 67}, /* Gain= 1.016 Exposure Index=95 */
         {256, 70}, /* Gain= 1.000 Exposure Index=96 */
         {256, 72}, /* Gain= 1.000 Exposure Index=97 */
         {257, 74}, /* Gain= 1.004 Exposure Index=98 */
         {258, 76}, /* Gain= 1.008 Exposure Index=99 */
         {259, 78}, /* Gain= 1.012 Exposure Index=100 */
         {257, 81}, /* Gain= 1.004 Exposure Index=101 */
         {258, 83}, /* Gain= 1.008 Exposure Index=102 */
         {256, 86}, /* Gain= 1.000 Exposure Index=103 */
         {258, 88}, /* Gain= 1.008 Exposure Index=104 */
         {257, 91}, /* Gain= 1.004 Exposure Index=105 */
         {256, 94}, /* Gain= 1.000 Exposure Index=106 */
         {258, 96}, /* Gain= 1.008 Exposure Index=107 */
         {258, 99}, /* Gain= 1.008 Exposure Index=108 */
         {258, 102}, /* Gain= 1.008 Exposure Index=109 */
         {258, 105}, /* Gain= 1.008 Exposure Index=110 */
         {258, 108}, /* Gain= 1.008 Exposure Index=111 */
         {256, 112}, /* Gain= 1.000 Exposure Index=112 */
         {257, 115}, /* Gain= 1.004 Exposure Index=113 */
         {258, 118}, /* Gain= 1.008 Exposure Index=114 */
         {257, 122}, /* Gain= 1.004 Exposure Index=115 */
         {256, 126}, /* Gain= 1.000 Exposure Index=116 */
         {258, 129}, /* Gain= 1.008 Exposure Index=117 */
         {258, 133}, /* Gain= 1.008 Exposure Index=118 */
         {256, 138}, /* Gain= 1.000 Exposure Index=119 */
         {256, 142}, /* Gain= 1.000 Exposure Index=120 */
         {256, 146}, /* Gain= 1.000 Exposure Index=121 */
         {257, 150}, /* Gain= 1.004 Exposure Index=122 */
         {256, 155}, /* Gain= 1.000 Exposure Index=123 */
         {257, 159}, /* Gain= 1.004 Exposure Index=124 */
         {257, 164}, /* Gain= 1.004 Exposure Index=125 */
         {257, 169}, /* Gain= 1.004 Exposure Index=126 */
         {257, 174}, /* Gain= 1.004 Exposure Index=127 */
         {257, 179}, /* Gain= 1.004 Exposure Index=128 */
         {256, 185}, /* Gain= 1.000 Exposure Index=129 */
         {257, 190}, /* Gain= 1.004 Exposure Index=130 */
         {257, 196}, /* Gain= 1.004 Exposure Index=131 */
         {257, 202}, /* Gain= 1.004 Exposure Index=132 */
         {257, 208}, /* Gain= 1.004 Exposure Index=133 */
         {256, 215}, /* Gain= 1.000 Exposure Index=134 */
         {257, 221}, /* Gain= 1.004 Exposure Index=135 */
         {257, 228}, /* Gain= 1.004 Exposure Index=136 */
         {257, 235}, /* Gain= 1.004 Exposure Index=137 */
         {257, 242}, /* Gain= 1.004 Exposure Index=138 */
         {256, 250}, /* Gain= 1.000 Exposure Index=139 */
         {256, 257}, /* Gain= 1.000 Exposure Index=140 */
         {257, 264}, /* Gain= 1.004 Exposure Index=141 */
         {257, 272}, /* Gain= 1.004 Exposure Index=142 */
         {256, 281}, /* Gain= 1.000 Exposure Index=143 */
         {256, 289}, /* Gain= 1.000 Exposure Index=144 */
         {257, 297}, /* Gain= 1.004 Exposure Index=145 */
         {256, 307}, /* Gain= 1.000 Exposure Index=146 */
         {256, 316}, /* Gain= 1.000 Exposure Index=147 */
         {256, 325}, /* Gain= 1.000 Exposure Index=148 */
         {257, 334}, /* Gain= 1.004 Exposure Index=149 */
         {256, 345}, /* Gain= 1.000 Exposure Index=150 */
         {256, 355}, /* Gain= 1.000 Exposure Index=151 */
         {256, 365}, /* Gain= 1.000 Exposure Index=152 */
         {257, 375}, /* Gain= 1.004 Exposure Index=153 */
         {257, 387}, /* Gain= 1.004 Exposure Index=154 */
         {256, 400}, /* Gain= 1.000 Exposure Index=155 */
         {256, 412}, /* Gain= 1.000 Exposure Index=156 */
         {256, 424}, /* Gain= 1.000 Exposure Index=157 */
         {256, 436}, /* Gain= 1.000 Exposure Index=158 */
         {256, 449}, /* Gain= 1.000 Exposure Index=159 */
         {256, 462}, /* Gain= 1.000 Exposure Index=160 */
         {256, 475}, /* Gain= 1.000 Exposure Index=161 */
         {256, 489}, /* Gain= 1.000 Exposure Index=162 */
         {256, 503}, /* Gain= 1.000 Exposure Index=163 */
         {256, 518}, /* Gain= 1.000 Exposure Index=164 */
         {256, 533}, /* Gain= 1.000 Exposure Index=165 */
         {256, 548}, /* Gain= 1.000 Exposure Index=166 */
         {256, 564}, /* Gain= 1.000 Exposure Index=167 */
         {256, 580}, /* Gain= 1.000 Exposure Index=168 */
         {256, 597}, /* Gain= 1.000 Exposure Index=169 */
         {256, 614}, /* Gain= 1.000 Exposure Index=170 */
         {256, 632}, /* Gain= 1.000 Exposure Index=171 */
         {256, 650}, /* Gain= 1.000 Exposure Index=172 */
         {256, 669}, /* Gain= 1.000 Exposure Index=173 */
         {256, 689}, /* Gain= 1.000 Exposure Index=174 */
         {256, 709}, /* Gain= 1.000 Exposure Index=175 */
         {256, 730}, /* Gain= 1.000 Exposure Index=176 */
         {260, 740}, /* Gain= 1.016 Exposure Index=177 */
         {268, 740}, /* Gain= 1.047 Exposure Index=178 */
         {276, 740}, /* Gain= 1.078 Exposure Index=179 */
         {284, 740}, /* Gain= 1.109 Exposure Index=180 */
         {293, 740}, /* Gain= 1.145 Exposure Index=181 */
         {302, 740}, /* Gain= 1.180 Exposure Index=182 */
         {311, 740}, /* Gain= 1.215 Exposure Index=183 */
         {320, 740}, /* Gain= 1.250 Exposure Index=184 */
         {330, 740}, /* Gain= 1.289 Exposure Index=185 */
         {340, 740}, /* Gain= 1.328 Exposure Index=186 */
         {350, 740}, /* Gain= 1.367 Exposure Index=187 */
         {361, 740}, /* Gain= 1.410 Exposure Index=188 */
         {372, 740}, /* Gain= 1.453 Exposure Index=189 */
         {383, 740}, /* Gain= 1.496 Exposure Index=190 */
         {394, 740}, /* Gain= 1.539 Exposure Index=191 */
         {406, 740}, /* Gain= 1.586 Exposure Index=192 */
         {418, 740}, /* Gain= 1.633 Exposure Index=193 */
         {431, 740}, /* Gain= 1.684 Exposure Index=194 */
         {444, 740}, /* Gain= 1.734 Exposure Index=195 */
         {457, 740}, /* Gain= 1.785 Exposure Index=196 */
         {471, 740}, /* Gain= 1.840 Exposure Index=197 */
         {485, 740}, /* Gain= 1.895 Exposure Index=198 */
         {500, 740}, /* Gain= 1.953 Exposure Index=199 */
         {515, 740}, /* Gain= 2.012 Exposure Index=200 */
         {530, 740}, /* Gain= 2.070 Exposure Index=201 */
         {546, 740}, /* Gain= 2.133 Exposure Index=202 */
         {562, 740}, /* Gain= 2.195 Exposure Index=203 */
         {579, 740}, /* Gain= 2.262 Exposure Index=204 */
         {596, 740}, /* Gain= 2.328 Exposure Index=205 */
         {614, 740}, /* Gain= 2.398 Exposure Index=206 */
         {632, 740}, /* Gain= 2.469 Exposure Index=207 */
         {651, 740}, /* Gain= 2.543 Exposure Index=208 */
         {671, 740}, /* Gain= 2.621 Exposure Index=209 */
         {691, 740}, /* Gain= 2.699 Exposure Index=210 */
         {712, 740}, /* Gain= 2.781 Exposure Index=211 */
         {733, 740}, /* Gain= 2.863 Exposure Index=212 */
         {755, 740}, /* Gain= 2.949 Exposure Index=213 */
         {778, 740}, /* Gain= 3.039 Exposure Index=214 */
         {801, 740}, /* Gain= 3.129 Exposure Index=215 */
         {825, 740}, /* Gain= 3.223 Exposure Index=216 */
         {850, 740}, /* Gain= 3.320 Exposure Index=217 */
         {876, 740}, /* Gain= 3.422 Exposure Index=218 */
         {902, 740}, /* Gain= 3.523 Exposure Index=219 */
         {929, 740}, /* Gain= 3.629 Exposure Index=220 */
         {957, 740}, /* Gain= 3.738 Exposure Index=221 */
         {986, 740}, /* Gain= 3.852 Exposure Index=222 */
         {1016, 740}, /* Gain= 3.969 Exposure Index=223 */
         {1046, 740}, /* Gain= 4.086 Exposure Index=224 */
         {1077, 740}, /* Gain= 4.207 Exposure Index=225 */
         {1109, 740}, /* Gain= 4.332 Exposure Index=226 */
         {1142, 740}, /* Gain= 4.461 Exposure Index=227 */
         {1176, 740}, /* Gain= 4.594 Exposure Index=228 */
         {1211, 740}, /* Gain= 4.730 Exposure Index=229 */
         {1247, 740}, /* Gain= 4.871 Exposure Index=230 */
         {1284, 740}, /* Gain= 5.016 Exposure Index=231 */
         {1323, 740}, /* Gain= 5.168 Exposure Index=232 */
         {1363, 740}, /* Gain= 5.324 Exposure Index=233 */
         {1404, 740}, /* Gain= 5.484 Exposure Index=234 */
         {1446, 740}, /* Gain= 5.648 Exposure Index=235 */
         {1489, 740}, /* Gain= 5.816 Exposure Index=236 */
         {1534, 740}, /* Gain= 5.992 Exposure Index=237 */
         {1580, 740}, /* Gain= 6.172 Exposure Index=238 */
         {1627, 740}, /* Gain= 6.355 Exposure Index=239 */
         {1676, 740}, /* Gain= 6.547 Exposure Index=240 */
         {1726, 740}, /* Gain= 6.742 Exposure Index=241 */
         {1778, 740}, /* Gain= 6.945 Exposure Index=242 */
         {1831, 740}, /* Gain= 7.152 Exposure Index=243 */
         {1886, 740}, /* Gain= 7.367 Exposure Index=244 */
         {1943, 740}, /* Gain= 7.590 Exposure Index=245 */
         {2001, 740}, /* Gain= 7.816 Exposure Index=246 */
         {2061, 740}, /* Gain= 8.051 Exposure Index=247 */
         {2123, 740}, /* Gain= 8.293 Exposure Index=248 */
         {2187, 740}, /* Gain= 8.543 Exposure Index=249 */
         {2253, 740}, /* Gain= 8.801 Exposure Index=250 */
         {2321, 740}, /* Gain= 9.066 Exposure Index=251 */
         {2391, 740}, /* Gain= 9.340 Exposure Index=252 */
         {2463, 740}, /* Gain= 9.621 Exposure Index=253 */
         {2537, 740}, /* Gain= 9.910 Exposure Index=254 */
         {2613, 740}, /* Gain=10.207 Exposure Index=255 */
         {2691, 740}, /* Gain=10.512 Exposure Index=256 */
         {2772, 740}, /* Gain=10.828 Exposure Index=257 */
         {2855, 740}, /* Gain=11.152 Exposure Index=258 */
         {2941, 740}, /* Gain=11.488 Exposure Index=259 */
         {3029, 740}, /* Gain=11.832 Exposure Index=260 */
         {3072, 740}, /* Gain=12.000 Exposure Index=261 */
         {3164, 740}, /* Gain=12.359 Exposure Index=262 */
         {3259, 740}, /* Gain=12.730 Exposure Index=263 */
         {3357, 740}, /* Gain=13.113 Exposure Index=264 */
         {3458, 740}, /* Gain=13.508 Exposure Index=265 */
         {3562, 740}, /* Gain=13.914 Exposure Index=266 */
         {3669, 740}, /* Gain=14.332 Exposure Index=267 */
         {3779, 740}, /* Gain=14.762 Exposure Index=268 */
         {3892, 740}, /* Gain=15.203 Exposure Index=269 */
         {4009, 740}, /* Gain=15.660 Exposure Index=270 */
         {4129, 740}, /* Gain=16.129 Exposure Index=271 */
         {4253, 740}, /* Gain=16.613 Exposure Index=272 */
         {4381, 740}, /* Gain=17.113 Exposure Index=273 */
         {4512, 740}, /* Gain=17.625 Exposure Index=274 */
         {4647, 740}, /* Gain=18.152 Exposure Index=275 */
         {4786, 740}, /* Gain=18.695 Exposure Index=276 */
         {4930, 740}, /* Gain=19.258 Exposure Index=277 */
         {5078, 740}, /* Gain=19.836 Exposure Index=278 */
         {5230, 740}, /* Gain=20.430 Exposure Index=279 */
         {5387, 740}, /* Gain=21.043 Exposure Index=280 */
         {5549, 740}, /* Gain=21.676 Exposure Index=281 */
         {5715, 740}, /* Gain=22.324 Exposure Index=282 */
         {5886, 740}, /* Gain=22.992 Exposure Index=283 */
         {6063, 740}, /* Gain=23.684 Exposure Index=284 */
         {6245, 740}, /* Gain=24.395 Exposure Index=285 */
         {6432, 740}, /* Gain=25.125 Exposure Index=286 */
         {6625, 740}, /* Gain=25.879 Exposure Index=287 */
         {6824, 740}, /* Gain=26.656 Exposure Index=288 */
         {7029, 740}, /* Gain=27.457 Exposure Index=289 */
         {7240, 740}, /* Gain=28.281 Exposure Index=290 */
         {7457, 740}, /* Gain=29.129 Exposure Index=291 */
         {7680, 740}, /* Gain=30.000 Exposure Index=292 */
         {7910, 740}, /* Gain=30.898 Exposure Index=293 */
         {8147, 740}, /* Gain=31.824 Exposure Index=294 */
         {8391, 740}, /* Gain=32.777 Exposure Index=295 */
         {8643, 740}, /* Gain=33.762 Exposure Index=296 */
         {8902, 740}, /* Gain=34.773 Exposure Index=297 */
         {9169, 740}, /* Gain=35.816 Exposure Index=298 */
         {9444, 740}, /* Gain=36.891 Exposure Index=299 */
         {9727, 740}, /* Gain=37.996 Exposure Index=300 */
         {10019, 740}, /* Gain=39.137 Exposure Index=301 */
         {10320, 740}, /* Gain=40.313 Exposure Index=302 */
         {10630, 740}, /* Gain=41.523 Exposure Index=303 */
         {10949, 740}, /* Gain=42.770 Exposure Index=304 */
         {11277, 740}, /* Gain=44.051 Exposure Index=305 */
         {11615, 740}, /* Gain=45.371 Exposure Index=306 */
         {11963, 740}, /* Gain=46.730 Exposure Index=307 */
         {12322, 740}, /* Gain=48.133 Exposure Index=308 */
         {12692, 740}, /* Gain=49.578 Exposure Index=309 */
         {13073, 740}, /* Gain=51.066 Exposure Index=310 */
         {13465, 740}, /* Gain=52.598 Exposure Index=311 */
         {13869, 740}, /* Gain=54.176 Exposure Index=312 */
         {14285, 740}, /* Gain=55.801 Exposure Index=313 */
         {14714, 740}, /* Gain=57.477 Exposure Index=314 */
         {15155, 740}, /* Gain=59.199 Exposure Index=315 */
         {15610, 740}, /* Gain=60.977 Exposure Index=316 */
         {16078, 740}, /* Gain=62.805 Exposure Index=317 */
         {16560, 740}, /* Gain=64.688 Exposure Index=318 */
         {17057, 740}, /* Gain=66.629 Exposure Index=319 */
         {17569, 740}, /* Gain=68.629 Exposure Index=320 */
         {18096, 740}, /* Gain=70.688 Exposure Index=321 */
         {18639, 740}, /* Gain=72.809 Exposure Index=322 */
         {19198, 740}, /* Gain=74.992 Exposure Index=323 */
         {19774, 740}, /* Gain=77.242 Exposure Index=324 */
         {20367, 740}, /* Gain=79.559 Exposure Index=325 */
         {20978, 740}, /* Gain=81.945 Exposure Index=326 */
         {21607, 740}, /* Gain=84.402 Exposure Index=327 */
         {22255, 740}, /* Gain=86.934 Exposure Index=328 */
         {22923, 740}, /* Gain=89.543 Exposure Index=329 */
         {23611, 740}, /* Gain=92.230 Exposure Index=330 */
         {24319, 740}, /* Gain=94.996 Exposure Index=331 */
         {25049, 740}, /* Gain=97.848 Exposure Index=332 */
         {25800, 740}, /* Gain=100.781 Exposure Index=333 */
         {26574, 740}, /* Gain=103.805 Exposure Index=334 */
         {27371, 740}, /* Gain=106.918 Exposure Index=335 */
         {28192, 740}, /* Gain=110.125 Exposure Index=336 */
         {29038, 740}, /* Gain=113.430 Exposure Index=337 */
         {29909, 740}  /* Gain=116.832 Exposure Index=338 */
      },
   },

   /******************************************************************************/
   // Feature name : AEC Snapshot LUT
   // Applicable chipset(s):All MSM
   // applicable operation mode: Snapshot
   //
   // variable name: enable
   // Allows snapshot to maximize exposure time used when luma target
   //  cannot be reached.
   // default value: 0
   // data range: 0 or 1
   // constraints: LUT needs to be entered or wrong snapshot brightness may occur.
   // effect: Allows snapshot gains and exposure times to be modified by a
   //  snapshot_ae_table LUT.
   //
   // variable name: exposure_stretch_enable
   // default value: 0
   // data range: 0 and 1
   // constraints: None
   // effect: Allowing auto stretch will cause snapshot to be brighter than preview
   //  when preview does not reach luma target.
   //
   // variable name: valid_entries
   // Number of entries used in ae_table LUT.
   // default value: 2
   // data range: 2 to 10
   // constraints: None
   // effect: Higher values allow more entries in LUT.
   //
   // variable name: snapshot_ae_table
   // Each entry contains a triplet of settings:
   //  lux_index, gain_trade_off, max_exp_time
   // default value: {0, 1/2, 0.200}, {1000, 1/2, 0.200}
   // data range: lux_index --> 0 to 1000
   //             gain_trade_off --> 1 to .1 (1 means keep preview gain, .1 means reduce gain 10 times)
   //             max_exp_time --> 1 (up to number of seconds allowed of exposure)
   // constraints: None
   // effect: By setting this LUT, at specified lux_idx the gain trade off and exposure
   //  caps will be used.  At lux_idx between entries, gain trade-offs and exposure
   //  caps will be linearly interpolated.
   /******************************************************************************/

   /* AEC Snapshot Exposure */
   {
      0, /* Enable */
      0, /* Stretch Enable */
      2, /* Valid Entries */
      /* Snapshot Table */
      {
         /* 0 */
         {
            0,
            0.500000f, /* Gain Trade Off */
            0.200000f, /* Max Exp Time */
         },
         /* 1 */
         {
            1000,
            0.500000f, /* Gain Trade Off */
            0.200000f, /* Max Exp Time */
         },
         /* 2 */
         {
            0,
            0.000000f, /* Gain Trade Off */
            0.000000f, /* Max Exp Time */
         },
         /* 3 */
         {
            0,
            0.000000f, /* Gain Trade Off */
            0.000000f, /* Max Exp Time */
         },
         /* 4 */
         {
            0,
            0.000000f, /* Gain Trade Off */
            0.000000f, /* Max Exp Time */
         },
         /* 5 */
         {
            0,
            0.000000f, /* Gain Trade Off */
            0.000000f, /* Max Exp Time */
         },
         /* 6 */
         {
            0,
            0.000000f, /* Gain Trade Off */
            0.000000f, /* Max Exp Time */
         },
         /* 7 */
         {
            0,
            0.000000f, /* Gain Trade Off */
            0.000000f, /* Max Exp Time */
         },
         /* 8 */
         {
            0,
            0.000000f, /* Gain Trade Off */
            0.000000f, /* Max Exp Time */
         },
         /* 9 */
         {
            0,
            0.000000f, /* Gain Trade Off */
            0.000000f, /* Max Exp Time */
         },
      },
   },
   /* Luma Targets */
   {

      /*********************************************************************/
      // Feature name: AEC Luma Target.
      // Applicable chipset(s): HW version 8952 and 8996 or later.
      // Applicable operation mode: Preview, Snapshot and Camcorder.
      //
      // Variable name: num_zones.
      // Number of lux trigger zones used for luma target tuning.
      // Default value: 3.
      // Data range: 1 to 6.
      //
      // Variable name: triggers.
      // Defines each lux trigger to be used for separating the zones.
      //   Number of triggers should be 1 less than num_zones, and it is arranged in
      //   sequence to align with the zones. For example, if we have 3 zones (zone_1,
      //   zone_2 & zone_3), then triggers should contain in sequence, trigger for zone_1
      //   to zone_2, and trigger for zone_2 to zone_3.
      // Default values: {190, 230}, {360, 420}, (all 0s for rest).
      //
      // Variable name: luma_target.
      // Defines luma target to be used for each trigger zone. Note that it should be
      //   tuned according to gamma and preference.
      // Bit width: 8 bits.
      // Default values: 50(outdoor target), 50(indoor target), 25(lowlight target).
      // Data range: 0 to 255.
      /*********************************************************************/

      3, /* Num Zones Used */
      /* Triggers */
      {
         /* Zone 0 */
         {
            190, /* Start */
            290, /* End */
         },
         /* Zone 1 */
         {
            405, /* Start */
            415, /* End */
         },
         /* Zone 2 */
         {
            0, /* Start */
            0, /* End */
         },
         /* Zone 3 */
         {
            0, /* Start */
            0, /* End */
         },
         /* Zone 4 */
         {
            0, /* Start */
            0, /* End */
         },
      },
      /* Luma Target Data */
      {
         /* Region 0 */
         {
            56, /* Outdoor Luma Target */
         },
         /* Region 1 */
         {
            56, /* Default Luma Target */
         },
         /* Region 2 */
         {
            39, /* Low-Light Luma Target */
         },
         /* Region 3 */
         {
            0, /* Region 3 Luma Target */
         },
         /* Region 4 */
         {
            0, /* Region 4 Luma Target */
         },
         /* Region 5 */
         {
            0, /* Region 5 Luma Target */
         },
      },
   },
   /* Metering Tables */
   {

      /******************************************************************************/
      // variable name: AEC_weight_center_weighted
      // Weight for each AEC STATs region under center weighted mode
      // applicable chipset:  all chipsets
      // 3A version: N/A
      // applicable operation mode: preview and snapshot
      // default Value:
      // Data Range: N/A
      // constraints: none
      // effect: region with higher weight value has more influence to AEC.
      /******************************************************************************/

      /* Center Weighted */
      {
         {
            0.101600f, 0.103330f, 0.108220f, 0.115420f, 0.123690f, 0.131600f, 0.137780f, 0.141160f, 0.141160f, 0.137780f, 0.131600f, 0.123690f, 0.115420f, 0.108220f, 0.103330f, 0.101600f
         },
         {
            0.103330f, 0.106930f, 0.117100f, 0.132080f, 0.149290f, 0.165750f, 0.178610f, 0.185650f, 0.185650f, 0.178610f, 0.165750f, 0.149290f, 0.132080f, 0.117100f, 0.106930f, 0.103330f
         },
         {
            0.108220f, 0.117100f, 0.142200f, 0.179190f, 0.221670f, 0.262290f, 0.294040f, 0.311410f, 0.311410f, 0.294030f, 0.262290f, 0.221670f, 0.179190f, 0.142200f, 0.117100f, 0.108220f
         },
         {
            0.115420f, 0.132080f, 0.179190f, 0.248600f, 0.328310f, 0.404540f, 0.464100f, 0.496700f, 0.496700f, 0.464100f, 0.404540f, 0.328310f, 0.248600f, 0.179190f, 0.132080f, 0.115420f
         },
         {
            0.123690f, 0.149290f, 0.221670f, 0.328310f, 0.450780f, 0.567890f, 0.659400f, 0.709490f, 0.709490f, 0.659400f, 0.567890f, 0.450770f, 0.328310f, 0.221670f, 0.149290f, 0.123690f
         },
         {
            0.131600f, 0.165750f, 0.262290f, 0.404540f, 0.567890f, 0.724100f, 0.846170f, 0.912970f, 0.912970f, 0.846160f, 0.724100f, 0.567890f, 0.404530f, 0.262290f, 0.165750f, 0.131600f
         },
         {
            0.137780f, 0.178610f, 0.294040f, 0.464100f, 0.659400f, 0.846170f, 0.992100f, 1.000000f, 1.000000f, 0.992100f, 0.846160f, 0.659390f, 0.464100f, 0.294030f, 0.178610f, 0.137780f
         },
         {
            0.141160f, 0.185650f, 0.311410f, 0.496700f, 0.709490f, 0.912970f, 1.000000f, 1.000000f, 1.000000f, 1.000000f, 0.912960f, 0.709480f, 0.496690f, 0.311400f, 0.185640f, 0.141160f
         },
         {
            0.141160f, 0.185650f, 0.311410f, 0.496700f, 0.709490f, 0.912970f, 1.000000f, 1.000000f, 1.000000f, 1.000000f, 0.912960f, 0.709480f, 0.496690f, 0.311400f, 0.185640f, 0.141160f
         },
         {
            0.137780f, 0.178610f, 0.294030f, 0.464100f, 0.659400f, 0.846160f, 0.992100f, 1.000000f, 1.000000f, 0.992090f, 0.846160f, 0.659390f, 0.464090f, 0.294030f, 0.178610f, 0.137780f
         },
         {
            0.131600f, 0.165750f, 0.262290f, 0.404540f, 0.567890f, 0.724100f, 0.846160f, 0.912960f, 0.912960f, 0.846160f, 0.724090f, 0.567880f, 0.404530f, 0.262290f, 0.165750f, 0.131600f
         },
         {
            0.123690f, 0.149290f, 0.221670f, 0.328310f, 0.450770f, 0.567890f, 0.659390f, 0.709480f, 0.709480f, 0.659390f, 0.567880f, 0.450770f, 0.328310f, 0.221670f, 0.149290f, 0.123690f
         },
         {
            0.115420f, 0.132080f, 0.179190f, 0.248600f, 0.328310f, 0.404530f, 0.464100f, 0.496690f, 0.496690f, 0.464090f, 0.404530f, 0.328310f, 0.248600f, 0.179190f, 0.132080f, 0.115420f
         },
         {
            0.108220f, 0.117100f, 0.142200f, 0.179190f, 0.221670f, 0.262290f, 0.294030f, 0.311400f, 0.311400f, 0.294030f, 0.262290f, 0.221670f, 0.179190f, 0.142200f, 0.117100f, 0.108220f
         },
         {
            0.103330f, 0.106930f, 0.117100f, 0.132080f, 0.149290f, 0.165750f, 0.178610f, 0.185640f, 0.185640f, 0.178610f, 0.165750f, 0.149290f, 0.132080f, 0.117100f, 0.106930f, 0.103330f
         },
         {
            0.101600f, 0.103330f, 0.108220f, 0.115420f, 0.123690f, 0.131600f, 0.137780f, 0.141160f, 0.141160f, 0.137780f, 0.131600f, 0.123690f, 0.115420f, 0.108220f, 0.103330f, 0.101600f
         },
      },

      /******************************************************************************/
      // variable name: AEC_weight_spot_weighted
      // Weight for each AEC STATs region under spot weighted mode
      // applicable chipset:  all chipsets
      // 3A version: N/A
      // applicable operation mode: preview and snapshot
      // default Value:
      // Data Range: N/A
      // constraints: none
      // effect: region with higher weight value has more influence to AEC.
      /******************************************************************************/

      /* Spot Weighted */
      {
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, 1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, 1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
      },
   },

   /*********************************************************************/
   // Feature name: AEC Fast Convergence.
   // Applicable chipset(s): HW version 8952 and 8996 or later.
   // Applicable operation mode: Preview and/or Camcorder.
   //
   // Variable name: frame_skip.
   // Whether to enable frame skip in fast convergence. Setting to 0 will disable
   //   frame skip and achieve most smooth convergence user experience. If sensor
   //   has synchronization issue, set this value to 1 so that AEC will skip every
   //   other frame during convergence.
   // Default value: 0.
   // Data range: 0 or 1. All other values are invalid and treated as 1.
   //
   // Variable name: aggressiveness.
   // Convergence aggressiveness defines how fast AEC will converge to the target
   //   when scene changes.
   // Default value: 0.8
   // Data range: 0 to 1.
   //
   // Vairable name: reserved[10]
   // Default values: 0.2f, 0.4f, 1.5f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f
   /*********************************************************************/

   /* Fast Convergence */
   {
      0, /* Frame Skip */
      0.800000f, /* Aggressiveness */
      {
         0.200000f, 0.400000f, 1.500000f, 1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
      }
   },

   /*********************************************************************/
   // Feature name: AEC Slow Convergence.
   // Applicable chipset(s): HW version 8952 and 8996 or later.
   // Applicable operation mode: Camcorder.
   //
   // Variable name: slow_convergence_enable.
   // Whether to enable slow convergence for camcorder mode. If set to 0, AEC will
   //   use fast convergence in camcorder mode as well.
   // Default value: 1.
   // Data range: 0 or 1.
   //
   // Variable name: frame_skip.
   // Whether to enable frame skip in slow convergence. Setting to 0 will disable
   //   frame skip, and achieve most smooth convergence user experience. If sensor
   //   has synchronization issue, set this value to 1 so that AEC will skip every
   //   other frame during convergence.
   // Default value: 0.
   // Data range: 0 or 1. All other values are invalid and treated as 1.
   //
   // Variable name: conv_speed.
   // Convergence speed for slow convergence. Note that this variable is different
   //   from aggressiveness for fast convergence. A value of 0 for conv_speed IS still
   //   valid, which just means minimal speed. On the contrary a value of 1 means
   //   maximal speed.
   // Default value: 0.8
   // Data range: 0 to 1.
   //
   // Variable name: ht_enable.
   // Whether to enable holding time feature for slow convergence. If enabled,
   //   AEC will delay to start convergence if scene is stable for a period of time
   //   and sudden disturbance is then introduced into the preview.
   // Default value: 1.
   // Data range: 0 or 1.
   //
   // Variable name: ht_tolerance_adjust_factor
   // In order for holding time feature to activate, AEC needs to be stable for a
   //   period of time. A different threshold/tolerance can be used to define whether
   //   AEC is stable for holding time feature. This factor is used to adjust/relax
   //   the luma tolerance used in normal mode for the purpose of holding time trigger.
   // The higher this value, the easier holding time can be triggered.
   // Default value: 2.0
   // Data range: [1.0, 4.0]
   //
   // Variable name: ht_thres.
   // The amount of time AEC needs to be stable, before holding time gets activated.
   // This variable is in the unit of seconds.
   // Default value: 3.0 (seconds).
   // Data range: 1.0 to 10.0 (seconds).
   //
   // Variable name: ht_max.
   // The maximum amount of time AEC will 'hold' when sudden disturbance is observed
   //   and holding time is activated (stable condition met).
   // Default value: 1.0 (seconds).
   // Data range: 0 to 3.0 (seconds).
   //
   // Variable name: ht_gyro_enable.
   // Enable the use of gyro sensor data to shorten holding time, when big motion
   //   is observed. This suggests a fast panning has happened, and as a result, AEC
   //   should respond sooner.
   // Default value: 1
   // Data range: 0 or 1.
   /*********************************************************************/

   /* Slow Convergence */
   {
      1, /* Enable */
      1, /* Frame Skip */
      0.700000f, /* Convergence Speed */
      1, /* HT Enable */
      4, /* HT Luma Tolerance */
      3.000000f, /* HT Threshold */
      1.000000f, /* HT Max */
      1, /* HT Gyro Enable */
      /* Reserved */
      {
         30.000000f, 10.000000f, 22.000000f, 8.000000f, 16.000000f, 3.000000f, 5.000000f, 0.200000f, 0.400000f, 0.150000f, 0.250000f, 2.000000f, 4.000000f, 0.050000f, 0.050000f, 0.500000f, 0.700000f, 1.000000f, 0.600000f, 0.500000f, 4.000000f, 1.000000f, 0.400000f, 0.000000f, 0.000000f
      }
   },

   /******************************************************************************/
   // Feature name: AEC LED Flash.
   // Applicable chipset(s): HW version 8952 and 8996 or later.
   // Applicable operation mode: Preview and Snapshot.
   //
   // Variable name: wled_trigger
   // The trigger defines when to trigger LED in auto mode. It replaces "wled_trigger_idx" in
   // previous header version. The trigger has a pair of lux indices, which add hysteresis
   // to avoid inconsistent triggering around lux threshold.
   // Value should be tuned based on lux level. It is advised to trigger under 100lux.
   // Default value: {410, 420}
   // Data range: 0 to 1000
   //
   // Variable name: force_led_af_in_led_on_mode
   // Set this flag to 1 to always run LED AF in LED force ON mode.
   // Default value: 0
   // Data range: 0 and 1
   //
   // Variable name: aec_led_pre_flux, aec_led_flux_hi, aec_led_flux_med, aec_led_flux_low
   //            (LED flux values)
   // These values should be provided by LED manufacturer.
   //
   // Variable name: smart_flash_est_enable.
   // Whether to enable dynamic ROI estimation for flash. If enabled, AEC will
   //   smartly adjust exposure to avoid saturation.
   // Default value: 1.
   // Data range: 0 or 1.
   //
   // Variable name: smart_flash_est_strength.
   // Amount of flexibility to allow AEC to dynamically estimate for flash. The higher
   //   the value, the stronger estimation AEC will attempt to prevent overexposure, while
   //   reducing the value will reduce the aggressiveness of the algorithm.
   // A value of 0 essentially disables the feature.
   // Default value: 1.0
   // Data range: 0 to 2.0
   //
   // Variable name: smart_flash_est_awb_enable.
   // Whether to send sensitivity value (k) to AWB based on dynamic ROI estimation. If
   //   enabled, AWB will receive a "k" value that focuses more on the illuminated area
   //   of the LED, and will help AWB prevent bluish images in low CCT ambient scenarios.
   // Default value: 1.
   // Data range: 0 or 1.
   //
   // Variable name: smart_flash_est_awb_strength.
   // How much flexibility to allow AEC to dynamically estimate for flash for the purpose
   //   of sending to AWB. The higher the value, the more concentrated AEC will be on the
   //   flash illuminated area, and more yellowish the image could be in certain scenes.
   // Default value: 1.0
   // Data range: 0 to 2.0
   //
   // Variable name: flash_target
   // This includes a full set of luma targets for flash use case. Basically, if flash target
   //   is enabled, the flash luma target will be interpolated first based on estimated lux index
   //   for main flash. Then it will be interpolated with regular luma target based on flash
   //   influence (k).
   // Only when "k" is big enough will AEC use the flash target. If "k" is small, AEC uses
   //   regular luma target which is also based on estimated lux index for main flash. If it
   //   is in between, AEC will use interpolation to determine the target.
   // Default value: Same as aec_luma_target for regular case.
   // Variable name: flash_target_enable
   // Enabling use of dedicated flash luma target for the flash images
   // Default value: 0
   // Data range: 0 and 1
   //
   // Variable name: flash_target
   // This includes a full set of luma targets for flash use case. Basically, if flash target
   //   is enabled, the flash luma target will be interpolated first based on estimated lux index
   //   for main flash. Then it will be interpolated with regular luma target based on flash
   //   influence (k).
   // Only when "k" is big enough will AEC use the flash target. If "k" is small, AEC uses
   //   regular luma target which is also based on estimated lux index for main flash. If it
   //   is in between, AEC will use interpolation to determine the target.
   // Default value: Same as aec_luma_target for regular case.
   /******************************************************************************/

   /* LED Flash */
   {
      /* WLED Trigger */
      {
         390, /* LED Trigger Start Lux Index */
         390, /* LED Trigger End Lux Index */
      },
      0, /* Force LED AF In LED On Mode */
      1.000000f, /* AEC LED Preview Flux */
      7.000000f, /* AEC LED Snapshot Flux Hi */
      1.000000f, /* AEC LED Snapshot Flux Med */
      1.000000f, /* AEC LED Snapshot Flux Low */
      1, /* Smart Flash Est Enable */
      1.000000f, /* Smart Flash Est Strength */
      1, /* Smart Flash Est AWB Enable */
      1.000000f, /* Smart Flash Est AWB Strength */
      1, /* Enable Dedicated Flash Target */
      /* Flash Target */
      {
         1, /* Num Zones Used */
         /* Triggers */
         {
            /* Zone 0 */
            {
               0, /* Start */
               0, /* End */
            },
            /* Zone 1 */
            {
               0, /* Start */
               0, /* End */
            },
            /* Zone 2 */
            {
               0, /* Start */
               0, /* End */
            },
            /* Zone 3 */
            {
               0, /* Start */
               0, /* End */
            },
            /* Zone 4 */
            {
               0, /* Start */
               0, /* End */
            },
         },
         /* Luma Target Data */
         {
            /* Region 0 */
            {
               50, /* Region 0 Luma Target */
            },
            /* Region 1 */
            {
               50, /* Region 1 Luma Target */
            },
            /* Region 2 */
            {
               25, /* Region 2 Luma Target */
            },
            /* Region 3 */
            {
               0, /* Region 3 Luma Target */
            },
            /* Region 4 */
            {
               0, /* Region 4 Luma Target */
            },
            /* Region 5 */
            {
               0, /* Region 5 Luma Target */
            },
         },
      },
      2.000000f, /* Target Interp K Start */
      5.000000f, /* Target Interp K End */
      0, /* Smart Flash Target Enable */
      50, /* Max Target Offset */
      /* Reserved */
      {
         30.00000f, 190.0000f, 0.100000f, 0.200000f, 15.00000f, -20.00000f, 3.000000f, 0.030000f, 0.160000f, 12.00000f,
         140.0000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
      }
   },
   /* Touch */
   {

      /******************************************************************************/
      // Feature name : Touch AEC  3A 2.2
      // applicable chipset:  8k, 7x30 and newer.
      // 3A version : 2.2.
      // applicable operation mode: View finder and snapshot.
      //
      // variable name: touch_roi_enable
      // 1 (TRUE) enables the feature, 0 (FALSE) disables the feature.
      // default Value: 1
      // Data Range: 0 or 1
      // constraints:
      // effect: 1 (TRUE) enables the feature, 0 (FALSE) disables the feature.
      //
      // variable name: touch_roi_weight
      // Determines influence or weight of UI (touch) area vs. normal
      //  AEC metering mode.
      // default Value: 0.8
      // Data Range: 0 to 1
      // constraints:
      // effect: 0 means no influence form UI selected area, 1 means "spot meter" on
      //         area selected.  0.5 means both selected area luma and normal AEC luma
      //         are averaged.
      /******************************************************************************/

      1, /* ROI Enable */
      0.700000f, /* Weight */
      /* Reserved */
      {
         0.000000f, 1.000000f, 0.500000f, 0.000000f, 0.000000f
      }
   },
   /* Face */
   {

      /******************************************************************************/
      // Feature name : Face priority AEC, 3A 2.2
      // applicable chipset:  7k and newer supporting face detection and interface
      //                      with auto exposure.
      // 3A version: 2.2
      // applicable operation mode: View finder and snapshot.
      //
      // variable name: aec_face_enable
      // 1 (TRUE) enables the feature, 0 (FALSE) disables the feature.
      // default Value: 0
      // Data Range: 0 or 1
      // constraints:
      // effect:
      //
      // variable name: aec_face_weight
      // Determines how much face area contributes for frame luma calculation.
      // default Value: 0.8
      // Data Range: 0 to 1
      // constraints:
      // effect: 1 means all influence comes from face area.  0 means face information
      // has no influence on AEC.
      //
      // variable name: dark_skin_ratio
      // Skin luma vs. white point luma ratio if close to this value
      //  then we set flag face as dark skin.
      // default Value: 0.3
      // Data Range: 0 to 1
      // constraints:
      // effect:
      //
      // variable name: light_skin_ratio
      // Skin luma vs. white point luma ratio if close to this value
      //  then we flag face as light skin.
      // default Value: 0.7
      // Data Range: 0 to 1
      // constraints:
      // effect:
      //
      // variable name: dark_skin_luma_target
      // Desired luma for dark skin face.
      // default Value (calculated): Default Luma Target * 0.8
      // Data Range: 0 to 255
      // constraints: To be applied post UI EV udpates.
      // effect: AEC tries to make a dark face luma achieve this target.
      //
      // variable name: light_skin_luma_target
      // Desiored luma for light skin face.
      // default Value (calculated): Default Luma Target * 1.2
      // Data Range: 0 to 255
      // constraints: To be applied post UI EV udpates.
      // effect: AEC tries to make a light face luma achieve this target.
      /******************************************************************************/

      1, /* Enable */
      0.6000f,//0.800000f, /* Weight */
      /* Reserved */
      {
         0.150000f, 0.600000f, 0.400000f, 0.700000f, 0.500000f, 0.700000f, 0.900000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
      }
   },
   /* AEC Bright Region */
   {

      /*********************************************************************/
      // Feature name: AEC Bright Region.
      // Applicable chipset(s): HW version 8952 and 8996 or later.
      // Applicable operation mode: Preview, Snapshot, and Camcorder.
      //
      // Variable name: bright_region_enable.
      // Set this flag to enable AEC bright region discrimination.
      // Default value: 0.
      // Data range: 0 to 1.
      //
      // Variable name: num_zones.
      // Number of lux trigger zones used for bright region tuning.
      // Default value: 3.
      // Data range: 1 to 6.
      //
      // Variable name: triggers.
      // Defines each lux trigger to be used for separating the zones.
      //   Number of triggers should be 1 less than num_zones, and it is arranged in
      //   sequence to align with the zones. For example, if we have 3 zones (zone_1,
      //   zone_2 & zone_3), then triggers should contain in sequence, trigger for
      //   zone_1to zone_2, and trigger for zone_2 to zone_3.
      // Default value: Same as luma target triggers.
      //
      // Variable name: bright_region_thres.
      // Above this threshold, the region is considered to be bright. And a weight
      //   will be applied to the bias table weight associated with this region/stat.
      //   Interpolation is used so that the higher value the region is, the more
      //   weight is used.
      // Default values: 220, 220, 220.
      // Bit width: 8 bits
      // Data range: 100 to 255.
      //
      // Variable name: bright_weight.
      // The weight to be used if a region is classified as a bright region. The
      //   value 1.0 means no compensation. Higher than 1.0 will do saturation,
      //   while lower than 1.0 will help increase brightness in backlight cases.
      // Default value: 1.2, 1.2, 1.2
      // Data range: 0.5 to 1.5
      //
      // Variable name: min_tweight.
      // Minimal bias table weight for a stats to be included.
      // Default value: 0.0.
      // Data range: 0.0 to 1.0.
      //
      // Variable name: max_bright_pct.
      // Maximum number of bright regions to be counted. This value is given as the
      //   percentage of all regions in the image frame.
      // Default value: 0.25
      // Data range: 0.0 to 1.0
      /*********************************************************************/

      1, /* Bright Region Influence ADJ Enable */
      3, /* Num Zones Used */
      /* Triggers */
      {
         /* Zone 0 */
         {
            180, /* Start */
            280, /* End */
         },
         /* Zone 1 */
         {
            330, /* Start */
            390, /* Start */
         },
         /* Zone 2 */
         {
            390, /* Start */
            415, /* End */
         },
         /* Zone 3 */
         {
            0, /* Start */
            0, /* End */
         },
         /* Zone 4 */
         {
            0, /* Start */
            0, /* End */
         },
      },
      /* Zone Data */
      {
         /* Zone 0 */
         {
            210, /* Outdoor Bright Region Threshold */
            0.40000f, /* Outdoor Bright Region Weight */
         },
         /* Zone 1 */
         {
            210, /* Indoor Bright Region Threshold */
            0.50000f, /* Indoor Bright Region Weight */
         },
         /* Zone 2 */
         {
            220, /* Low Light Bright Region Threshold */
            0.800000f, /* Low Light Bright Region Weight */
         },
         /* Zone 3 */
         {
            0, /* Threshold */
            0.000000f, /* Weight */
         },
         /* Zone 4 */
         {
            0, /* Threshold */
            0.000000f, /* Weight */
         },
         /* Zone 5 */
         {
            0, /* Threshold */
            0.000000f, /* Weight */
         },
      },
      0.000000f, /* Min Tweight */
      0.250000f, /* Max Bright Percent */
   },
   /* AEC Dark Region */
   {

      /*********************************************************************/
      // Feature name : AEC Dark Region.
      // Applicable chipset(s): HW version 8952 and 8996 or later.
      // Applicable operation mode: Preview, Snapshot, and Camcorder.
      //
      // Variable name: dark_region_enable.
      // Set this flag to enable AEC dark region discrimination.
      // Default value: 0.
      // Data range: 0 or 1.
      //
      // Variable name: num_zones.
      // Number of lux trigger zones used for dark region tuning.
      // Default value: 3.
      // Data range: 1 to 6.
      //
      // Variable name: triggers.
      // Defines each lux trigger to be used for separating the zones.
      //   Number of triggers should be 1 less than num_zones, and it is arranged in
      //   sequence to align with the zones. For example, if we have 3 zones (zone_1,
      //   zone_2 & zone_3), then triggers should contain in sequence, trigger for
      //   zone_1to zone_2, and trigger for zone_2 to zone_3.
      // Default value: Same as luma target triggers.
      //
      // Variable name: dark_region_high_thres.
      // Any region below this brightness value will be considered as a dark region.
      //   A dark region adjust weight is applied to increase or decrease the
      //   influence of this region. Interpolation is used so that the darker the
      //   region is, the more the adjust is.
      // Default values: 15, 15, 15.
      // Data range: 0 to 100.
      // Effect: Lower Value reduces impact of feature.
      //
      // Variable name: dark_region_low_thres.
      // Any region below this brightness value will do the biggest adjust in the
      //   dark region feature.
      // Default values: 5, 5, 5.
      // Data range: 0 to 100
      // Constraints: dark_region_low_thres < dark_region_high_thres.
      // Effect: Lower Value reduces impact of feature.
      //
      // Variable name: dark_weight.
      // The weight to be used if a region is classified as a dark region. 1.0 means
      //   no compensation. Lower than 1.0 will discard dark regions, and help prevent
      //   saturation in certain cases.
      // Default values: 0.75, 1.0, 0.75
      // Data range: 0.5 to 1.2
      //
      // Variable name: min_tweight.
      // Minimal bias table weight for a stats to be included.
      // Default value: 0.0
      // Data range: 0.0 to 1.0
      //
      // Variable name: max_dark_pct.
      // Maximum number of dark regions to be counted. This value is given as the
      //   percentage of all regions in the image frame.
      // Default value: 0.25
      // Data range: 0.0 to 1.0
      /*********************************************************************/

      1, /* Is Supported? */
      3, /* Num Zones Used */
      /* Triggers */
      {
         /* Zone 0 */
         {
            200, /* Start */
            300, /* End */
         },
         /* Zone 1 */
         {
            395, /* Start */
            411, /* End */
         },
         /* Zone 2 */
         {
            0, /* Start */
            0, /* End */
         },
         /* Zone 3 */
         {
            0, /* Start */
            0, /* End */
         },
         /* Zone 4 */
         {
            0, /* Start */
            0, /* End */
         },
      },
      /* Zone Data */
      {
         /* Zone 0 */
         {
            5, /* Low Threshold */
            15, /* High Threshold */
            0.750000f, /* Weight */
         },
         /* Zone 1 */
         {
            5, /* Low Threshold */
            15, /* High Threshold */
            0.750000f, /* Weight */
         },
         /* Zone 2 */
         {
            5, /* Low Threshold */
            15, /* High Threshold */
            1.000000f, /* Weight */
         },
         /* Zone 3 */
         {
            5, /* Low Threshold */
            15, /* High Threshold */
            1.000000f, /* Weight */
         },
         /* Zone 4 */
         {
            5, /* Low Threshold */
            15, /* High Threshold */
            1.000000f, /* Weight */
         },
         /* Zone 5 */
         {
            5, /* Low Threshold */
            15, /* High Threshold */
            1.000000f, /* Weight */
         },
      },
      0.000000f, /* Min Table Weight */
      0.250000f, /* Max Dark Percent */
   },
   /* Extreme Color */
   {

      /*********************************************************************/
      // Feature name : AEC Extreme Color.
      // Applicable chipset(s): HW version 8952 and 8996 or later.
      // Applicable operation mode: Preview, Snapshot, and Camcorder.
      //
      // Variable name: extreme_color_enable.
      // Whether to enable extreme color feature. Setting to 0 disables this feature;
      //   Setting to 1 enables this feature.
      // Default value: 1.
      // Data range: 0 or 1.
      //
      // Variable name: num_zones.
      // Number of lux trigger zones used for extreme color tuning.
      // Default value: 3.
      // Data range: 1 to 6.
      //
      // Variable name: triggers.
      // A table that contains lux triggers that are used to separate lux trigger
      //   zones. Number of triggers should be "num_zones - 1", and it is arranged
      //   in sequence to align with the zones. For example, if we have 3 zones
      //   (zone_1, zone_2, and zone_3), then we should define 2 triggers. Triggers
      //   should be given in sequence. The first trigger is used to separate zone_1
      //   and zone_2; and the second trigger separates zone_2 and zone_3.
      // Default value: same as aec_luma_target triggers.
      // Data range: 0 to Max exp table index.
      //
      // Variable name: triggered_params.
      // A table containing all tuning parameters that need different tuning values for
      //   different zones. One table entry has tuning parameters for one zone.
      //
      // Variable name: adj_ratio.
      // Adjust ratios for R/G/B channels. It is used to generate the decrease ratio
      //   of the luma_target.
      // Default values: {0.8, 0.9, 0.8} -- outdoor adjust ratios for {R, G, and B}
      //                 {0.9, 0.9, 0.9} -- indoor adjust ratios for {R, G, and B}
      //                 {1.0, 1.0, 1.0} -- lowlight adjust ratios for {R, G, and B}
      // Data range: 0.5 to 1.0
      // Effect: The smaller the adjust ratio, the bigger the effect.
      //
      // Variable name: red_th.
      // Threshold that is used with red_interp_pct to detect extreme red.
      // Default value: 1.9
      // Data range: 1.0 to 4.0
      // Constraints: red_th*(1-red_interp_pct) > 1.05.
      // Effect: The smaller the threshold, the more regions will be detected as
      //   extreme red region.
      //
      // Variable name: red_interp_pct.
      // Interpolation percentage that is used with red_th to detect extreme red.
      // Default value: 0.07
      // Data range: 0 to 0.5
      // Constraints: red_th*(1-red_interp_pct) > 1.05.
      // Effect: The bigger the value, the bigger the interpolation range.
      //
      // Variable name: green_rg_th.
      // R/G ratio threshold that is used with the B/G ratio threshold and the
      //   distance threshold to (1, 1) in R/G & B/G space to detection extreme green.
      //   The interpolation zone of this threshold is given by green_rg_interp_pct.
      // Default value: 1.1
      // Data range: 0.8 to 1.2
      // Constraints: green_rg_th*(1+green_rg_interp_pct) < 1.2.
      // Effect: The bigger the threshold, the more regions will be detected as
      //   extreme green region.
      //
      // Variable name: green_rg_interp_pct.
      // Interpolation percentage that is used with green_rg_th for extreme green
      //    detection.
      // Default value: 0.05
      // Data range: 0 to 0.2
      // Constraints: green_rg_th*(1+green_rg_interp_pct) < 1.2.
      // Effect: The bigger the value, the bigger the interpolation range.
      //
      // Variable name: green_bg_th.
      // B/G ratio threshold that is used with the R/G ratio threshold and the
      //   distance threshold to (1, 1) in R/G & B/G space to detection extreme green.
      //   The interpolation zone of this threshold is given by green_bg_interp_pct.
      // Default value: 0.95
      // Data range: 0.8 to 1.1
      // Constraints: green_bg_th*(1+green_bg_interp_pct) < 1.0.
      // Effect: The bigger the threshold, the more regions will be detected as
      //   extreme green region.
      //
      // Variable name: green_bg_interp_pct.
      // Interpolation percentage that is used with green_bg_th for extreme green
      //    detection.
      // Default value: 0.05
      // Data range: 0 to 0.2
      // Constraints: green_bg_th*(1+green_bg_interp_pct) < 1.0.
      // Effect: The bigger the value, the bigger the interpolation range.
      //
      // Variable name: green_cntr_th.
      // Distance threshold to (1, 1) in the R/G & B/G space, which is used with R/G
      //   and B/G ratio thresholds to detection extreme green.
      // The interpolation zone of this threshold is given by green_cntr_interp_pct.
      // Default value: 0.15
      // Data range: 0.05 to 0.3
      // Constraints: green_cntr_th*(1-green_cntr_interp_pct) > 0.05.
      // Effect: The smaller the threshold, the more regions will be detected as
      //   extreme green region.
      //
      // Variable name: green_cntr_interp_pct.
      // Interpolation percentage that is used with green_cntr_th for extreme green
      //    detection.
      // Default value: 0.05
      // Data range: 0 to 0.2
      // Constraints: green_cntr_th*(1-green_cntr_interp_pct) > 0.05.
      // Effect: The bigger the value, the bigger the interpolation range.
      //
      // Variable name: blue_th.
      // Threshold that is used with blue_interp_pct to detect extreme blue.
      // Default value: 1.2
      // Data range: 1.0 to 2.0
      // Constraints: blue_th*(1-blue_interp_pct) > 1.05.
      // Effect: The smaller the threshold, the more regions will be detected as
      //   extreme blue region.
      //
      // Variable name: blue_interp_pct.
      // Interpolation percentage that is used with blue_th to detect extreme blue.
      // Default value: 0.07
      // Data range: 0 to 0.5
      // Constraints: blue_th*(1-blue_interp_pct) > 1.05.
      // Effect: The bigger the value, the bigger the interpolation range.
      //
      // Variable name: luma_high_th.
      // For an extreme color region, if the region luma is larger than luma_high_th,
      //   the region is weighted less in the extreme color feature.
      // Default value: 225.
      // Data range: 1 to 255.
      // Constraints: luma_high_th > luma_low_th.
      //
      // Variable name: luma_low_th.
      // For an extreme color region, if the region luma is smaller than luma_low_th,
      //   the region is weighted less in the extreme color feature.
      // Default value: 30.
      // Data range: 0 to 254.
      // Constraints: luma_high_th > luma_low_th.
      //
      // Variable name: color_stats_pct_high_th.
      // High threshold of percentage of extreme color regions are considered in
      //   each image frame.
      // Default value: 0.5
      // Data range: 0.0 to 1.0
      // Constraints: color_stats_pct_high_th > color_stats_pct_low_th.
      //
      // Variable name: color_stats_pct_low_th.
      // Low threshold of percentage of extreme color regions are considered in
      //   each image frame.
      // Default value: 0.05 for the first element and the rest are all 0.0
      // Data range: 0.0 to 1.0
      // Constraints: color_stats_pct_high_th > color_stats_pct_low_th.
      /*********************************************************************/

      0, /* Color-Based Metering Enable */
      3, /* Num Zones Used */
      /* Triggers */
      {
         /* Zone 0 */
         {
            0, /* Start */
            0, /* End */
         },
         /* Zone 1 */
         {
            0, /* Start */
            0, /* End */
         },
         /* Zone 2 */
         {
            0, /* Start */
            0, /* End */
         },
         /* Zone 3 */
         {
            0, /* Start */
            0, /* End */
         },
         /* Zone 4 */
         {
            0, /* Start */
            0, /* End */
         },
      },
      /* Zone Data */
      {
         /* Zone 0 */
         {
            /* Adj Ratio */
            {
               1.000000f, /* R */
               1.000000f, /* G */
               1.000000f, /* B */
            },
         },
         /* Zone 1 */
         {
            /* Adj Ratio */
            {
               1.000000f, /* R */
               1.000000f, /* G */
               1.000000f, /* B */
            },
         },
         /* Zone 2 */
         {
            /* Adj Ratio */
            {
               1.000000f, /* R */
               1.000000f, /* G */
               1.000000f, /* B */
            },
         },
         /* Zone 3 */
         {
            /* Adj Ratio */
            {
               1.000000f, /* R */
               1.000000f, /* G */
               1.000000f, /* B */
            },
         },
         /* Zone 4 */
         {
            /* Adj Ratio */
            {
               1.000000f, /* R */
               1.000000f, /* G */
               1.000000f, /* B */
            },
         },
         /* Zone 5 */
         {
            /* Adj Ratio */
            {
               1.000000f, /* R */
               1.000000f, /* G */
               1.000000f, /* B */
            },
         },
      },
      1.900000f, /* Red Th */
      0.070000f, /* Red Interp Pct */
      1.100000f, /* Green RG Th */
      0.050000f, /* Green RG Interp Pct */
      0.950000f, /* Green BG Th */
      0.050000f, /* Green BG Interp Pct */
      0.150000f, /* Green Cntr Th */
      0.050000f, /* Green Cntr Interp Pct */
      1.200000f, /* Blue Th */
      0.070000f, /* Blue Interp Pct */
      225.0000f, /* Luma High Th */
      30.00000f, /* Luma Low Th */
      0.500000f, /* Pct High Th */
      0.050000f, /* Pct Low Th */
      /* Reserved */
      {
         0.050000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
      }
   },
   /* Flat Region */
   {

      /*********************************************************************/
      // Feature name : AEC Flat Scene.
      // Applicable chipset(s): HW version 8952 and 8996 or later.
      // Applicable operation mode: Preview and/or Camcorder.
      //
      // Variable name: hist_flat_detector_enable.
      // Flag to enable and disable flat scene detection.
      // Default value:  1.
      // Data range: 0 and 1.
      // Constraints: None.
      // Effect: 0 disables the flat scene detection, 1 enables flat scene detection.
      //
      // Variable name: start_level.
      // Pixel level to start checking the histogram for flat scene.
      // Default value (calculated):  42.
      // Data range: range+1 to end_level-range.
      // Constraints: None.
      // Effect: If setting is too low, it will detect a 0 lux image as a flat image.
      //
      // Variable name: end_level.
      // Pixel level to end checking the histogram for flat scene.
      // Default value:  200.
      // Data range: 255-range to 255.
      // Constraints: None.
      // Effect: If setting is too high, it could potentially detect saturated pixels
      //   as a flat image. This is not likely to happen since AEC will bring luma down.
      //
      // Variable name: range.
      // Pixel level range on which to check percent of pixel content.
      // Default value:  40.
      // Data range: 20 to 60.
      // Constraints: None.
      // Effect: If setting is too high, it will make it easier to detect flat scenes
      //   but may wrongly detect even if not flat.  If set too low, it may not detect
      //   flat scenes.
      //
      // Variable name: delta_th_low
      // If the percentage of number of pixels within the range is smaller
      //   than this threshold, the scene is not flat.
      // Default Value: 0.65
      // Data range: 0.5 to 0.75
      //
      // Variable name: delta_th_high
      // If the percentage of number of pixels within the range is larger
      //   than this threshold, the scene is considered flat. If it is in between
      //   this threshold and delta_th_low, interpolation is utilized.
      // Default Value: 0.8
      // Data range: 0.7 to 0.9
      //
      // Variable name: bright_flat_det_th.
      // Describes by how much number of pixels
      //   in dark tail of histogram should be greater than number of pixels in
      //   bright tail of histogram.
      // Default value:  1.2
      // Data range:  1.0 to 1.5
      // Constraints:  None.
      // Effect: Lower value makes it easier to detect bright flat field, a value
      //   of 1.0 means that dark tail number of pixels can be greater or equal to
      //   number of pixels in bright tail and still be considered bright flat
      //   field. A value of 1.5 means if condition below happens, it may be
      //   considered bright field (if rest of conditions are met also).
      //   dark_flat_tail_numpix > 1.5 * bright_flat_tail_numpix.
      //
      // Variable name: dark_flat_det_th.
      // Describes by how much number of pixels in bright tail of histogram
      //   should be greater than number of pixels in dark tail of histogram.
      // Default value:  10.0
      // Data range:  1.0 to 20.0
      // Constraints:  None.
      // Effect: Lower value makes it easier to detect dark flat field. This value
      //   means that there has to be dark_flat_det_th more pixels in the bright tail
      //   than in the dark tail of the histogram.
      //
      // Variable name: bright_flat_tail_det.
      // Defines minimum amount of pixels that need to be in dark tail vs. total
      //   pixels in image to be called a bright flat scene.
      // Default value: 0.001
      // Data range:  0.0005 to 0.01
      // Constraints:  None.
      // Effect: Higher value makes it harder to detect bright flat field as more
      //   pixels are needed in the dark tail vs. total amount of pixels.
      //
      // Variable name: dark_flat_tail_det.
      // Defines minimum amount of pixels needed to be in the bright tail vs.
      //   total pixels in the image to be called a dark flat scene.
      // Default value: 0.10
      // Data range:  0.05 to 0.20
      // Constraints: None.
      // Effect: Higher value makes it harder to detect as dark flat field since more
      //  pixels are needed in the bright tail vs. total amount of pixels in the image.
      //
      // Variable name: bright_flat_compensation_enable.
      // Flag to enable and disable bright flat scene compensation.
      // Default value:  0.
      // Data range: 0 and 1.
      // Constraints: None.
      // Effect: 0 disables the bright flat scene compensation, 1 enables it.
      //
      // Variable name: dark_flat_compensation_enable.
      // Flag to enable and disable dark flat scene compensation.
      // Default value:  0.
      // Data range: 0 and 1.
      // Constraints: None.
      // Effect: 0 disables the bright flat scene compensation, 1 enables it.
      //
      // Variable name: flat_white_grey_vs_nongrey_th.
      // Threshold to determine if flat area is brighter than colored regions:
      //    if (near_gr_luma > th * non_gr_luma) make overall
      //    frame brighter, i.e. increase exposure.
      // Default value:  1.1
      // Data range: 1.05 to 2.0
      // Constraints: None.
      // Effect: If set too low, background will be too easy to detect as white or
      //    brighter than overall scene causing tendency to increase exposure for
      //    flat scenes.
      //
      // Variable name: flat_dark_grey_vs_nongrey_th.
      // Threshold to determine if flat area is darker than colored regions:
      //    if (near_gr_luma < th*non_gr_luma) lower exposure.
      // Default value:  0.5
      // Data range: 0.9 to 0
      // Constraints: None.
      // Effect: If set too low, makes it harder to detect flat areas as dark, if set
      //   too high, it will make it easier to detect flat areas as dark and tend
      //   to reduce exposure on flat scenes.
      //
      // Variable name: near_grey_tolerance.
      // Region R/G and B/G tolerance to flag region as near grey.
      // Default value: 0.05
      // Data range: 0 to 1.0
      // Constraints: None.
      // Effect: Larger tolerances allow more regions to be detected as near grey for
      //   flat scene dark vs. bright flat area detection.  If too large, very few color
      //   regions will be detected.
      //
      // Variable name: bright_flat_compensation_ratio.
      // Determines how much luma will be adjusted
      //  for bright flat scene detection after all conditions are met.
      //  luma = luma * bright_flat_compensation_ratio ==> temporal filter used
      // Default value: 0.6
      // Data range: 0.5 to 1.0
      // Constraints: None.
      // Effect: Value of 1.0 will not affect luma when bright flat scene is detected.
      //  Value of 0.5 will halve luma causing the overall exposure to double, i.e.,
      //  final image is brighter.
      //
      // Variable name: dark_flat_compensation_ratio.
      // Determines how much luma will be adjusted
      //  for dark flat scene detection after all conditions are met.
      //  luma = luma * dark_flat_compensation_ratio ==> temporal filter used.
      // Default value: 1.8
      // Data range: 1.0 to 2.0
      // Constraints: None.
      // Effect: Value of 1.0 will not affect luma when dark flat scene is detected.
      //  Value of 2.0 will double luma causing the overall exposure to be cut in half,
      //  i.e., final image is darker.
      //
      // Variable name: flat_indoor_disable_start_idx.
      // If exposure index is bigger than this variable, flat scene compensation
      //   will start to get disabled.
      // Default Value: 300.
      // Data range: 0 to 500.
      //
      // Variable name: flat_indoor_disable_end_idx.
      // If exposure index is bigger than this variable, flat scene compensation
      //   is completely disabled.
      // Default Value: 340.
      // Data range: 0 to 500.
      /*********************************************************************/

      0, /* Enable */
      42, /* Start Level */
      200, /* End Level */
      40, /* Range */
      0.650000f, /* Delta Th Low */
      0.800000f, /* Delta Th High */
      1.200000f, /* Bright Flat Det Th */
      10.000000f, /* Dark Flat Det Th */
      0.001000f, /* Bright Flat Tail Det */
      0.100000f, /* Dark Flat Tail Det */
      0, /* Bright Flat Compensation Enable */
      0, /* Dark Flat Compensation Enable */
      1.100000f, /* Flat White Gray vs Nongray Thresh */
      0.500000f, /* Flat Dark Gray vs Nongray Thresh */
      0.050000f, /* Near Gray Tolerance */
      0.600000f, /* Bright Flat Compensation Ratio */
      1.800000f, /* Dark Flat Compensation Ratio */
      300, /* Disable Start Index */
      340, /* Disable End Index */
   },

   /******************************************************************************/
   // Feature name : AEC Histogram Luma Target Adjustment.
   // Applicable chipset(s): HW version 8952 and 8996 or later.
   // Applicable operation mode: Preview, Snapshot and Camcorder.
   //
   // Variable name: hist_metering_enable.
   // Set this flag to enable AEC histogram based luma target adjustment.
   // Default value: 1.
   // Data range: 0 to 1.
   //
   // Variable name: adrc_enable
   // ADRC is combined with histogram AEC for tuning interface structuring. Set this flag to
   // either disable or enable ADRC. This replaced the "mode" parameter in previous header
   // revision. GTM/LTM/LA are independently controlled via percentage variables, and hence
   // there is no need to distinguish local or global modes.
   // Default Value: 0
   // Data range: 0 and 1
   //
   // Variable name: dark_end_control_enable
   // Dark end part of the histogram AEC is sometimes unstable (hist_dark_range etc.), and hence
   // it can be disabled with this flag. It'll save computation if it is not used and disabled.
   // Default Value: 0
   // Data range: 0 and 1
   //
   // Variable name: num_zones.
   // Number of lux trigger zones used for histogram AEC tuning.
   // Default value: 3.
   // Data range: 1 to 6.
   //
   // Variable name: triggers.
   // Defines each lux trigger to be used for separating the zones.
   // Number of triggers should be 1 less than num_zones, and it is arranged in
   //   sequence to align with the zones. For example, if we have 3 zones (zone_1,
   //   zone_2 & zone_3), then triggers should contain in sequence, trigger for zone_1
   //   to zone_2, and trigger for zone_2 to zone_3.
   // Default value: same as luma target triggers.
   //
   // Variable name: max_target_adjust_ratio.
   // This defines the cap that AEC can up-adjust the luma target. For example, a
   //   a ratio of 2 means AEC can increase target up to 2 times of the current
   //   luma target.
   // Default values: 1.8, 1.8, 1.0
   // Data range: 1.0 to 3.0
   //
   // Variable name: min_target_adjust_ratio.
   // This defines the cap that AEC can down-adjust the luma target. For example, a
   //   a ratio of 0.5 means AEC can decrease target up to half of the current
   //   luma target.
   // Default value: 0.9, 0.9, 0.8
   // Data range: 0.1 to 1.0
   //
   // Variable name: sat_low_ref.
   // This variable defines the low reference/control point for histogram saturation
   //   position. Usually, saturation positions lower than this threshold will trigger
   //   luma target to up-adjust.
   // Default value: 150 for all zones.
   // Data range: 100 to 200.
   //
   // Variable name: sat_high_ref.
   // This variable defines the high reference/control point for histogram saturation
   //   position. Usually, saturation positions higher than this threshold will trigger
   //   luma target to down-adjust.
   // Constraint: sat_high_ref should never be smaller than sat_low_ref.
   // Default value: 240 for all zones.
   // Data range: 180 to 250.
   //
   // Variable name: dark_low_ref.
   // This variable defines the low reference/control point for histogram darkness
   //   position. Usually, darkness positions lower than this threshold will trigger
   //   luma target to up-adjust.
   // Note that the parameter can have stability issue, suggest to not tune unless
   //   necessary.
   // Default value: 3.
   // Data range: 0 to 10.
   //
   // Variable name: dark_high_ref
   // This variable defines the high reference/control point for histogram darkness
   //   position. Usually, darkness positions higher than this threshold will trigger
   //   luma target to down-adjust.
   // Note that the parameter can have stability issue, suggest to not tune unless
   //   necessary.
   // Constraint: dark_high_ref should never be smaller than dark_low_ref.
   // Default value: 70.
   // Data range: 30 to 100.
   //
   // Variable name: hist_sat_pushup_range
   // The saturated percentage range for push-up compensation (flat/low dynamic range scenes).
   // It is recommended to use a bigger range for push-up for stability reasons.
   // Default Value: {{0.02, 0.08}, {0.02, 0.08}, {0.02, 0.08}}
   //
   // Variable name: hist_sat_pushdown_range
   // The saturated percentage range for push-down compensation (high dynamic range/overexposed scenes).
   // It is recommended to use a smaller range for push-down, so that it can more effectively
   // prevent smaller area of saturation.
   // Default Value: {{0.01, 0.04}, {0.01, 0.04}, {0.01, 0.04}}
   //
   // Variable name: hist_dark range
   // The dark area percentage range used to calculate darkness position and affect luma target.
   // It is generally not recommended to use this particular part due to stability concerns.
   // Default Value: {{0, 0.15}, {0, 0.15}, {0, 0.15}}
   //
   // Variable name: max_drc_gain
   // Maximal DRC gain allowed for the particular lux zone. This variable is only valid when
   // adrc mode is not set to disable.
   // In HDR mode, this parameter is equivalent to max exposure ratio.
   // Default Value: {4.0, 4.0, 4.0}
   // Data range: [1.0, 4.0] for ADRC, [1.0, 16.0] for HDR
   //
   // Variable name: adrc_conv_speed
   // Defines the convergence speed for ADRC tradeoff. The bigger, ADRC converges faster.
   // If it is small, then the highlight may take more time to show up, while if it is too big,
   // then there could be stability issues.
   // No need to tune normally.
   // Default Value: {0.15, 0.15, 0.15}
   // Data range: (0, 0.5]
   //
   // Variable name: gtm_percentage
   // Percentage of current DRC gain to be applied to GTM. This is only applicable if chipset has
   // GTM module support.
   // Applies to ADRC only (not used in HDR).
   // Default Value: {0.5, 0.5, 0.5}
   // Data range: [0, 1]
   //
   // Variable name: ltm_percentage
   // Percentage of current DRC gain to be applied to LTM. This is only applicable if chipset has
   // LTM module support.
   // Applies to ADRC only (not used in HDR).
   // Default Value: {0.5, 0.5, 0.5}
   // Data range: [0, 1]
   //
   // Variable name: la_percentage
   // Percentage of current DRC gain to be applied to GTM. This is only applicable if chipset has
   // LA module support.
   // Applies to ADRC only (not used in HDR).
   // Default Value: {0,0,0}
   // Data range: [0, 1]
   //
   // Variable name: target_filter_factor.
   // This controls the temporal filter to be used for the overall computed luma
   //   target adjustment. The higher the value, the stronger the filter is.
   //   Increase the value for improving stability.
   // Default value: 0.5
   // Data range: 0.0 to 1.0
   /******************************************************************************/

   /* Histogram Metering */
   {
      0, /* Enable */
      0, /* Enable ADRC */
      1, /* Enable Dark End Control */
      3, /* Num Zones Used */
      /* Triggers */
      {
         /* Zone 0 */
         {
            210, /* Start */
            310, /* End */
         },
         /* Zone 1 */
         {
            408, /* Start */
            438, /* End */
         },
         /* Zone 2 */
         {
            0, /* Start */
            0, /* End */
         },
         /* Zone 3 */
         {
            0, /* Start */
            0, /* End */
         },
         /* Zone 4 */
         {
            0, /* Start */
            0, /* End */
         },
      },
      /* Zone Data */
      {
         /* Zone 0 */
         {
            1.800000f, /* Max Target Adj Ratio */
            0.900000f, /* Min Target Adj Ratio */
            200, /* Sat Low Ref */
            240, /* Sat High Ref */
            3, /* Dark Low Ref */
            70, /* Dark High Ref */
            /* Hist Saturation Pushup Range */
            {
               /* Red */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Green */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Blue */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
            },
            /* Hist Saturation Pushdown Range */
            {
               /* Red */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Green */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Blue */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
            },
            /* Hist Dark Range */
            {
               /* Red */
               {
                  0.000000f, /* Start */
                  0.150000f, /* End */
               },
               /* Green */
               {
                  0.000000f, /* Start */
                  0.150000f, /* End */
               },
               /* Blue */
               {
                  0.000000f, /* Start */
                  0.150000f, /* End */
               },
            },
            4.000000f, /* Max ADRC Gain */
            0.150000f, /* ADRC Converage Speed */
            0.500000f, /* GTM Percentage */
            0.500000f, /* LTM Percentage */
            0.000000f, /* LA Percentage */
         },
         /* Zone 1 */
         {
            1.800000f, /* Max Target Adj Ratio */
            0.900000f, /* Min Target Adj Ratio */
            200, /* Sat Low Ref */
            240, /* Sat High Ref */
            3, /* Dark Low Ref */
            70, /* Dark High Ref */
            /* Hist Saturation Pushup Range */
            {
               /* Red */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Green */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Blue */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
            },
            /* Hist Saturation Pushdown Range */
            {
               /* Red */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Green */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Blue */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
            },
            /* Hist Dark Range */
            {
               /* Red */
               {
                  0.000000f, /* Start */
                  0.150000f, /* End */
               },
               /* Green */
               {
                  0.000000f, /* Start */
                  0.150000f, /* End */
               },
               /* Blue */
               {
                  0.000000f, /* Start */
                  0.150000f, /* End */
               },
            },
            4.000000f, /* Max DRC Gain */
            0.150000f, /* ADRC Converage Speed */
            0.500000f, /* GTM Percentage */
            0.500000f, /* LTM Percentage */
            0.000000f, /* LA Percentage */
         },
         /* Zone 2 */
         {
            1.000000f, /* Max Target Adj Ratio */
            0.850000f, /* Min Target Adj Ratio */
            200, /* Sat Low Ref */
            240, /* Sat High Ref */
            3, /* Dark Low Ref */
            70, /* Dark High Ref */
            /* Hist Saturation Pushup Range */
            {
               /* Red */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Green */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Blue */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
            },
            /* Hist Saturation Pushdown Range */
            {
               /* Red */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Green */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Blue */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
            },
            /* Hist Dark Range */
            {
               /* Red */
               {
                  0.000000f, /* Start */
                  0.150000f, /* End */
               },
               /* Green */
               {
                  0.000000f, /* Start */
                  0.150000f, /* End */
               },
               /* Blue */
               {
                  0.000000f, /* Start */
                  0.150000f, /* End */
               },
            },
            4.000000f, /* Max ADRC Gain */
            0.150000f, /* ADRC Converage Speed */
            0.500000f, /* GTM Percentage */
            0.500000f, /* LTM Percentage */
            0.000000f, /* LA Percentage */
         },
         /* Zone 3 */
         {
            1.000000f, /* Max Target Adj Ratio */
            1.000000f, /* Min Target Adj Ratio */
            200, /* Sat Low Ref */
            240, /* Sat High Ref */
            0, /* Dark Low Ref */
            70, /* Dark High Ref */
            /* Hist Saturation Pushup Range */
            {
               /* Red */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Green */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Blue */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
            },
            /* Hist Saturation Pushdown Range */
            {
               /* Red */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Green */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Blue */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
            },
            /* Hist Dark Range */
            {
               /* Red */
               {
                  0.000000f, /* Start */
                  0.150000f, /* End */
               },
               /* Green */
               {
                  0.000000f, /* Start */
                  0.150000f, /* End */
               },
               /* Blue */
               {
                  0.000000f, /* Start */
                  0.150000f, /* End */
               },
            },
            4.000000f, /* Max ADRC Gain */
            0.150000f, /* ADRC Converage Speed */
            0.500000f, /* GTM Percentage */
            0.500000f, /* LTM Percentage */
            0.000000f, /* LA Percentage */
         },
         /* Zone 4 */
         {
            1.000000f, /* Max Target Adj Ratio */
            1.000000f, /* Min Target Adj Ratio */
            200, /* Sat Low Ref */
            240, /* Sat High Ref */
            0, /* Dark Low Ref */
            70, /* Dark High Ref */
            /* Hist Saturation Pushup Range */
            {
               /* Red */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Green */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Blue */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
            },
            /* Hist Saturation Pushdown Range */
            {
               /* Red */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Green */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Blue */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
            },
            /* Hist Dark Range */
            {
               /* Red */
               {
                  0.000000f, /* Start */
                  0.150000f, /* End */
               },
               /* Green */
               {
                  0.000000f, /* Start */
                  0.150000f, /* End */
               },
               /* Blue */
               {
                  0.000000f, /* Start */
                  0.150000f, /* End */
               },
            },
            4.000000f, /* Max ADRC Gain */
            0.150000f, /* ADRC Converage Speed */
            0.500000f, /* GTM Percentage */
            0.500000f, /* LTM Percentage */
            0.000000f, /* LA Percentage */
         },
         /* Zone 5 */
         {
            1.000000f, /* Max Target Adj Ratio */
            1.000000f, /* Min Target Adj Ratio */
            200, /* Sat Low Ref */
            240, /* Sat High Ref */
            0, /* Dark Low Ref */
            70, /* Dark High Ref */
            /* Hist Saturation Pushup Range */
            {
               /* Red */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Green */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Blue */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
            },
            /* Hist Saturation Pushdown Range */
            {
               /* Red */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Green */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
               /* Blue */
               {
                  0.000000f, /* Start */
                  0.020000f, /* End */
               },
            },
            /* Hist Dark Range */
            {
               /* Red */
               {
                  0.000000f, /* Start */
                  0.150000f, /* End */
               },
               /* Green */
               {
                  0.000000f, /* Start */
                  0.150000f, /* End */
               },
               /* Blue */
               {
                  0.000000f, /* Start */
                  0.150000f, /* End */
               },
            },
            4.000000f, /* Max ADRC Gain */
            0.150000f, /* ADRC Converage Speed */
            0.500000f, /* GTM Percentage */
            0.500000f, /* LTM Percentage */
            0.000000f, /* LA Percentage */
         },
      },
      0.500000f, /* Target Filter Factor */
      /* Reserved */
      {
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
      }
   },

   /******************************************************************************/
   // Feature name: Histogram Stretch feature.
   // Applicable operation mode:  Snapshot, Preview and Camcorder.
   // When this feature is enabled, 3A will send dark clamp to be subtracted to
   // VFE ACE (Color Conversion) module per frame, ACE driver will compute the new
   // RGB2Y coefficients based on strech gain computed.
   //
   // Variable name: dark_percentage
   // Histogram counts will be accumulated from Pixel Value 0 and increasing,when
   // the occurrence percentage is greater than or equal to dark_percentage, the
   // corresponding pixel K0 is used as offset. K0 is subtracted in VFE Color conversion
   // ( RGB to Y ) process after clamping with max_dark_clamp
   // Default value: {0.005, 0.005, 0.005}
   // Data range: [0.001, 0.05]
   //
   // Variable name: max_dark_clamp
   // RGB to Y offset programmed with minimum of (max_dark_clamp,K0)
   // Default value: {3, 3, 3}
   // Data range: 0 to 6
   /******************************************************************************/

   /* AEC Y Hist Stretch */
   {
      0, /* Enable Y Hist Stretch */
      3, /* Num Zone Used */
      /* Triggers */
      {
         /* Zone 0 */
         {
            0, /* Start */
            0, /* End */
         },
         /* Zone 1 */
         {
            0, /* Start */
            0, /* End */
         },
         /* Zone 2 */
         {
            0, /* Start */
            0, /* End */
         },
         /* Zone 3 */
         {
            0, /* Start */
            0, /* End */
         },
         /* Zone 4 */
         {
            0, /* Start */
            0, /* End */
         },
      },
      /* Zone Data */
      {
         /* Zone 0 */
         {
            0.005000f, /* Dark Percentage */
            3, /* Max Dark Clamp */
         },
         /* Zone 1 */
         {
            0.005000f, /* Dark Percentage */
            3, /* Max Dark Clamp */
         },
         /* Zone 2 */
         {
            0.005000f, /* Dark Percentage */
            3, /* Max Dark Clamp */
         },
         /* Zone 3 */
         {
            0.000000f, /* Dark Percentage */
            0, /* Max Dark Clamp */
         },
         /* Zone 4 */
         {
            0.000000f, /* Dark Percentage */
            0, /* Max Dark Clamp */
         },
         /* Zone 5 */
         {
            0.000000f, /* Dark Percentage */
            0, /* Max Dark Clamp */
         },
      },
   },
   /* HDR Tuning */
   {

      /*********************************************************************/
      // Feature name : AEC Sensor HDR.
      // Applicable chipset(s): HW version 8952 and 8996 or later.
      // Applicable sensors: Sony IMX sensors that support in-sensor HDR.
      // Applicable operation mode: Preview and Video.
      //
      // Variable name: hdr_indoor_trigger.
      // Trigger point used for HDR indoor detection, which in turn controls the
      //   exposure ratio programmed in the sensor.
      // Default values: {280, 320}.
      /*********************************************************************/

      /* Indoor Trigger */
      {
         280, /* Start */
         320, /* End */
      },
      /* Reserved */
      {
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
      }
   },

   /******************************************************************************/
   // Feature name : AEC Motion ISO
   // Applicable chipset(s):All MSM
   // applicable operation mode: snapshot, preview, and video
   // (Defaults are same for all 3 modes)
   //
   // variable name: motion_iso_enable
   // motion_iso_enable
   // default value: 0
   // data range: 0 or 1
   // constraints: None
   // effect: Enables motion ISO feature. while scenes are changing or moving,
   //  higher AE gains are used in efforts to reduce motion blur.
   //
   // variable name: motion_iso_aggressiveness
   // Determines how fast motion effect is applied
   //  to preview and snapshot.  Higher values cause gains to react rapidly upon any
   //  motion detection.
   // default value: 0.5
   // data range: 0.01 to 1
   // constraints: None
   // effect: Lower value makes motion to take longer to affect gains and exposure
   //  times and also longer to dissipate.
   //
   // variable name: motion_iso_threshold
   // Motion metric calculated by algorithm
   // is compared to this threshold, if higher than motion ISO is applied.
   // default value: 40
   // data range: Any positive value.
   // constraints: Depending on sensor noise, this threshold needs to be adjusted
   //   to make sure sensor noise is not triggering motion ISO.  Value also needs
   //   be adjusted based on 256 or 64 AE stats region mode used.
   // effect: Lower value trigger motion ISO sooner.  Higher value requires
   //  more scene motion to trigger feature.
   //
   // variable name:motion_iso_max_gain
   // Max gain allowed to be used when motion ISO feature is triggered.
   // default value (calculated):  2 *  Max Exposure Table Gain.
   // data range: max AEC table gain to max gain supported by system.
   // constraints: If this value is set to default normal mode max gain, motion
   //  ISO will have no effect in low light.
   // effect: Higher gains allow more Motion ISO effect for low light scenes.
   //  Expect higher noise due to high gains used.
   /******************************************************************************/

   /* Motion ISO */
   {
      0, /* Enable */
      0.500000f, /* Aggressiveness */
      40.00000f, /* Threshold */
      16.00000f, /* Max Gain */
   },

   /******************************************************************************/
   // Feature name : AEC Motion ISO
   // Applicable chipset(s):All MSM
   // applicable operation mode: snapshot, preview, and video
   // (Defaults are same for all 3 modes)
   //
   // variable name: motion_iso_enable
   // motion_iso_enable
   // default value: 0
   // data range: 0 or 1
   // constraints: None
   // effect: Enables motion ISO feature. while scenes are changing or moving,
   //  higher AE gains are used in efforts to reduce motion blur.
   //
   // variable name: motion_iso_aggressiveness
   // Determines how fast motion effect is applied
   //  to preview and snapshot.  Higher values cause gains to react rapidly upon any
   //  motion detection.
   // default value: 0.5
   // data range: 0.01 to 1
   // constraints: None
   // effect: Lower value makes motion to take longer to affect gains and exposure
   //  times and also longer to dissipate.
   //
   // variable name: motion_iso_threshold
   // Motion metric calculated by algorithm
   // is compared to this threshold, if higher than motion ISO is applied.
   // default value: 40
   // data range: Any positive value.
   // constraints: Depending on sensor noise, this threshold needs to be adjusted
   //   to make sure sensor noise is not triggering motion ISO.  Value also needs
   //   be adjusted based on 256 or 64 AE stats region mode used.
   // effect: Lower value trigger motion ISO sooner.  Higher value requires
   //  more scene motion to trigger feature.
   //
   // variable name:motion_iso_max_gain
   // Max gain allowed to be used when motion ISO feature is triggered.
   // default value (calculated):  2 *  Max Exposure Table Gain.
   // data range: max AEC table gain to max gain supported by system.
   // constraints: If this value is set to default normal mode max gain, motion
   //  ISO will have no effect in low light.
   // effect: Higher gains allow more Motion ISO effect for low light scenes.
   //  Expect higher noise due to high gains used.
   /******************************************************************************/

   /* Snapshot Motion ISO */
   {
      0, /* Enable */
      0.500000f, /* Aggressiveness */
      40.00000f, /* Threshold */
      16.00000f, /* Max Gain */
   },

   /******************************************************************************/
   // Feature name: Fast AEC convergence logic
   // Description: This structure includes the tuning parameters for the fast AEC convergence logic
   // Applicable operation modes: Camera start, camera switch (RFC <-> FFC), switch
   // between preview and camcorder mode and vice versa
   //
   // Variable name: start_index
   // The initial exposure index when sensor starts streaming in fast AEC mode
   // Default value: 240.
   // Data range: 0 to 500.
   //
   // Variable name: frame_skip
   // This parameter specifies the number of frames to skip between each exposure update
   // in the fast AEC mode. A higher value indicates that more frames are skipped between
   // updates and a higher value is used when it takes a long time for the previous exposure
   // update to be reflected in the stats
   // Default value: 3
   // Data range: 0 to 10
   //
   // Variable name: luma_settled_count
   // This parameter specifies the number of successive frames where AEC is settled before the 'settled'
   // flag  can be set to TRUE in the fast AEC mode. A higher value ensures accuracy at the expense
   // of latency. A smaller value could result in some discrepancy observed in back-to-back runs
   // Default value: 2
   // Data range: 0 to 3
   //
   /******************************************************************************/

   /* Fast AEC */
   {
      240, /* Start Index */
      3, /* Frame Skip */
      2, /* Luma Settled Count */
   },
},

/******************************************************************************/
// Feature name: auto flicker detection.
// Parameters used for AFD algorithm.
// Applicable chipset(s): MSM7xxx and QSD8xxx.
// Applicable operation mode: VF.
//
// Variable name: AFD_continuous_enable
// Used to determine if run continuous AFD
// Default value: 0.
// Data range: 0 or 1.
// Constraints:
// Effect: 1 means AFD is continuous run periodically, 0 means only run once at camera startup.
//
// Variable name: chromatix_auto_flicker_detection_data_type.afd_std_threshold
// Used to determine if a periodic pattern is present. We measure the distance
//    between adjacent peaks and if the standard deviation of these distances is
//    smaller than the afd_std_threshold  value, it has periodic pattern,
//    ie. flicker detect flag is set.  This is part of the multi-peak algorithm.
// Default value: 0.15
// Data range:
// Constraints:
// Effect: We do not recommend the user change this parameter.
//
// Variable name: chromatix_auto_flicker_detection_data_type.afd_percent_threshold
// Used by the single peak algorithm only, which is under zoom.
//    The entire single peak algorithm is not needed if we are getting the row-sum stats from VFE HW.
//    Therefore, this parameter is only used for SW AFD solution.
//    Four frames (4 = AFD_NUM_FRAMES  AFD_FRAME_SKIP  1)
//    must have a peak present.  For flicker to be detected, the percentage of peak leading and
//    falling edges must be larger than this percentage.
// Default value: 50.
// Data range:
// Constraints:
// Effect: We do not recommend the user change this parameter.
//
// Variable name: chromatix_auto_flicker_detection_data_type.afd_diff_threshold
// Filtered Peak (diff between neighboring frames) value must be above this threshold to be considered a valid peak,
//    otherwise it is considered noise and is ignored.  When the view finder
//    window changes size, the threshold value should also be tuned.
//    The reason has to do with row sums are not calculated for every row but every other.
//    Tuning consists of finding a threshold value that detects the valid peaks while rejecting noise.
// Default value: 90.
// Data range:
// Constraints:
// Effect: We do not recommend the user change this parameter.
//
// Variable Name: chromatix_auto_flicker_detection_data_type.afd_frame_ct_threshold
// Determines if the AFD process should start, afd_frame_ct_threshold
//    number of frames are skipped before commencing the AFD algorithm.
// Default value: 60.
// Data range:
// Constraints:
// Effect: we do not recommend the user change this parameter.
//
// Variable name: chromatix_auto_flicker_detection_data_type.afd_num_frames
// This is the number of simultaneous frames to use in the AFD.
//    The frame information is saved and once this number is available the algorithm starts.
// Default value: 6.
// Data range:
// Constraints:
// Effect: we do not recommend the user change this parameter.
//
// Variable name: chromatix_auto_flicker_detection_data_type.afd_frame_skip
// Reflect frame skip pattern when collecting AFD STATs.
// Default value: 1.
// Data range: 0 to 4. 0 means to collect/analyze STAT for every frame. 1 means
//   to collect/analyze STATs every other frame.
// Constraints:
// Effect: we do not recommend user to change this parameter.
//
// Variable name: chromatix_auto_flicker_detection_data_type.afd_num_rows
// Image height when AFD STATS is collected.
// Default value: VF image height
// Data range: 240 to VF image height
// Constraints:
// Effect: This value has to reflect the VF height.
//
// Variable name: chromatix_auto_flicker_detection_data_type.afd_num_frames_settle
// Number of frames to wait after switching exposure tables.
// Default value: 3.
// Data range: 2 to 6.
// Constraints:
// Effect: larger value will take longer time to complete AFD but allow plenty time for
//    exposure table change to settle.
/******************************************************************************/

/* Auto Flicker Detection */
{
   0, /* Continuous Enable */
   0.150000f, /* Standard Threshold */
   50, /* Percent Threshold */
   90, /* Difference Threshold */
   60, /* Frame CT Threshold */
   6, /* Number of Frames */
   1, /* Frame Skip */
   240, /* Number of Rows */
   3, /* Number of Frames Settle */

   /******************************************************************************/
   // Feature name : AFD parameters
   // applicable chipset:  7k and 8k
   // 3A version: N/A
   // applicable operation mode: preview
   //
   // variable name: AFD_num_peaks_threshold
   // Minimum number of peaks are need for AFD algorithm to continue
   // default Value: 6
   // Data Range: 3 to 8
   // constraints: none
   // effect: higher value imposes higher requirement for flicker detection
   //
   // variable name: AFD_INTL_adj_factor
   // Determine how big a factor that INTL has to be away from band gap
   //  when creating exp table for AFD
   // default Value: 0.25
   // Data Range: 0 to 0.45
   // constraints: none
   // effect: higher value is easier for flicker to be detected
   /******************************************************************************/

   5, /* Num Peaks Threshold */
   0.250000f, /* INTL Adjust Factor */
   60, /* Start Antibanding Table */
   66.00000f, /* Maximum Exposure Time (ms) */
   248, /* Threshold Level2 Ratio */
   243, /* Threshold Level3 Ratio */
   6554, /* Lower Energy Threshold of kth Level Processing */
   131072, /* Upper Energy Threshold of kth Level Processing */
   2, /* Counter Threshold for Level3 */
   4, /* Counter Threshold for Level2 */
   2, /* Processing Level2 */
},
/* ASD */
{
   0, /* Software Type */
   /* Snow Scene Detection */
   {

      /*********************************************************************/
      // Feature name: Snow/cloudy Scene Detection.
      // Applicable chipset:  8k, 7x30 and newer.
      // 3A version: 2.0.
      //
      // Variable name: snow_scene_detection_enable.
      // 1 (TRUE) enables the feature from AEC perspective, 0 (FALSE)
      //   disables the feature.
      // Applicable operation mode: Viewfinder and snapshot.
      // Default value: 1.
      // Data range: 0 or 1.
      // Constraints: None.
      // Effect: When enabled snow scene detection and compensation feature is
      //         enabled.
      //
      // Variable name: y_cloudy_snow_threshold.
      // AEC Stat regions luma values above this threshold may be
      //   used as potential snow samples.
      // Applicable operation mode: Viewfinder.
      // Default value (calculated): Default Luma Target.
      // Data range: 0 or 255.
      // Constraints: Should be same as or above luma target.
      // Effect: Higher values detect less snow samples, lower values cause more
      //         near white regions to be detected as snow samples.
      //
      // Variable name: awb_y_max_in_grey.
      // Any AE region above this threshold is considered potential
      //   snow/cloudy region. These regions will not have WB data
      //   because WB considered too bright and above YMAX WB
      //   configuration.
      // Applicable operation mode: Viewfinder.
      // Default value (calculated) : Normal Light AWB YMax.
      // Data Range: 0 to 255.
      // Constraints: >= AWB bounding box YMax value.
      // Effect: Higher values detect less snow samples, lower values cause more
      //         close to saturated regions to be detected as snow samples.
      //
      // Variable name: min_snow_cloudy_sample_th.
      // If count of snow/cloudy regions detected above this
      //   threshold, we consider the scene as snow/cloudy. Snow scene
      //   severity is 0 when snow samples are less than this threshold.
      // Applicable operation mode: Viewfinder.
      // Default value: 10.
      // Data range: 0 to 64.
      // Constraints: None.
      // Effect: Higher values make it harder to flag current scene as snow scene.
      //
      // Variable name: extreme_snow_cloudy_sample_th.
      // If count of detected snow regions above this threshold,
      //   scene is considered extreme snow/cloudy scene. Snow scene
      //   severity is 255 when snow samples is equal or larger than this
      //   threshold.
      //   Full extreme_luma_target_offset is applied.
      // Applicable operation mode: Viewfinder and snapshot.
      // Default value: 55.
      // Data range: min_snow_cloudy_sample_th to 64.
      // Constraints: None.
      // Effect: Higher values make it harder to flag current scene as extreme snow
      //         scene or severity set to 255.
      //
      // Variable name: extreme_luma_target_offset.
      // Maximum luma offset that can be applied when snow scene is
      //   detected. This happens when extreme_snow_cloudy_sample_th is
      //   reached or exceeded and exposure index is less than outdoor
      //   index.
      //   Luma offset is gradually reduced for darker scenes until
      //   eventually made 0 for indoor cases, this is based on exp_index.
      //   (Cannot use lux_idx due to rapid change based on frame luma;
      //   will cause luma offset to be unstable.)
      // Applicable operation mode: Viewfinder and snapshot.
      // Default value (calculated): Default Luma Target.
      // Data range: 0 to twice luma target.
      // Constraints: None.
      // Effect: Higher values make image brighter for snow scene detected.
      //
      // Variable name: snow_scene_indoor_index.
      // Snow/cloudy scene detection is only intended for outdoor, hence
      //   if exposure index is bigger than this threshold, then snow scene
      //   compensation is completely disabled.
      // Applicable operation mode: Viewfinder and snapshot.
      // Default value: 290.
      // Data range: 0 to 500.
      // Constraints: Must be larger than snow_scene_outdoor_index.
      //
      // Variable name: snow_scene_outdoor_index.
      // Snow/cloudy scene detection is only intended for outdoor, hence
      //   only if exposure index is smaller than this threshold, then snow scene
      //   compensation is in full effect. If exposure index is above this threshold
      //   but less than snow_scene_indoor_index, interpolation is used.
      // Applicable operation mode: Viewfinder and snapshot.
      // Default value: 200.
      // Data range: 0 to 500.
      // Constraints: Must be smaller than snow_scene_indoor_index.
      //
      // Variable name: severe_snow_scene_cap.
      // Point at which 'backlit_max_digital_gain' will be applied, value
      //   is 0 to 255 for severity. 255 means snow scene detection must report 255 severity
      //   for backlit_max_digital_gain to be applied. If set to 0, it is always applied.
      //   Care is needed to not use 0 otherwise backlit_max_digital_gain will always be applied.
      // Applicable operation mode: Viewfinder and snapshot.
      // Default value: 255.
      // Data range: 0 to 255.
      // Constraints: None.
      // Effect: See description above.
      //
      // Variable name: snowscene_aggressiveness.
      // Adjust reaction time of snow/cloudy scene compensation.
      // Default value: 0.2
      // Data range: 0 to 1.0
      // Constraints: None.
      // Effect: Larger value makes snow/cloudy compensation react faster by updating luma
      //         target. If set too aggressive, AE oscillation may happen.
      //
      // Variable name: ui_snow_cloudy_display_th.
      // When detection severity is larger than this threshold, UI may display icon
      //     representing this type of scene.
      // Applicable operation Mode: Preview, camcorder.
      // Default value: 80.
      // Data range: 1 to 255.
      // Constraints: Larger value requires scene severity to be larger to display
      //              icon.
      // Effect: ICON display on UI when option is enabled in UI.
      /*********************************************************************/

      1, /* Enable */
      50, /* Y Snow Threshold */
      240, /* AWB Y Max in Grey */
      10, /* Min Snow Sample Threshold */
      55, /* Extreme Snow Sample Threshold */
      50.00000f, /* Extreme Luma Target Offset */
      0, /* Indoor Index */
      0, /* Outdoor Index */
      255, /* Severe Snow Cap */
      0.200000f, /* Aggressiveness */
      80, /* UI Display Th */
   },
   /* Backlit */
   {

      /*********************************************************************/
      // Feature name: Backlit Scene Detection.
      // Applicable chipset:  8k, 7x30 and newer.
      // 3A version: 2.0
      //
      // Variable name: backlight_detection_enable.
      // 1 (TRUE) enables the feature, 0 (FALSE) disables the feature.
      // Applicable operation mode: Viewfinder and snapshot.
      // Default value: 1.
      // Data range: 0 or 1.
      // Constraints: None.
      // Effect: 1 enables the feature.
      //
      // Variable name: low_luma_threshold.
      // Preview frame histogram samples which luma is below this
      //   threshold are added to low luma count.
      // Applicable operation mode: Viewfinder.
      // Default value: 10.
      // Data range: 0 to high_luma_threshold.
      // Constraints: None.
      // Effect: Lower values detect less samples as 'dark' to be considered for
      //         backlit detection.
      //
      // Variable name: high_luma_threshold.
      // Histogram samples which luma is above this threshold are
      //   added to high luma count.
      // Applicable operation mode: Viewfinder.
      // Default value: 235.
      // Data range: low_luma_threshold to 255.
      // Constraints: None.
      // Effect: Higher values detect less samples as 'bright' to be considered for
      //         backlit detection.
      //
      // Variable name: low_luma_count_percent_threshold.
      // If count of low luma samples exceed this percentage of total
      //   samples, we consider potential backlight case.
      // Applicable operation mode: Viewfinder.
      // Default value: 10.
      // Data range: 0 to 100.
      // Constraints: None.
      // Effect: Higher value requires more dark samples for histogram portion of
      // backlight detection to flag as potential backlit scene so it reduces probability
      // to detect backlight condition.
      //
      // Variable name: high_luma_count_percent_threshold.
      // If count of high luma samples exceed this percentage of total
      //   samples, we consider potential backlight case.
      // Applicable operation mode: Viewfinder.
      // Default value: 10.
      // Data range: 0 to 100.
      // Constraints: None.
      // Effect: Higher value requires more bright samples for histogram portion of
      // backlight detection to flag as potential backlit scene so it reduces probability
      // to detect backlight condition.
      //
      // Variable name: kept_pixel_ratio_th.
      // How many pixels are kept after offsetting the histogram
      //   prior to determine backlight scene analysis.
      // Default value: 0.09
      // Data range: 0.01 to 0.18
      // Constraints: None.
      // Effect: We don't recommend changing the setting. Requires more pixels to
      //         left after histogram offset to declare it valid. If not valid backlit
      //         scene will not be detected.
      //
      // Variable name: backlight_max_la_luma_target_offset.
      // Maximum luma target adjustment when backlight is detected.
      //   We expect to increase luma target.
      // Applicable operation mode: Viewfinder.
      // Default value: 20
      // Data range: 0 to 255.
      // Constraints: None.
      // Effect: >1 value will increase luma target and bring out the dark areas. <1 value
      //         will decrease luma target and avoid saturation in highlight areas.
      //
      // Variable name: backlit_aggressiveness.
      // Adjust reaction time of backlit scene compensation.
      // Default value: 0.2
      // Data range: 0 to 1.0
      // Constraints: None.
      // Effect: Larger value makes backlit compensation react faster by updating luma
      //         target. If set too aggressive, AE oscillation may happen.
      //
      // Variable name: max_percent_threshold.
      // End of interpolation range for severity.
      //   Closer value to min_percent_threshold will cause backlit compensation to
      //   have more effect.
      // Applicable operation mode: Camera mode only.
      // Default value: 1.0
      // Data range: 0.5 to 1.0
      // Constraints: Due to nature of compensation affecting the detection, a smaller
      //   value may cause the backlit detection to become unstable.
      // Effect: More aggresive application of backlit compensation for smaller
      //   max_percent_threshold values.
      //
      // Variable name: ui_backlit_display_th.
      // When detection severity is larger than this threshold, UI may display icon
      //     representing this type of scene.
      // Applicable operation mode: Preview, camcorder.
      // Default value: 80.
      // Data range: 1 to 255.
      // Constraints: Larger value requires scene severity to be larger to display
      //              icon.
      // Effect: ICON display on UI when option is enabled in UI.
      /*********************************************************************/

      1, /* Enable */
      0.900000f, /* Histogram Offset */
      20, /* Low Luma Threshold */
      225, /* High Luma Threshold */
      10.00000f, /* Low Luma Count Percent Threshold */
      10.00000f, /* High Luma Count Percent Threshold */
      0.090000f, /* Kept Pixel Ratio Threshold */
      20, /* Max Luma Target Adjust */
      0.200000f, /* Aggressiveness */
      1.000000f, /* Max Percent Threshold */
      80, /* UI Display Th */
   },
   /* Landscape Scene Detection */
   {

      /******************************************************************************/
      // Feature name: Landscape Scene Detection and Compensation.
      // Applicable chipset(s): VFE 3.2 and later with bayer grid stats support.
      // 3A version: 4.0
      // Applicable operation mode:  Preview, camcorder modes and ZSL.
      //
      // Variable name: asd_ext_blue_th.
      // Extreme blue region detection threshold. If region from Bayer Grid stats is
      //    above this threshold, region is considered extreme blue.
      // Default value:  1.15
      // Data range: 1.0 to 3.0
      // Constraints: None.
      // Effect: Higher value allows less extreme blue regions to be detected.
      //
      // Variable name: asd_ext_green_th_r.
      // Extreme green region detection threshold. If region from Bayer Grid stats is
      //    below this threshold and below asd_ext_green_th_b, region is considered extreme green.
      // Default value:  1.1
      // Data range: 0.5 to 3.0
      // Constraints: Region has been white balanced.
      // Effect: Higher value allows more extreme green regions to be detected.
      //
      // Variable name: asd_ext_green_th_b.
      // Extreme green region detection threshold. If region from Bayer Grid stats is
      //    below this threshold and below asd_ext_green_th_r, region is considered extreme green.
      // Default value:  1.2
      // Data range: 0.5 to 3.0
      // Constraints: Region has been white balanced.
      // Effect: Higher value allows more extreme green regions to be detected.
      /****************************************************************************/

      1, /* Enable */
      1.300000f, /* Red Boost Factor */
      1.600000f, /* Green Boost Factor */
      1.600000f, /* Blue Boost Factor */
      0.050000f, /* Min Blue Green Content Detection Threshold */
      0.120000f, /* Max Blue Green Content Detection Threshold */
      0, /* Green Offset RG */
      0, /* Green Offset BG */
      1.150000f, /* Extreme Blue Threshold */
      1.100000f, /* Extreme Green Threshold R */
      1.200000f, /* Extreme Green Threshold B */
      0.500000f, /* Aggressiveness */
      314, /* Lux Idx Indoor */
      214, /* Lux Idx Outdoor */
      80, /* UI Display Th */
   },
   /* Portrait Scene Detection */
   {

      /*********************************************************************/
      // Feature name: Portrait Scene Detection.
      // Applicable chipset(s): VFE 3.1 and later with Bayer support.
      //
      // Variable name: portrait_detection_enable.
      // Enables and disables the feature.
      // Applicable operation mode: Preview, camcorder record and snapshot.
      // Default value: 1.
      // Data range: 0 to 1.
      // Constraints: None.
      // Effect: 0 disables the feature; 1 enables the feature.
      //
      // Variable name: skin_color_boost_factor.
      // Allows skin tones to be modified to look paler or tanner.
      // Applicable operation mode: Preview, camcorder record and snapshot.
      // Default value: 0.
      // Data range: -1 to +1.
      // Constraints: -1 to +1 in 1/100 step.
      // Effect: +1 = most pale, -1 = most tan.
      //
      // Variable name: min_face_content_threshold.
      // Determines amount of area with respect to frame size to be called a
      //   portrait scene.
      // Applicable operation mode: Preview, camcorder record and snapshot.
      // Default value: 0.010
      // Data range: 0 to 1.
      // Constraints: None.
      // Effect: 0 will always detect as portrait as long as a face has been detected.
      //   1 will require face area to cover the whole frame to be called a portait
      //   scene. Default value needs 1% of the frame area to be face to be called
      //   portrait, although severity will be close to 0.
      //
      // Variable name: max_face_content_threshold.
      // Determines amount of area with respect to frame size to be called a
      //   portrait scene.
      // Applicable operation mode: Preview, camcorder record and snapshot.
      // Default value: 0.05
      // Data range: 0 to 1.
      // Constraints: None.
      // Effect: If face area with regard to frame size is larger than this threshold,
      //   portrait severity will be 255. Portrait severity is interpolated based
      //   on face area between min and max_face_content_threshold.
      //
      // Variable name: soft_focus_degree_7_7.
      // Amount of blurring to be applied
      //   on image when portrait scene is detected. This gets interpolated
      //   according to portrait severity value.
      // Applicable operation mode: Preview, camcorder record and snapshot.
      // Default value:  0.9
      // Data range: 0.5 to 1.
      // Constraints: None.
      // Effect: Smaller value will result in softer focus appearance.
      //
      // Variable name: soft_focus_degree_5_5.
      // Amount of blurring to be applied
      //   on image when portrait scene is detected. This gets interpolated
      //   according to portrait severity value.
      // Applicable operation mode: Preview, camcorder record and snapshot.
      // Default value:  0.9
      // Data range: 0.5 to 1.
      // Constraints: None.
      // Effect: Smaller value will result in softer focus appearance.
      //
      // Variable name: aggressiveness.
      // Adjust reaction time of portrait compensation.
      // Applicable operation mode: Preview, camcorder.
      // Default value: 0.5
      // Data range: 0 to 1.0
      // Constraints: None.
      // Effect: Larger value makes portrait compensation react faster.
      //
      // Variable name: ui_portrait_display_th.
      // When detection severity is larger than this threshold, UI may display icon
      //   representing this type of scene.
      // Applicable operation mode: Preview, camcorder.
      // Default value: 80.
      // Data range: 1 to 255.
      // Constraints: Larger value requires scene severity to be larger to display
      //              icon.
      // Effect: ICON display on UI when option is enabled in UI.
      /*********************************************************************/

      1, /* Enable */
      0.000000f, /* Skin Color Boost Factor */
      0.010000f, /* Min Face Content Threshold */
      0.050000f, /* Max Face Content Threshold */
      0.900000f, /* 7x7 Soft Focus Degree */
      0.900000f, /* Soft Focus Degree */
      0.500000f, /* Aggressiveness */
      80, /* UI Display Th */
   },
   /* HDR Detection */
   {

      /******************************************************************************/
      // Feature name: HDR Scene Detection.
      // Variable name: backlight_high_threshold.
      // If backlit histogram severity above this
      //   threshold, we consider HDR scene if portrait requirements are met.
      // Default value: 153.600006
      // Data range: 0 to 255
      // Constraints: None.
      // Effect: Higher value makes it more difficult to trigger HDR detection.
      //
      // Variable name: backlight_low_threshold.
      // If backlit histogram severity is below this threshold,
      //   we don't consider it an HDR scene.
      // Default value:  102.400002f
      // Data range: 0 to 255
      // Constraints: Less than backlight_high_threshold.
      // Effect: Value closer to backlight_high_threshold makes it easier to toggle
      //   between HDR ON and OFF.  This is the hysteresis window low threshold.
      //
      // Variable name: portrait_high_threshold.
      // If portrait severity is above this threshold, we don't consider it
      //   an HDR scene.
      // Default value:  204.800003
      // Data range: 0 to 255
      // Constraints: None.
      // Effect: Lower value forces smaller face to force HDR to be OFF.
      //
      // Variable name: portrait_low_threshold.
      // If portrait severity is above this threshold, we don't consider it and HDR scene.
      // Default value:  153.600006
      // Data range: 0 to 255
      // Constraints: None.
      // Effect: Value closer to portrait_high_threshold makes it easier to toggle
      //         between HDR ON and OFF due to face size changing.  This is the
      //         hysteresis window.
      /******************************************************************************/

      153.6000f, /* Backlight High Threshold */
      102.4000f, /* Backlight Low Threshold */
      255.0000f, /* Portrait High Threshold */
      255.0000f, /* Portrait Low Threshold */
   },
   /* Hazy Detection */
   {

      /*********************************************************************/
      // Feature name: ASD Hazy Scene Detection
      //
      // Variable name:   hazy_detection_enable.
      // Enable/disable the hazy scene detection feature.
      // Default value: 0.
      // Data range: 0 or 1.
      // Constraints: None.
      // Effect: 0 will disable hazy scene detection.
      //
      // Variable name: hazy_running_frequency.
      // Frames per single execution
      // Default value: 5.
      // Data range: 1 to 30.
      // Constraints: None.
      // Effect: Higher value causes more frame skip between detection execution
      //         allowing for lower power. Lower value has more frequent detection
      //         increasing stability and response but higher power.
      //
      // Variable name: hazy_detection_threshold_on.
      // Programmed anywhere between 0.5 and 1.0.
      // Default value: 0.5
      // Data range: 0.5 to 1.0
      // Constraints: None.
      // Effect: Values between 0.5 and 1.0 will detect the scene as hazy.
      //
      // Variable name: hazy_detection_threshold_off.
      // Programmed anywhere between -0.5 and 0
      // Default value: 0.
      // Data range: -0.5 and 0.
      // Constraints: None.
      // Effect: Values between -0.5 and 0 will stop detecting the scene as hazy.
      //
      // Variable name: ui_hazy_display_th.
      // When detection severity is larger than this threshold,
      //   UI may display an icon representing this type of scene.
      // Default value: 80.
      // Data range: 0 to 255.
      // Constraints: None.
      // Effect: If values are greater than this threshold, UI will display an icon
      //         representing hazy scene.
      //
      // Variable name: reserved[20].
      // Description: reserved
      // Default value: 0.0
      // Data range: 0.0 to 0.0
      // Constraints: None
      /*********************************************************************/

      0, /* Enable */
      5.000000f, /* Running Frequency */
      0.500000f, /* Detection Threshold On */
      0.000000f, /* Detection Threshold Off */
      80, /* UI Display Threshold */
      /* Reserved */
      {
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
      }
   },
},
/* AutoFocus */
{

   /*********************************************************************/
   // Feature: Actuator Info.
   //
   // Variable name: header_version.
   // Default value: Chromatix header version (E.g., 0x306).
   //
   // Variable name: module_name.
   // Default value: "".
   //
   // Variable name: actuator_name.
   // Default value: "".
   //
   // Variable name: cam_name.
   // Default value: 0.
   /*********************************************************************/

   /* Header Info */
   {
      0x0308, /* Version */
      "sunny_q5v41b", /* Module Name */
      "\0", /* Actuator Name */
      ACT_MAIN_CAM_0, /* Cam Name */
   },
   /* Tuning Algorithm */
   {

      /*********************************************************************/
      // Feature: AF tuning parameters specific to AF algorithm.
      //
      // Variable name: af_process_type.
      // AF algorithm type used.
      // Default value: AF_EXHAUSTIVE_SEARCH.
      // Data range: based on af_algo_type.
      //
      // Variable name: position_near_end.
      // Nearest position lens can move to.
      // Default value: 0.
      // Data range: 0 to (position_far_end  1).
      //
      // Variable name: position_default_in_macro.
      // Default lens rest position when focus mode is Macro.
      // Default value: 0.
      // Data range: 0 to (position_far_end  1).
      //
      // Variable name: position_boundary.
      // Determines near end of search range for Normal focus mode.
      // Default value: 0.
      // Data range: 0 to (position_far_end  1).
      //
      // Variable name: position_default_in_normal.
      // Default lens reset position when focus mode is other than macro.
      // Default value: position_far_end.
      // Data range: 0 to (position_far_end  1).
      //
      // Variable name: position_far_end.
      // Farthest point of the search range.
      // Default value: actuator infinity position.
      // Data range: 1 to actuator infinity position.
      //
      // Variable name: position_normal_hyperfocal.
      // Normal position of the lens when focus fails.
      // Default value: position_far_end.
      // Data range: 0 to position_far_end.
      //
      // Variable name: position_macro_rgn.
      // Starting lens position of macro region.
      // Default value: position_far_end.
      // Data range:  0 to position_far_end.
      //
      // Variable name: undershoot_protect.
      // When enabled, lens will be moved more in either forward or backward direction.
      // Default value: 0.
      // Data range: 0 (enable) or 1 (disable).
      //
      // Variable name: undershoot_adjust:
      // When undershoot_protect is enabled, lens movement is adjusted by this amount.
      // Default value: 0.
      // Data range: 0 (enable) or 1 (disable).
      //
      // Variable name: min_max_ratio_th.
      // If focus value drops below this much of maximum fv, search forward.
      // Default value: 0.5
      // Data range: 0 to less than 1.
      //
      // Variable name: led_af_assist_enable.
      // Enable/disable led assisted AF.
      // Default value: 0.
      // Data range: 0 or 1.
      //
      // Variable name: led_af_assist_trigger_idx.
      // Lux Index at which LED assist for autofocus is enabled.
      // Default value: 367.
      // Data range: 0 to 1000.
      //
      // Variable name: low_light_gain_th.
      // When the AEC gain is above this threshold, we assume it's low light condition.
      // Default value: 10.
      // Data range: > 0.
      //
      // Variable name: base_delay_adj_th.
      // Threshold to check while adjusting base delay for CAF. When fps drops.
      // Default value: 0.034
      // Data range:  0 to 1.
      /*********************************************************************/

      AF_EXHAUSTIVE_SEARCH, /* AF Process Type */
      0, /* Position Near End */
      0, /* Position Default In Macro */
      0, /* Position Boundary */
      0, /* Position Default In normal */
      0, /* Position Far End */
      0, /* Position Normal Hyperfocal */
      0, /* Position Macro Rgn */
      0, /* Undershoot Protect */
      0, /* Undershoot Adjust */
      0.500000f, /* Min Max Ratio Threshold */
      0, /* LED AF Assist Enable */
      367, /* LED AF Assist Trigger Index */
      0, /* Lens Reset Frame Skip Count */
      10.000000f, /* Lowlight Gain Threhsold */
      0.034000f, /* Base Delay Adj Threshold */
      /* Continuous */
      {

         /*********************************************************************/
         // Feature: AF tuning parameters specific to Continuous AF
         //
         // Variable name: enable.
         // Enable/disable continuous autofocus.
         // Default value: 1.
         // Data range: 0 or 1.
         // Constraints: None.
         // Effect: Continuous AF is enabled if set to 1.
         //
         // Variable name: scene_change_detection_ratio.
         // FV change to trigger a target change, following with a new focus search.
         // Default value: 4.
         // Data range: 0 to 60.
         // Constraints: None.
         // Effect: Higher value makes it easier to trigger a new search.
         //         Smaller value makes it harder to trigger a search due
         //         to FV change.
         //
         // Variable name: panning_stable_fv_change_trigger.
         // FV change vs. past frame FV to trigger to determine if scene
         //   is stable.
         //   If (|FV[i]-FV[i-1]|*t > FV[i-1]), not stable.
         // Default value: 1.0
         // Data range:  > 0
         // Constraints: None
         // Effect: Higher value makes it harder for scene to be determined
         //         as stable.
         //
         // Variable name: panning_stable_fvavg_to_fv_change_trigger.
         // FV change vs. average of 10 past frame's FV to trigger to determine
         //   if scene is stable.
         //   If (|FV[i]-FVavg|*t > Fvavg), not stable.
         // Default value: 3.0
         // Data range:  > 0.
         // Constraints: None.
         // Effect: Higher value makes it harder for scene to be determined
         //         as stable.
         //
         // Variable name: panning_unstable_trigger_cnt.
         // Number of panning unstable detections before triggering a
         //   scene change.
         // Default value: 1600.
         // Data range:  > 0.
         // Constraints: None.
         // Effect: Higher value makes it harder for scene to be determined
         //         as stable.
         //
         // Variable name: panning_stable_trigger_cnt.
         // Number of consecutive random scene change frames to determine need
         //   for new AF search.
         // Default value: 5.
         // Data range: 0 to 150.
         // Constraints: None.
         // Effect: Higher value makes it harder for scene to be determined
         //         as stable.
         //
         // Variable name: scene_change_trigger_cnt.
         // Number of consecutive random scene change frames to determine need
         //   for new AF search.
         // Default value: 5.
         // Data range: 0 to 150.
         // Constraints: None.
         // Effect: Higher values makes CAF harder to start a new search. For
         //         example, it is useful when a scene has movement but we do
         //         not want to trigger a new CAF search.
         //
         // Variable name: downhill_allowance.
         // Number of extra steps to search once peak FV is found.
         // Default value: 3.
         // Data range: 0 to 10.
         // Constraints: None.
         // Effect: Higher value will cause focus search to go beyond peak this
         //         amount of frames then return. Higher values are less prone to
         //         get AF stuck in local maximum but it takes longer and user
         //         experience is reduced. Smaller values have better user
         //         experience and time but may cause AF to focus on local
         //         maximum.
         //
         // Variable name: uphill_allowance.
         // Number of steps we move if FV keeps increasing.
         // Default value: 3.
         // Data range: 0 to 10.
         // Constraints: None.
         //
         // Variable name: base_frame_delay.
         // Number of frames to wait after lens move.
         // Default value: 0.
         // Data range: 0 to 6.
         // Constraints: Integers.
         // Effect: Larger value represents longer waiting time.
         //
         // Variable name: scene_change_luma_threshold.
         // Threshold above which the change of lux index will trigger the
         //   continuous AF search.
         // Default value: 10.
         // Data range: > 0.
         // Constraints: None.
         // Effect: Refocusing is needed when exp change > threshold.
         //
         // Variable name: luma_settled_threshold.
         // AF calculates AEC settled condition as follows:
         //   if abs(Prev AF Luma - Current AF Luma) < luma_settled_threshold
         //   then CAF can begin focus search without waiting for AEC to
         //   completely settle.
         // Default value: 10.
         // Data range: > 0.
         // Constraints: None.
         // Effect: Smaller value represents longer wait time for AEC to settle.
         //
         // Variable name: noise_level_th.
         // Determines if the variation in FV is caused by noise.
         // Default value: 0.05
         // Data range: > 0
         // Constraints: Float
         // Effect: (FV1 - FV0)/FV1 (FV1>FV0), noise if this value < threshold;
         //         otherwise, start FV search.
         //
         // Variable name: search_step_size.
         // Single step size while moving lens in continuous AF.
         // Default value: 2.
         // Data range: 2 to 6.
         // Constraints: Integer.
         // Effect: Larger value would move lens faster but can cause jerkiness.
         //
         // Variable name: init_search_type.
         // When continuous af starts we run this algorithm to keep lens in
         //   known position and enter monitor mode.
         // Default value: AF_EXHAUSTIVE_SEARCH.
         // Data range: NA.
         // Constraints: Should be valid algo type.
         //
         // Variable name: search_type
         // When scene change is detected, we use this algorithm to find maximum
         //   fv position.
         // Default value: AF_CONTINUOUS_SEARCH.
         // Data range: NA.
         // Constraints: Should be valid algo type.
         //
         // Variable name: low_light_wait.
         // How many extra frames to skip under low light condition.
         // Default value: 0.
         // Data range: 0 to 6.
         //
         // Variable name: max_indecision_cnt.
         // Maximum number of times to stay in make decision state while trying
         //   to determine which direction to start new search in.
         // Default value: 1.
         // Data range: 0 to 6.
         // Effect: Higher value might give better result; trade-off is performance.
         //
         // Variable name: flat_fv_confidence_level.
         // Used for flat field detection. Determine how confident we are that we
         //   don't have flat FV curve by comparing min and max FV.
         // Default value: 0.95
         // Data range: 0.0 to 1.0
         //
         // Variable name: af_sad.
         // AF tuning parameters specific to Sum of Absolute Difference (SAD) scene detection.
         //
         // Variable name: af_gyro
         // AF tuning parameters specific to gyro support.
         /*********************************************************************/

         1, /* Enable */
         4, /* Scene Change Detection Ratio */
         1.000000f, /* Panning Stable FV Change Trigger */
         3.000000f, /* Panning Stable FV Avg to FV Change Trigger */
         1600, /* Panning Unstable Trigger Cnt */
         5, /* Panning Stable Trigger Cnt */
         3, /* Downhill Allowance */
         3, /* Uphill Allowance */
         2, /* Base Frame Delay */
         10, /* Scene Change Luma Threshold */
         10, /* Luma Settled Threshold */
         0.050000f, /* Noise Level Th */
         2, /* Search Step Size */
         AF_EXHAUSTIVE_SEARCH, /* Init Search Type */
         AF_CONTINUOUS_SEARCH, /* Search Type */
         0, /* Lowlight Wait */
         1, /* Max Indecision Cnt */
         0.950000f, /* Flat FV Confidence Level */

         /*********************************************************************/
         // Feature: AF tuning parameters specific to Sum of
         //  Absolute Difference (SAD) scene detection.
         //
         // Variable name: enable.
         // Enable/disable SAD scene-detection mechanism.
         // Default value: 1.
         // Data range: 0 or 1.
         //
         // Variable name: gain_min.
         // Minimum gain.
         // Default value: 2.0
         // Data range: 0 to 100.
         // Effect: Larger the number, harder to trigger.
         //
         // Variable name: gain_max.
         // Maximum gain.
         // Default value: 4.0
         // Data range: 0 to 100.
         // Effect: Larger the number, harder to trigger.
         //
         // Variable name: ref_gain_min.
         // Minimum reference gain.
         // Default value: 2.0
         // Data range: 0 to 100.
         // Effect: Larger the number, harder to trigger.
         //
         // Variable name: ref_gain_max.
         // Minimum reference gain.
         // Default value: 4.0
         // Data range: 0 to 100.
         // Effect: Larger the number, harder to trigger.
         //
         // Variable name: threshold_min.
         // Threshold when current gain is less than min gain.
         // Default value: 5.0
         // Data range: 0 to 100.
         // Effect: Larger the number, harder to trigger.
         //
         // Variable name: threshold_max.
         // Threshold when current gain is more than max gain.
         // Default value: 10.0
         // Data range: 0 to 100.
         // Effect: Larger the number, harder to trigger.
         //
         // Variable name: ref_threshold_min.
         // Threshold when current gain is less than min reference gain.
         // Default value: 15.0
         // Data range: 0 to 100.
         // Effect: Larger the number, harder to trigger.
         //
         // Variable name: ref_threshold_max.
         // Threshold when current gain is more than max reference gain.
         // Default value: 20.0
         // Data range: 0 to 100.
         // Effect: Larger the number, harder to trigger.
         //
         // Variable name: frames_to_wait.
         // Frames to wait before storing reference luma.
         // Default value: 5.
         // Data range: 0 to 100.
         // Effect: Larger the number, harder to trigger.
         /*********************************************************************/

         /* SAD */
         {
            1, /* Enable */
            2.000000f, /* Gain Minimum */
            4.000000f, /* Gain Maximum */
            2.000000f, /* Reference Gain Minimum */
            30.00000f, /* Reference Gain Maximum */
            2, /* Treshold Minimum */
            6, /* Threshold Maximum */
            8, /* Reference Threshold Minimum */
            15, /* Reference Threshold Maximum */
            5, /* Frames To Wait */
         },

         /*********************************************************************/
         // Feature: AF tuning parameters specific to gyro support.
         //
         // Variable name: enable.
         // Enable/disable gyro assisted CAF.
         // Default value: 1.
         // Data range: 0 or 1.
         //
         // Variable name: min_movement_threshold.
         // Threshold above this means device is moving.
         // Default value: 0.33
         // Data range: 0 to 1.
         // Effect: Larger the number, harder to trigger.
         //
         // Variable name: stable_detected_threshold.
         // Device is stable if above this threshold after panning.
         // Default value: 0.015
         // Data range:  0 to 1.
         // Effect: Larger the number, harder to trigger.
         //
         // Variable name: unstable_count_th.
         // Number of frames device was above movement threshold.
         // Default value: 3.
         // Data range: 0 to 100.
         // Effect: Larger the number, harder to trigger.
         //
         // Variable name: stable_count_th.
         // Number of frames we need to be stable after panning.
         // Default value: 3.
         // Data range: 0 to 100.
         // Effect: Larger the number, harder to trigger.
         //
         // Variable name: fast_pan_threshold.
         // Threshold to be consider as fast panning, comparing to
         //   gyro_data->sqr.
         // Default value: 0.1
         // Data range: 0 to 1.
         // Effect: Larger the number, harder to trigger.
         //
         // Variable name: slow_pan_threshold.
         // Threshold to be consider as slow panning, comparing to
         //   gyro_data->sqr.
         // Default value: 0.04
         // Data range: 0 to 1.
         // Effect: Larger the number, harder to trigger.
         //
         // Variable name: fast_pan_count_threshold.
         // Threshold of fast panning cnt to trigger refocusing.
         // Default value: 8.
         // Data range: 0 to 100.
         // Effect: Larger the number, harder to trigger.
         //
         // Variable name: sum_return_to_orig_pos_threshold.
         // Apart from fast panning count, if the gyro data sum is
         //   past the threshold, it will trigger refocus.
         // Default value: 15.
         // Data range: 0 to 100.
         // Effect: Larger the number, harder to trigger.
         //
         // Variable name: stable_count_delay.
         // Number of stable frames from gyro to be consider stable
         //   long enough.
         // Default value: 30.
         // Data range: 0 to 100.
         // Effect: Larger the number, harder to trigger.
         /*********************************************************************/

         /* Gyro */
         {
            1, /* Enable */
            0.330000f, /* Min Movement Threshold */
            0.015000f, /* Stable Detected Threshold */
            3, /* Unstable Count Threshold */
            3, /* Stable Count Threshold */
            0.100000f, /* Fast Pan Threshold */
            0.040000f, /* Slow Pan Threshold */
            8, /* Fast Pan Count Threshold */
            15, /* Sum Return To Original Position Threshold */
            30, /* Stable Count Delay */
         },

         /******************************************************************************/
         // af_tuning_chroma_t: Chroma based scene change detection
         //
         // Variable name: enable
         // Description: enable flag for chroma based scene change detection feature
         // 3A version:
         // Default value: 0
         // Data range: 0 or 1
         // Constraints:
         //
         // Variable name: g_over_b_thres
         // Description: when G/B ratio is greater than this threshold
         // scene change is detected and AF is triggered
         // 3A version:
         // Default value: 0.5
         // Data range: [0 5]
         // Constraints: Higher the threshold difficult to trigger AF
         //              Smaller the threshold eady to trigger AF
         //
         // Variable name: g_over_r_thres
         // Description: when G/R ratio is greater than this threshold
         // scene change is detected and AF is triggered
         // 3A version:
         // Default value: 0.4
         // Data range: [0 5]
         // Constraints: Higher the threshold difficult to trigger AF
         //              Smaller the threshold eady to trigger AF
         //
         // Variable name: aec_gain_input
         // Description: Setting different gain levels to have different thresholds
         // 3A version:
         // Default value: {5, 10, 18, 22, 30}
         // Data range: [0 30]
         // Constraints:
         //
         // Variable name: g_over_b_threshold_scaler
         // Description: Scaler threshold to multiple with g_over_b_thres at
         // different gain level
         // 3A version:
         // Default value: {1, 1.5, 2, 2.2, 2.5}
         // Data range: [1 5]
         // Constraints: Higher the threshold difficult to trigger AF
         //              Smaller the threshold eady to trigger AF
         //
         // Variable name: g_over_r_threshold_scaler
         // Description: Scaler threshold to multiple with g_over_r_thres at
         // different gain level
         // 3A version:
         // Default value: {1, 1.5, 2, 2.2, 2.5}
         // Data range: [1 5]
         // Constraints: Higher the threshold difficult to trigger AF
         //              Smaller the threshold eady to trigger AF
         //
         // Variable name: unstable_count_th
         // Description: number of frames to detect unstable scene change
         // 3A version:
         // Default value: 5
         // Data range: [1 20]
         // Constraints: Higher the threshold difficult to trigger AF
         //              Smaller the threshold eady to trigger AF
         //
         // Variable name: num_of_samples
         // Description: number of frames to monitor for scene change detection
         // 3A version:
         // Default value: 5
         // Data range: [1 20]
         /******************************************************************************/

         /* AF Chroma */
         {
            0, /* AF Cont Chroma Enable */
            0.500000f, /* AF Cont Chroma G Over B Thresh */
            0.400000f, /* AF Cont Chroma G Over R Thresh */
            /* AF Cont Chroma AEC Gain Input */
            {
               5.000000f, 10.00000f, 18.00000f, 22.00000f, 30.00000f
            },
            /* AF Cont Chroma G Over B Thresh Scalar */
            {
               1.000000f, 1.500000f, 2.000000f, 2.200000f, 2.500000f
            },
            /* AF Cont Chroma G Over R Thresh Scalar */
            {
               1.000000f, 1.500000f, 2.000000f, 2.200000f, 2.500000f
            },
            5, /* AF Cont Chroma Unstable Count Thresh */
            5, /* AF Cont Chroma Num Samples */
            /* AF Cont Chroma Reserve */
            {
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
            },
         },

         /******************************************************************************/
         // af_tuning_spotlight_af: Spotlight detection/af process feature parameters
         //
         // Variable name: enable
         // Description: enable flag for spotlight af process
         // 3A version:
         // Default value: 0
         // Data range: 0 or 1
         // Constraints: None
         //
         // Variable name: far_flat_th
         // Description: flat_threshold for far scene when detecting spotlight condition
         // 3A version:
         // Default value: 0.55
         // Data range: [0 1]
         // Constraints: None
         // Effect: The lower the easier to be recognized as flat scene
         //
         // Variable name: marco_flat_th
         // Description: flat_threshold for marco scene when detecting spotlight condition
         // 3A version:
         // Default value: 0.85
         // Data range: [0 1]
         // Constraints: None
         // Effect: The lower the easier to be recognized as flat scene
         //
         // Variable name: inc_flat_th
         // Description: inc_flat_threshold to judge current af position is in increase or flat condition
         // 3A version:
         // Default value: 1.035
         // Data range: [1 3]
         // Constraints: None
         // Effect: The larger the harder to be recognized as FV increment
         //
         // Variable name: dec_flat_th
         // Description: dec_flat_threshold to judge current af position is in decrease or flat condition
         // 3A version:
         // Default value: 0.978
         // Data range: [0 1]
         // Constraints: None
         // Effect: The lower the harder to be recognized as FV decrement
         //
         // Variable name: spotlight_zone_start_h
         // Description: Defines the horizontal start region of spotlight zone in 16x16 total regions
         // 3A version:
         // Default value:4
         // Data range: [0 15]
         // Constraints: need to be smaller than spotlight_zone_end_h and also smaller than background_zone_start_h
         //
         // Variable name: spotlight_zone_end_h
         // Description: Defines the horizontal end region of spotlight zone in 16x16 total regions,
         //              the spotlight zone horizontal end region = spotlight_zone_end_h - 1
         // 3A version:
         // Default value:12
         // Data range: [1 16]
         // Constraints: need to be bigger than spotlight_zone_start_h ;
         //
         // Variable name: spotlight_zone_start_v
         // Description: Defines the vertical start region of spotlight zone in 16x16 total regions
         // 3A version:
         // Default value:4
         // Data range: [0 15]
         // Constraints: need to be smaller than spotlight_zone_end_v
         //
         // Variable name: spotlight_zone_end_v
         // Description: Defines the vertical end region of spotlight zone in 16x16 total regions,
         //             the spotlight zone vertical end region = spotlight_zone_end_v - 1
         // 3A version:
         // Default value:12
         // Data range: [1 16]
         // Constraints: need to be bigger than spotlight_zone_start_v
         //
         // Variable name: background_zone_start_h
         // Description: Defines the horizontal start region of background zone in 16x16 total regions
         // 3A version:
         // Default value:2
         // Data range: [0 15]
         // Constraints: need to be smaller than background_zone_end_h
         //
         // Variable name: background_zone_end_h
         // Description: Defines the horizontal end region of background zone in 16x16 total regions,
         //              the background zone horizontal end region = background_zone_end_h - 1
         // 3A version:
         // Default value:14
         // Data range: [1 16]
         // Constraints: need to be bigger than background_zone_start_h
         //
         // Variable name: background_zone_start_v
         // Description: Defines the vertical start region of background zone in 16x16 total regions
         // 3A version:
         // Default value:2
         // Data range: [0 15]
         // Constraints: need to be smaller than background_zone_end_v
         //
         // Variable name: background_zone_end_v
         // Description: Defines the vertical end region of background zone in 16x16 total regions,
         //              the background zone vertical end region = background_zone_end_v - 1
         // 3A version:
         // Default value:14
         // Data range: [1 16]
         // Constraints: need to be bigger than background_zone_start_v
         //
         // Variable name: exposure_index_trigger_th
         // Description: if exposure index is smaller than this threshold, the spotlight will not be detected
         // 3A version:
         // Default value:350
         // Data range: [200 400]
         // Constraints: None
         //
         // Variable name: background_luma_avg_th
         // Description: If the average luma of background zone is higher than this threshold,
         //              the spotlight will not be detected
         // 3A version:
         // Default value:30
         // Data range: [1 255]
         // Constraints:
         //
         // Variable name: region_low_grey_th
         // Description: Defines the low grey luma threshold. If luma is smaller than this threshold,
         //               it will be recognized as a low grey region, suggest to disable it by default value 255
         // 3A version:
         // Default value:255
         // Data range: [1 255]
         // Constraints:
         //
         // Variable name: region_dark_grey_th
         // Description: Defines the dark grey luma threshold. If luma is smaller than this threshold,
         //              it will be recognized as a dark grey region, good to keep default value
         // 3A version:
         // Default value:7
         // Data range: [1 255]
         // Constraints:
         //
         // Variable name: background_low_grey_pct_th
         // Description: if the low grey percentage is higher than this threshold, the low grey flag will be raised.
         //              Suggest to disable it by default
         // 3A version:
         // Default value:1.0
         // Data range: [0 1.0]
         // Constraints: If dark grey has been detected first, the low grey will not be used anymore
         //
         // Variable name: background_dark_grey_pct_th
         // Description: if the dark grey percentage is higher than this threshold, the dark grey flag will be raised
         // 3A version:
         // Default value:0.3
         // Data range: [0 1.0]
         // Constraints: If dark grey has been detected first, the low grey will not be used anymore
         //
         // Variable name: bright_region_luma_delta_background_zone
         // Description: if regions luma is higher than average luma of background zone multiply this parameter, this region will be recognize as a bright region
         // 3A version:
         // Default value:2.0
         // Data range: [0 8.0]
         // Constraints:
         //
         // Variable name: bright_region_luma_delta_spotlight_zone_low_grey
         // Description: In low grey condition and cluster is enabled,if regions luma is higher than average luma of background zone multiply
         //                this parameter, this region will be recognize as a bright region
         // 3A version:
         // Default value:2.5
         // Data range: [0 8.0]
         // Constraints:
         //
         // Variable name: bright_region_luma_delta_spotlight_zone_dark_grey
         // Description: In dark grey condition and cluster is enabled,if regions luma is higher than average luma of background zone multiply
         //                this parameter, this region will be recognize as a bright region
         // 3A version:
         // Default value:3.0
         // Data range: [0 8.0]
         // Constraints:
         //
         // Variable name: square_cluster_inc_size
         // Description: The maximum bright region will be the center region and the square cluster size will depends
         //              on the parameter, set to 0 will disable this cluster effect
         // 3A version:
         // Default value:1
         // Data range: [0 2]
         // Constraints:
         //
         // Variable name: vertical_cluster_inc_size
         // Description: The maximum bright region will be the center region and the vertical cluster size will depends
         //              on the parameter, set to 0 will disable this cluster effect
         // 3A version:
         // Default value:2
         // Data range: [0 2]
         // Constraints:
         //
         // Variable name: horizontal_cluster_inc_size
         // Description: The maximum bright region will be the center region and the vertical cluster size will depends
         //              on the parameter, set to 0 will disable this cluster effect
         // 3A version:
         // Default value:2
         // Data range: [0 2]
         // Constraints:
         //
         // Variable name: square_cluster_pct_th
         // Description: If the bright region percentage of square cluster zones is higher this threshold,
         //              the flag of square_bright_region_cluster will be raised
         // 3A version:
         // Default value:0.8
         // Data range: [0 1.0]
         // Constraints:
         //
         // Variable name: vertical_cluster_pct_th
         // Description: If the bright region percentage of vertical cluster zones is higher this threshold, the flag of
         //              vertical_bright_region_cluster will be raised
         // 3A version:
         // Default value:0.2
         // Data range: [0 1.0]
         // Constraints:
         //
         // Variable name: horizontal_cluster_pct_th
         // Description: If the bright region percentage of horizontal cluster zones is higher this threshold, the flag of
         //              horizontal_bright_region_cluster will be raised
         // 3A version:
         // Default value:0.2
         // Data range: [0 1.0]
         // Constraints:
         //
         // Variable name: spotlight_detect_cnt_th
         // Description: Spotlight detect flag threshold. Only if consecutive success spotlight detect over the threshold
         //              count will result in the final spotlight detected flag be updated.
         // 3A version:
         // Default value:3
         // Data range: [1 infinity]
         // Constraints:
         /******************************************************************************/

         /* AF Spot Light */
         {
            0, /* AF Cont Spot Light Enable */
            0.550000f, /* AF Cont Spot Light Far Flat Thresh */
            0.850000f, /* AF Cont Spot Light Macro Flat Thresh */
            1.035000f, /* AF Cont Spot Light Inc Flat Thresh */
            0.978000f, /* AF Cont Spot Light Dec Flat Thresh */
            4, /* AF Cont Spot Light Spotlight Zone Start H */
            12, /* AF Cont Spot Light Spotlight Zone End H */
            4, /* AF Cont Spot Light Spotlight Zone Start V */
            12, /* AF Cont Spot Light Spotlight Zone End V */
            2, /* AF Cont Spot Light Background Zone Start H */
            14, /* AF Cont Spot Light Background Zone End H */
            2, /* AF Cont Spot Light Background Zone Start V */
            14, /* AF Cont Spot Light Background Zone End V */
            350, /* AF Cont Spot Light Exposure Index Trigger Thresh */
            30, /* AF Cont Spot Light Background Luma Avg Thresh */
            255, /* AF Cont Spot Light Region Low Gray Thresh */
            7, /* AF Cont Spot Light Region Low Dark Thresh */
            1.000000f, /* AF Cont Spot Light Background Low Gray Pct Thresh */
            0.300000f, /* AF Cont Spot Light Background Dark Gray Pct Thresh */
            2.000000f, /* AF Cont Spot Light Bright Region Luma Delta Background Zone */
            2.500000f, /* AF Cont Spot Light Bright Region Luma Delta Spotlight Zone Low Gray */
            3.000000f, /* AF Cont Spot Light Bright Region Luma Delta Spotlight Zone Dark Gray */
            1, /* AF Cont Spot Light Square Cluster Inc Size */
            2, /* AF Cont Spot Light Vertical Cluster Inc Size */
            2, /* AF Cont Spot Light Horizontal Cluster Inc Size */
            0.800000f, /* AF Cont Spot Light Square Cluster Inc Pct Thresh */
            0.200000f, /* AF Cont Spot Light Vertical Cluster Inc Pct Thresh */
            0.200000f, /* AF Cont Spot Light Horizontal Cluster Inc Pct Thresh */
            3, /* AF Cont Spot Light Spotlight Detect Cnt Thresh */
            /* AF Cont Spot Light Reserved */
            {
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
            },
         },
      },

      /*********************************************************************/
      // Feature: AF tuning parameters specific to exhaustive search AF.
      //
      // Variable name: num_gross_steps_between_stat_points.
      // Used to control how rough initial AF search (coarse search) is.
      // Default value: 4.
      // Data range: 3 to 6.
      // Constraints: None.
      // Effect: Larger value means more displacement between initial sampled
      //   points. This would require more num_fine_search_points during
      //   subsequent search (fine search) to locate optimal ending AF lens
      //   position.
      //
      // Variable name: num_fine_steps_between_stat_points.
      // Used to control how precise subsequent AF search (fine search) is.
      // Default value: 1.
      // Data range: 1 to 2.
      // Constraints: Less than num_gross_steps_between_stat_points.
      // Effect: The bigger the value is, the less likely AF lens ends in
      //   optimal position.
      //
      // Variable name: num_fine_search_points.
      // Used to control how many search points to be gathered in fine search.
      // Default value: 8.
      // Data range: Fixed.
      // Constraints: It is set to 2*num_gross_steps_between_stat_points to
      //  cover entire range of coarse search's neighboring sampled points.
      // Effect: If it is less than 2*num_gross_steps_between_stat_points, AF
      //   precision maybe lost.
      //
      // Variable name: downhill_allowance.
      // Number of extra steps to search once peak FV is found.
      // Default value: 3.
      // Data range: 0 to 10.
      // Constraints: None.
      // Effect: Higher value will cause focus search to go beyond peak this
      //   amount of frames then return.  Higher values are less prone to get
      //   AF stuck in local maximum but it takes longer and user experience
      //   is reduced. Smaller values have better user experience and time but
      //   may cause AF to focus on local maximum..
      //
      // Variable name: uphill_allowance.
      // Number of steps we move if FV keeps increasing.
      // Default value: 3.
      // Data range: 0 to 10.
      // Constraints: None.
      //
      // Variable name: base_frame_delay.
      // Number of frames to skip after lens move is complete.
      // Default value: 3.
      // Data range: 0 to 10.
      // Constraints: None.
      // Effect: Lower value gives faster response but jerkier. Higher value
      //   gives smooth response.
      //
      // Variable name: coarse_frame_delay.
      // Number of frames to skip after lens move is complete in coarse search.
      // Default value: 0.
      // Data range: 0 to 10.
      // Constraints: None.
      // Effect: Lower value gives faster response but jerkier. Higher value
      //   gives smooth response.
      //
      // Variable name: fine_frame_delay.
      // Number of frames to skip after lens move is complete in fine search.
      // Default value: 0.
      // Data range: 0 to 10.
      // Constraints: None.
      // Effect: Lower value gives faster response but jerkier. Higher value
      //   gives smooth response.
      //
      // Variable name: coarse_to_fine_frame_delay.
      // Number of frames to skip after lens move is complete in coarse search
      //   and before starting the fine search.
      // Default value: 1.
      // Data range: 0 to 10.
      // Constraints: None.
      // Effect: Lower value gives faster response but jerkier. Higher value
      //   gives smooth response.
      //
      // Variable name: noise_level_th.
      // Variation between last and current FV should be above this threshold,
      // otherwise the variation is considered to be due to noise.
      // Default value: 0.02
      // Data range: 0 to 1.
      // Constraints:
      // Effect:
      //
      // Variable name: flat_fv_confidence_level
      // Used for flat field detection. Determine how confident we are that we
      //   don't have flat FV curve by comparing min and max FV.
      // Default value: 0.95
      // Data range: 0 to 1.
      // Constraints:
      // Effect:
      //
      // Variable name: cum_fv_ratio_th.
      // Used for flat field detection. Cumulative sum of inflections and deflections
      //   less than this threshold denotes flat fv curve.
      // Default value: between 1.1 and 1.2
      // Data range: 1 to 5.
      // Constraints:
      // Effect:
      //
      // Variable name: low_light_luma_th.
      // Used for flat field detection. When the luma gets below this threshold, we
      //   assume it's too dark to focus and report failure.
      // Default value: 4.
      // Data range: > 0.
      // Constraints:
      // Effect:
      //
      // Variable name: enable_multiwindow.
      // Enable flag for using Multi window or Single window AF stats.
      // Default value: 0
      // Data range: 0 or 1.
      // Constraints:
      // Effect: 0 = Single Window, 1 = MultiWindow
      //
      // Variable name: gain_thresh
      // Gain Threshold for triggering multi window AF stats
      // 3A version:
      // Default value: 0
      // Data range:
      // Constraints:
      // Effect:
      /*********************************************************************/

      /* Exhaustive */
      {
         4, /* Num Gross Steps Between Stat Points */
         1, /* Num Fine Steps Between Stat Points */
         8, /* Num Fine Search Points */
         3, /* Downhill Allowance */
         3, /* Uphill Allowance */
         3, /* Base Frame Delay */
         0, /* Course Frame Delay */
         0, /* Fine Frame Delay */
         1, /* Course To Fine Frame Delay */
         0.020000f, /* Noise Level Threshold */
         0.950000f, /* Flat FV Confidence Level */
         0.000000f, /* Climb Ratio Threshold */
         4, /* Lowlight Luma Threshold */
         0, /* Enable MultiWindow */
         0.000000f, /* Gain Threshold */
      },

      /*********************************************************************/
      // Feature: AF tuning parameters specific to full sweep search AF.
      //
      // Variable name: num_steps_between_stat_points.
      // Used to control how many steps to move the lens at a time during
      //   search.
      // Default value: 4.
      // Data range: 1 to max steps.
      // Constraints: None.
      // Effect: Should always be 1, but for some tests could be more.
      //
      // Variable name: frame_delay_inf.
      // Number of frames to skip after lens move to initial (inf) position.
      // Default value: 2.
      // Data range: 0 to 10.
      // Constraints: None.
      // Effect: Bigger value will give more time for the lens to settle
      //   after going into the inf. position.
      //
      // Variable name: frame_delay_norm.
      // Number of frames to skip after lens move to the next position.
      // Default value: 2.
      // Data range: 0 to 10.
      // Constraints: None.
      // Effect: Bigger value will give more time for the lens to settle
      //   between steps.
      //
      // Variable name: frame_delay_final.
      // Number of frames to skip after lens move to its final position where
      //   the maximum FV is registered.
      // Default value: 2.
      // Data range: 0 to 10.
      // Constraints: None.
      // Effect: Bigger value will give more time for the lens to settle
      //   after going into the final position, so the FV can be observed in
      //   the logs.
      /*********************************************************************/

      /* Full Sweep */
      {
         4, /* Num Steps Between Stat Points */
         2, /* Frame Delay Inf */
         2, /* Frame Delay Norm */
         2, /* Frame Delay Final */
      },

      /*********************************************************************/
      // Feature: AF tuning parameters specific to slope predictive algorithm.
      //
      // Variable name: fv_curve_flat_threshold.
      // Threshold to determine if FV curve is flat.
      // Default value: 0.9
      // Data range: 0 to 1.
      // Constraints: None.
      // Effect:
      //
      // Variable name: slope_threshold1.
      // Slope predictive threshold 1.
      // Default value: 0.9
      // Data range: 0 to 1.
      // Constraints: None.
      // Effect:
      //
      // Variable name: slope_threshold2.
      // Slope predictive threshold 2.
      // Default value: 1.1
      // Data range: 0 to 2.
      // Constraints: None.
      // Effect:
      //
      // Variable name: slope_threshold3.
      // Slope predictive threshold 3.
      // Default value: 0.5
      // Data range: 0 to 1.
      // Constraints: None.
      // Effect:
      //
      // Variable name: slope_threshold4.
      // Slope predictive threshold 4.
      // Default value: 3.
      // Data range: 0 to 5.
      // Constraints: None.
      // Effect:
      //
      // Variable name: lens_pos_0.
      // Lens position when the object is at 3m.
      // Default value: 36.
      // Data range: 0 to far end lens position.
      // Constraints: None.
      // Effect:
      //
      // Variable name: lens_pos_1.
      // Lens position when the object is at 70cm.
      // Default value: 32.
      // Data range: 0 to far end lens position.
      // Constraints: Less than lens_pos_0.
      // Effect:
      //
      // Variable name: lens_pos_2.
      // Lens position when the object is at 30cm.
      // Default value: 24.
      // Data range: 0 to far end lens position.
      // Constraints: Less than lens_pos_1.
      // Effect:
      //
      // Variable name: lens_pos_3.
      // Lens position when the object is at 20cm.
      // Default value: 12.
      // Data range:0 to far end lens position.
      // Constraints: Less than lens_pos_2.
      // Effect:
      //
      // Variable name: lens_pos_4.
      // Lens position when the object is at 10cm.
      // Default value: 8.
      // Data range: 0 to far end lens position.
      // Constraints: Less than lens_pos_3.
      // Effect:
      //
      // Variable name: lens_pos_5.
      // Lens position when the object is at macro.
      // Default value: 4.
      // Data range: 0 to far end lens position.
      // Constraints: Less than lens_pos_3.
      // Effect:
      //
      // Variable name: frame_delay.
      // Number of frames to skip after lens move is complete.
      // Default value: 1.
      // Data range: 0 to 10.
      // Constraints: Less than lens_pos_4.
      // Effect: Lower value gives faster response but jerkier. Higher value
      //   gives smooth response.
      //
      // Variable name: downhill_allowance.
      // Max number of consecutive downhill in the first 4 or 6 samples.
      // Default value: 2.
      // Data range: 0 to 10.
      // Constraints: None.
      // Effect: Higher value will cause focus search to go beyond peak this
      //   amount of frames then return. Higher values are less prone to get
      //   AF stuck in local maximum but it takes longer and user experience
      //   is reduced. Smaller values have better user experience and time but
      //   may cause AF to focus on local maximum.
      //
      // Variable name: downhill_allowance_1.
      // Max number of consecutive downhill in the first 2nd or 3rd round.
      // Default value: 1.
      // Data range: 0 to 10.
      // Constraints: None.
      // Effect: Higher value will cause focus search to go beyond peak this
      //   amount of frames then return. Higher values are less prone to get
      //   AF stuck in local maximum but it takes longer and user experience
      //   is reduced. Smaller values have better user experience and time but
      //   may cause AF to focus on local maximum.
      /*********************************************************************/

      /* SP */
      {
         0.900000f, /* FV Curve Flat Threshold */
         0.900000f, /* Slope Threshold 1 */
         1.100000f, /* Slope Threshold 2 */
         0.500000f, /* Slope Threshold 3 */
         3.000000f, /* Slope Threshold 4 */
         36, /* Lens Pos 0 */
         32, /* Lens Pos 1 */
         24, /* Lens Pos 2 */
         12, /* Lens Pos 3 */
         8, /* Lens Pos 4 */
         4, /* Lens Pos 5 */
         1, /* Base Frame Delay */
         2, /* Downhill Allowance */
         1, /* Downhill Allowance 1 */
      },
      /* Single */
      {

         /*********************************************************************/
         // Feature: AF tuning parameters specific to Single AF algorithm.
         //
         // Variable name: single_index_t.
         // Index mapping from physical distance to lens position.
         // Default value: Measured Data.
         // Data range: 0 to far end lens index.
         // Constraints: None.
         // Effect: Determines boundaries of decision in Single AF algo.
         //
         // Variable name: actuator_type.
         // Type of Actuator used in camera module.
         // Default value: ACT_TYPE_OPENLOOP.
         // Data range: ACT_TYPE_OPENLOOP or ACT_TYPE_CLOSELOOP.
         // Effect: Affects behaviors in algorithm.
         //
         // Variable name: is_hys_comp_needed.
         // Flag to indicate if needed hysteresis, depending on actuator.
         // Default value: FALSE (0).
         // Data range: 0 or 1.
         // Effect: Affects behaviors in algorithm.
         //
         // Variable name: step_index_per_um.
         // Number of step index per micro-meter.
         // Default value: 1.
         // Data range: 1 to 65535.
         // Constraints: None.
         //
         // Variable name: PAAF_enable.
         // Enable flag to use SW stats.
         //    It is up to Algo to decide whether to enable sw stats in the end.
         //    For some modes in Video use case we cannot enable SW stats.
         // Default value: 1.
         // Data range: 0 or 1
         // Constraints: None
         // Effect: Setting 0 will use HW stats.
         //
         // Variable name: BV_gain (CUR_BV_INFO)
         // Gain thresholds to determine BV Lux level.
         // Default value: {-30.0f, -0.50f, 0.50f, 1.50f, 2.50f, 3.20f, 6.00f, 8.00f}.
         // Constraints: Do not modify unless it causes issues.
         // Effect: Changes Lux Level decision.
         /*********************************************************************/

         /* Index */
         {
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0
         },
         1, /* Actuator Type */
         0, /* Is Hys Comp Needed */
         1, /* Step Index Per Um */
         /* TAF Step Table */
         {

            /*********************************************************************/
            // Feature Name: Scan Step size for Single AF
            //
            // Variable name: rgn_0.
            // Step size for far end to rgn 0 boundary.
            // Default Value: 20.
            // Data range: 0 to far end lens position.
            //
            // Variable name: rgn_1.
            // Step size for rgn 0 to rgn 1 boundary.
            // Default Value: 24.
            // Data range: 0 to far end lens position.
            //
            // Variable name: rgn_2.
            // Step size for rgn 1 to rgn 2 boundary.
            // Default Value: 10.
            // Data range: 0 to far end lens position.
            //
            // Variable name: rgn_3.
            // Step size for rgn 2 to rgn 3 boundary.
            // Default Value: 8.
            // Data range: 0 to far end lens position.
            //
            // Variable name: rgn_4.
            // Step size for rgn 3 to near end boundary.
            // Default Value: 12.
            // Data range: 0 to far end lens position.
            //
            // Feature: PreScan and fine search step size of different
            //   regions from far end to near end of the region specified in
            //   single_optic_t srch region structure.
            //    Entry 1 is from far end to hyperfocal.
            //    Entry 2 is from hyperfocal to rgn 1 boundary.
            //    Entry 3 is from rgn 1 to rgn 2 boundary.
            //    Entry 4 is from rgn 2 to rgn 3 boundary.
            //    Entry 5 is from rgn 3 to near end boundary.
            //
            // Variable name: Prescan_normal_light.
            // Prescan step size for normal light.
            // Default value: {20, 12, 12, 12, 16}.
            // Data range: 0 to far end lens position.
            // Effect: Higher number increase speed of search, but lower accuracy.
            //         Setting too high of scan step will have adverse effect
            //         on actuator movement and result in bad stats.
            //
            // Variable name: Prescan_low_light.
            // Prescan step size for low light.
            // Default value: {24, 16, 16, 16, 20}.
            // Data range: 0 to far end lens position.
            // Effect: Higher number increase speed of search, but lower accuracy.
            //         Setting too high of scan step will have adverse effect
            //         on actuator movement and result in bad stats.
            //
            // Variable name: Finescan_normal_light.
            // Fine scan step size for normal light.
            // Default value: {10, 7, 6, 6, 10}.
            // Data range: 0 to far end lens position.
            // Effect: Higher number increase speed of search, but lower accuracy.
            //         Setting too high of scan step will have adverse effect
            //         on actuator movement and result in bad stats.
            //
            // Variable name: Finescan_low_light.
            // Fine scan step size for low light.
            // Default value: {12, 9, 8, 9, 12}.
            // Data range: 0 to far end lens position.
            // Effect: Higher number increase speed of search, but lower accuracy.
            //         Setting too high of scan step will have adverse effect
            //         on actuator movement and result in bad stats.
            /*********************************************************************/

            /* Prescan Normal Light */
            {
               20, /* Region 0 */
               12, /* Region 0 */
               12, /* Region 0 */
               12, /* Region 0 */
               16, /* Region 0 */
            },
            /* Prescan Lowlight */
            {
               24, /* Region 0 */
               16, /* Region 0 */
               16, /* Region 0 */
               16, /* Region 0 */
               20, /* Region 0 */
            },
            /* Finescan Normal Light */
            {
               10, /* Region 0 */
               7, /* Region 0 */
               6, /* Region 0 */
               6, /* Region 0 */
               10, /* Region 0 */
            },
            /* FineScan Lowlight */
            {
               12, /* Region 0 */
               9, /* Region 0 */
               8, /* Region 0 */
               9, /* Region 0 */
               12, /* Region 0 */
            },
         },
         /* CAF Step Table */
         {

            /*********************************************************************/
            // Feature Name: Scan Step size for Single AF
            //
            // Variable name: rgn_0.
            // Step size for far end to rgn 0 boundary.
            // Default Value: 20.
            // Data range: 0 to far end lens position.
            //
            // Variable name: rgn_1.
            // Step size for rgn 0 to rgn 1 boundary.
            // Default Value: 24.
            // Data range: 0 to far end lens position.
            //
            // Variable name: rgn_2.
            // Step size for rgn 1 to rgn 2 boundary.
            // Default Value: 10.
            // Data range: 0 to far end lens position.
            //
            // Variable name: rgn_3.
            // Step size for rgn 2 to rgn 3 boundary.
            // Default Value: 8.
            // Data range: 0 to far end lens position.
            //
            // Variable name: rgn_4.
            // Step size for rgn 3 to near end boundary.
            // Default Value: 12.
            // Data range: 0 to far end lens position.
            //
            // Feature: PreScan and fine search step size of different
            //   regions from far end to near end of the region specified in
            //   single_optic_t srch region structure.
            //    Entry 1 is from far end to hyperfocal.
            //    Entry 2 is from hyperfocal to rgn 1 boundary.
            //    Entry 3 is from rgn 1 to rgn 2 boundary.
            //    Entry 4 is from rgn 2 to rgn 3 boundary.
            //    Entry 5 is from rgn 3 to near end boundary.
            //
            // Variable name: Prescan_normal_light.
            // Prescan step size for normal light.
            // Default value: {20, 12, 12, 12, 16}.
            // Data range: 0 to far end lens position.
            // Effect: Higher number increase speed of search, but lower accuracy.
            //         Setting too high of scan step will have adverse effect
            //         on actuator movement and result in bad stats.
            //
            // Variable name: Prescan_low_light.
            // Prescan step size for low light.
            // Default value: {24, 16, 16, 16, 20}.
            // Data range: 0 to far end lens position.
            // Effect: Higher number increase speed of search, but lower accuracy.
            //         Setting too high of scan step will have adverse effect
            //         on actuator movement and result in bad stats.
            //
            // Variable name: Finescan_normal_light.
            // Fine scan step size for normal light.
            // Default value: {10, 7, 6, 6, 10}.
            // Data range: 0 to far end lens position.
            // Effect: Higher number increase speed of search, but lower accuracy.
            //         Setting too high of scan step will have adverse effect
            //         on actuator movement and result in bad stats.
            //
            // Variable name: Finescan_low_light.
            // Fine scan step size for low light.
            // Default value: {12, 9, 8, 9, 12}.
            // Data range: 0 to far end lens position.
            // Effect: Higher number increase speed of search, but lower accuracy.
            //         Setting too high of scan step will have adverse effect
            //         on actuator movement and result in bad stats.
            /*********************************************************************/

            /* Prescan Normal Light */
            {
               20, /* Region 0 */
               12, /* Region 0 */
               12, /* Region 0 */
               12, /* Region 0 */
               16, /* Region 0 */
            },
            /* Prescan Lowlight */
            {
               24, /* Region 0 */
               16, /* Region 0 */
               16, /* Region 0 */
               16, /* Region 0 */
               20, /* Region 0 */
            },
            /* Finescan Normal Light */
            {
               10, /* Region 0 */
               7, /* Region 0 */
               6, /* Region 0 */
               6, /* Region 0 */
               10, /* Region 0 */
            },
            /* FineScan Lowlight */
            {
               12, /* Region 0 */
               9, /* Region 0 */
               8, /* Region 0 */
               9, /* Region 0 */
               12, /* Region 0 */
            },
         },
         1, /* PAAF Enble */
         /* SW Thresholds */
         {

            /*********************************************************************/
            // Feature: Set of algorithm Thresholds to find peak len position.
            //
            // Variable name: flat_inc_thres.
            // Threshold for detect flat trend in INCREASE.
            // Default value: 1.008
            // Data range: 1 to 1.1
            // Effect: Lower value makes detection harder.
            //
            // Variable name: flat_dec_thres.
            // Threshold for detect flat trend in DECREASE.
            // Default value: 0.992
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: macro_thres.
            // Threshold for detect Macro Peak.
            // Default value: 0.99
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: drop_thres.
            // Threshold for large drop in invalid trend.
            // Default value: 0.75
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: hist_dec_dec_thres.
            // Histogram threshold to detect peak in decrease decrease trend.
            // Default value: 800
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: hist_inc_dec_thres.
            // Histogram threshold to detect peak in increase decrease trend.
            // Default value: 800
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: dec_dec_3frame.
            // Threshold in 3 frame decrease decrease peak.
            // Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}.
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: inc_dec_3frame.
            // Threshold in 3 frame increase decrease peak.
            // Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}.
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: dec_dec.
            // Threshold in decrease decrease peak.
            // Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}.
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: dec_dec_noise.
            // Threshold in decrease decrease peak with noise present.
            // Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}.
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: inc_dec.
            // Threshold in increase decrease peak.
            // Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}.
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: inc_dec_noise.
            // Threshold in increase decrease peak with noise present.
            // Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}.
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: flat_threshold.
            // Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}.
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            /*********************************************************************/

            1.008000f, /* Flat Inc Threshold */
            0.992000f, /* Flat Dec Threshold */
            0.990000f, /* Macro Threshold */
            0.750000f, /* Drop Threshold */
            800, /* Hist Dec Dec Thresh */
            800, /* Hist Inc Dec Thresh */
            /* BV Threshold */
            {
               /* Dec Dec 3Frame */
               {
                  0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f
               },
            },
            /* BV Threshold */
            {
               /* Inc Dec 3Frame */
               {
                  0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f
               },
            },
            /* BV Threshold */
            {
               /* Dec Dec */
               {
                  0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f
               },
            },
            /* BV Threshold */
            {
               /* Dec Dec Noise */
               {
                  0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f
               },
            },
            /* BV Threshold */
            {
               /* Inc Dec */
               {
                  0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f
               },
            },
            /* BV Threshold */
            {
               /* Inc Dec Noise */
               {
                  0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f
               },
            },
            /* BV Threshold */
            {
               /* Flat Threshold */
               {
                  0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f
               }
            },
         },
         /* HW Thresholds */
         {

            /*********************************************************************/
            // Feature: Set of algorithm Thresholds to find peak len position.
            //
            // Variable name: flat_inc_thres.
            // Threshold for detect flat trend in INCREASE.
            // Default value: 1.008
            // Data range: 1 to 1.1
            // Effect: Lower value makes detection harder.
            //
            // Variable name: flat_dec_thres.
            // Threshold for detect flat trend in DECREASE.
            // Default value: 0.992
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: macro_thres.
            // Threshold for detect Macro Peak.
            // Default value: 0.99
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: drop_thres.
            // Threshold for large drop in invalid trend.
            // Default value: 0.75
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: hist_dec_dec_thres.
            // Histogram threshold to detect peak in decrease decrease trend.
            // Default value: 800
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: hist_inc_dec_thres.
            // Histogram threshold to detect peak in increase decrease trend.
            // Default value: 800
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: dec_dec_3frame.
            // Threshold in 3 frame decrease decrease peak.
            // Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}.
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: inc_dec_3frame.
            // Threshold in 3 frame increase decrease peak.
            // Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}.
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: dec_dec.
            // Threshold in decrease decrease peak.
            // Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}.
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: dec_dec_noise.
            // Threshold in decrease decrease peak with noise present.
            // Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}.
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: inc_dec.
            // Threshold in increase decrease peak.
            // Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}.
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            //
            // Variable name: inc_dec_noise.
            // Threshold in increase decrease peak with noise present.
            // Default value: {0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f, 0.97f}.
            // Data range: 0.5 to 1.
            // Effect: Lower value makes detection harder.
            /*********************************************************************/

            1.008000f, /* Flat Inc Threshold */
            0.992000f, /* Flat DeC Threshold */
            0.990000f, /* Macro Threshold */
            0.750000f, /* Drop Threshold */
            800, /* Hist Dec Dec Thresh */
            800, /* Hist Inc Dec Thresh */
            /* BV Threshold */
            {
               /* Dec Dec 3Frame */
               {
                  0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f
               },
            },
            /* BV Threshold */
            {
               /* Inc Dec 3Frame */
               {
                  0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f
               },
            },
            /* BV Threshold */
            {
               /* Dec Dec */
               {
                  0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f
               },
            },
            /* BV Threshold */
            {
               /* Dec Dec Noise */
               {
                  0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f
               },
            },
            /* BV Threshold */
            {
               /* Inc Dec */
               {
                  0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f
               },
            },
            /* BV Threshold */
            {
               /* Inc Dec Noise */
               {
                  0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f
               },
            },
            /* BV Threshold */
            {
               /* Flat Threshold */
               {
                  0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f, 0.970000f
               }
            },
         },
         /* BV Gain */
         {
            -30.000000f, -0.500000f, 0.500000f, 1.500000f, 2.500000f, 3.200000f, 6.000000f, 8.000000f
         },

         /*********************************************************************/
         // Feature: _single_optic_t contains all the optic information for setting up
         //    boundary for search regions in terms of lens position index measured.
         //
         // Variable name: CAF_far_end.
         // Far end search limit for CAF.
         // Default value: SINGLE_INF_LIMIT_IDX.
         // Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX.
         // Constraints: Logically place these indexes.
         //
         // Variable name: CAF_near_end.
         // Near end search limit for CAF.
         // Default value: SINGLE_NEAR_LIMIT_IDX.
         // Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX.
         // Constraints: Logically place these indexes.
         //
         // Variable name: TAF_far_end.
         // Far end search limit for TAF.
         // Default value: SINGLE_INF_LIMIT_IDX.
         // Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX.
         // Constraints: Logically place these indexes.
         //
         // Variable name: TAF_near_end.
         // Near end search limit for TAF.
         // Default value: SINGLE_NEAR_LIMIT_IDX.
         // Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX.
         // Constraints: Logically place these indexes.
         //
         // Variable name: srch_rgn_1.
         // Region boundary for non linear region for far end.
         // Default value: SINGLE_50CM_IDX.
         // Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX.
         // Constraints: Logically place these indexes.
         // Effect: Lower value makes detection harder.
         //
         // Variable name: srch_rgn_2.
         // Region boundary for linear region.
         // Default value: SINGLE_20CM_IDX.
         // Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX.
         // Constraints: Logically place these indexes.
         //
         // Variable name: srch_rgn_3.
         // Region boundary for non linear region for near end.
         // Default value: SINGLE_14CM_IDX.
         // Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX.
         // Constraints: Logically place these indexes.
         //
         // Variable name: fine_srch_rgn.
         // Boundary to use fine search from far end.
         // Default value: SINGLE_50CM_IDX.
         // Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX.
         // Constraints: Logically place these indexes.
         //
         // Variable name: far_zone.
         // Zone boundary to consider far end for starting location.
         // Default value: SINGLE_INF_LIMIT_IDX.
         // Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX.
         // Constraints: Logically place these indexes.
         //
         // Variable name: near_zone.
         // Zone boundary to consider near end for starting location.
         // Default value: SINGLE_10CM_IDX.
         // Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX.
         // Constraints: Logically place these indexes.
         //
         // Variable name: mid_zone.
         // Boundary to consider middle zone (middle of far and near).
         // Default value: SINGLE_60CM_IDX.
         // Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX.
         // Constraints: Logically place these indexes.
         //
         // Variable name: far_start_pos.
         // Default value: SINGLE_HYP_F_IDX.
         // Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX.
         // Constraints: Logically place these indexes.
         //
         // Variable name: near_start_pos.
         // Default value: SINGLE_10CM_IDX.
         // Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX.
         // Constraints: Logically place these indexes.
         //
         // Variable name: init_pos.
         // Initial search position for the first search.
         // Default value: SINGLE_HYP_F_IDX.
         // Data range: SINGLE_NEAR_LIMIT_IDX - SINGLE_INF_LIMIT_IDX.
         // Constraints: Logically place these indexes.
         /*********************************************************************/

         /* Optics */
         {
            10, /* CAF Far End */
            0, /* CAF Near End */
            10, /* TAF Far End */
            0, /* TAF Near End */
            7, /* Search Region 1 */
            4, /* Search Region 2 */
            3, /* Search Region 3 */
            7, /* Fine Search Region */
            10, /* Far Zone */
            2, /* Near Zone */
            8, /* Mid Zone */
            0, /* Far Start Position */
            0, /* Near Start Position */
            0, /* Initial Position */
         },
         /* FV Score Threshold */
         {

            /*********************************************************************/
            // Feature: Set of algorithm thresholds for single AF to
            //   find peak len position.
            //
            // Variable name: default_stats.
            // Index to specify default stats type
            //   Do not modify unless it causes issues.
            // Default value: 2.
            // Effect: Affects Stats selection.
            //
            // Variable name: score_ratio_showdif.
            // Score ratio for showing difference.
            //   Do not modify unless it causes issues.
            // Default values: {1.005f, 1.006f, 1.007f, 1.008f, 1.009f, 1.010f, 1.010f, 1.010f}
            // Effect: Affects Stats selection.
            //
            // Variable name: strict_noise.
            // Noise value for strictly noise.
            //   Do not modify unless it causes issues.
            // Default value: 0.03
            // Effect: Affects Stats selection.
            //
            // Variable name: normal_noise.
            // Noise value for normal noise.
            //   Do not modify unless it causes issues.
            // Default value: 0.1
            // Effect: Affects Stats selection.
            //
            // Variable name: light_noise.
            // Noise value for light noise.
            //   Do not modify unless it causes issues.
            // Default value: 0.15
            // Effect: Affects Stats selection.
            //
            // Variable name: strong_peak_thres.
            // Threshold for number of strong peak.
            //   Do not modify unless it causes issues.
            // Default value: 15
            // Effect: Affects Stats selection.
            //
            // Variable name: strong_inc_thres.
            // Threshold for number of strong increase.
            //   Do not modify unless it causes issues.
            // Default value: 5.
            // Effect: Affects Stats selection.
            //
            //
            // Variable name: strong_dec_thres.
            // Threshold for number of strong decrease.
            //   Do not modify unless it causes issues.
            // Default value: -5
            // Effect: Affects Stats selection.
            /*********************************************************************/

            2, /* Default Stats */
            /* BV Threshold */
            {
               /* Score Ratio Showdif */
               {
                  1.005000f, 1.006000f, 1.007000f, 1.008000f, 1.009000f, 1.010000f, 1.010000f, 1.010000f
               },
            },
            0.030000f, /* Strict Noise */
            0.100000f, /* Normal Noise */
            0.150000f, /* Light Noise */
            15, /* Strong Peak Threshold */
            5, /* Strong Inc Threshold */
            -5, /* Strong Dec Threshold */
         },
      },

      /*********************************************************************/
      // Feature: AF tuning parameters specific to AF shake resistant.
      //
      // Variable name: enable.
      // Enables and disables the feature.
      // Default value: 1.
      // Data range: 0 or 1.
      // Constraints: None.
      // Effect: Enables or disables the feature.
      //
      // Variable name: max_gain.
      // Used to define the maximum gain allowed when the gain is boosted
      //   under low light.
      // Default value: 4.
      // Data range: 4 to 10X max preview gain of exp table.
      // Constraints: This value will limit the max_af_tradeoff_ratio applied.
      // Effect: The bigger the value, the shorter the exposure time will be,
      //   increasing the noise level.
      //
      // Variable name: min_frame_luma.
      // The minimum frame luma allowed below which shake-resistant AF will
      //   be disabled.
      // Default value: 0 (to be tuned later).
      // Data range: 0 to luma_target.
      // Constraints: It should be greater than the value at which the frame
      //   is too dark for AF to work successfully.
      // Effect: The smaller this value is set, the darker lighting
      //   condition under which shake-resistant AF will be turned off.
      //
      // Variable name: tradeoff_ratio.
      // Used to define how much the exposure time should be reduced.
      // Default value: 4.
      // Data range: 1 to 4.
      // Constraints: The value should be greater than or equal to 1.
      // Effect: The bigger the value is, the smaller the adjusted exposure
      //   time would be.
      //
      // Variable name: toggle_frame_skip.
      // Sets number of frames to skip or drop from preview when this
      //   feature is called.
      // Default value: 2.
      // Data range: 0 to 4.
      // Constraints: None.
      // Effect:  Will appear as preview is frozen for amount of frames
      //   set whenever AF is started and finished.
      /*********************************************************************/

      /* Shake Resistant */
      {
         1, /* Enable */
         4.000000f, /* Max Gain */
         0, /* Min Frame Luma */
         4.000000f, /* Tradeoff Ratio */
         2, /* Toggle Frame Skip */
      },

      /*********************************************************************/
      // Feature: AF tuning parameters specific to AF
      //   motion sensor. Controls how each component affects AF scene
      //   change detection. Bigger the value less sensitive AF
      //   response is.
      //
      // Variable name: af_gyro_trigger.
      // Used to control how scene change should be detected for AF.
      // Default value: 0.0
      // Data range: -16000.0 to +16000.0
      // Constraints: None.
      // Effect: The bigger the value is, the less sensitive AF response to
      //   gyro output value.
      //
      // Variable name: af_accelerometer_trigger.
      // Used to control how scene change should be detected for AF.
      // Default value: 0.0
      // Data range: -16000.0 to +16000.0
      // Constraints: None.
      // Effect: The bigger the value is, the less sensitive AF response to
      //   gyro output value.
      //
      // Variable name: af_magnetometer_trigger.
      // Used to control how scene change should be detected for AF.
      // Default value: 0.0
      // Data range: -16000.0 to +16000.0
      // Constraints: None.
      // Effect: The bigger the value is, the less sensitive AF response to
      //   gyro output value.
      //
      // Variable name: af_dis_motion_vector_trigger
      // Used to control how scene change should be detected for AF.
      // Default value: 0.0
      // Data range: -16000.0 to +16000.0
      // Constraints: None.
      // Effect: The bigger the value is, the less sensitive AF response to
      //   gyro output value.
      /*********************************************************************/

      /* Motion Sensor */
      {
         0.000000f, /* Gyro Trigger */
         0.000000f, /* Accelerometer Trigger */
         0.000000f, /* Magnetometer Trigger */
         0.000000f, /* DIS Motion Vector Trigger */
      },

      /*********************************************************************/
      // Feature: AF tuning parameters specific to
      //   face-detection priority AF.
      //
      // Variable name: pos_change_th.
      // Controls when to reconfigure ROI when position has changed
      //   with respect to last stable ROI.
      // Default value: 3.
      // Data range: > 0.
      // Constraints: None.
      // Effect:  The bigger the value is, the less sensitive AF is to
      //   face position change
      ///
      // Variable name: pos_stable_th_hi.
      // Percentage difference between last and current position above
      //   this value indicates face is moving and not stable to trigger new search.
      // Default value: 0.5
      // Data range: 0 to 1.
      // Constraints: None.
      //
      // Variable name: pos_stable_th_low.
      // Position is deemed stable only after face position change
      //   is less than this threshold.
      // Default value: 0.4
      // Data range: 0 to 1.
      // Constraints: None.
      //
      // Variable name: size_change_th.
      // Threshold to check if size change has decreased enough to be
      //   considered stable.
      // Default value: 4.
      // Data range: > 0.
      // Constraints: None.
      ///
      // Variable name: old_new_size_diff_th.
      // Percentage difference between last biggest face and current
      //   biggest face to check if we should start focusing on new face.
      // Default value: 2.
      // Data range: > 0.
      // Constraints: None.
      ///
      // Variable name: stable_count_size.
      // Number of frames face size should remain stable to trigger
      //   new search.
      // Default value: 8.
      // Data range: > 0.
      // Constraints: None.
      //
      // Variable name: stable_count_pos.
      // Number of frames face position should remain stable to trigger
      //   new search.
      // Default value: 8.
      // Data range: > 0.
      // Constraints: None.
       //
      // Variable name: no_face_wait_th.
      // Number of frames to wait to reset default ROI once face disappears.
      // Default value: 3.
      // Data range: > 0.
      // Constraints: None.
      //
      // Variable name: fps_adjustment_th.
      // If current fps falls below this threshold we'll adjust stability counts.
      // Default value: 15.
      // Data range: > 0.
      // Constraints: None.
      /*********************************************************************/

      /* FD Priority CAF */
      {
         3.000000f, /* Pos Change Threshold */
         0.500000f, /* Pos Stable Threshold Hi */
         0.400000f, /* Pos Stable Threshold Low */
         4.000000f, /* Size Change Threshold */
         2.000000f, /* Old New Size Diff Threshold */
         8, /* Stable Count Size */
         8, /* Stable Count Pos */
         3, /* No Face Wait Threshold */
         15, /* FPS Adjustment Threshold */
      },
      /* Lens SAG Compensation */
      {

         /*********************************************************************/
         // Feature: AF tuning parameters to compensate for lens sag.
         //
         // Variable name: enable.
         // Enable/disable lens sag compensation.
         // Default value: 0.
         // Data range: 0 or 1.
         // Constraints: None.
         //
         // Variable name: f_dac.
         // DAC value with device facing Forward/Up/Down.
         // Default value: 0 (need to get from cal data from vendor).
         // Data range (caluclated): 0 to far end.
         // Constraints: None.
         //
         // Variable name: f_dist.
         // Object distance in m at which the dac values are noted.
         // Default value: 1.2 (need to get from cal data from vendor).
         // Data range:
         // Constraints: None.
         //
         // Variable name: trigger_threshold.
         // The value will be percentage of gravity vector.
         // Default value: 0.15 (need to get from cal data from vendor).
         // Data range: 0.01 to 1.
         // Constraints: None.
         /*********************************************************************/

         0, /* Enable */
         /* F DAC */
         {
            0, 0, 0
         },
         1.200000f, /* F Dist */
         0.150000f, /* Trigger Threshold */
      },
      /* Hybrid Autofocus Group */
      {

         /*********************************************************************/
         // Feature: Hybrid AF related tuning params.
         //
         // Variable name: enable.
         // Enable flag for HAF.
         // Default value: 0.
         // Data range: 0 or 1.
         // Constraints: None.
         //
         // Variable name: algo_enable[AF_HAF_ALGO_MAX].
         // Array of enable flags for each haf algorithm.
         // Default value: {0, 0, 0, 0}.
         // Data range: 0 or 1.
         // Constraints: None.
         //
         // Variable name: stats_enable[].
         // Array of usage enable flags for each stats.
         // Default value: {0, 0, 0}.
         // Data range: 0 or 1.
         // Constraints: None.
         //
         // Variable name: lens_sag_comp_enable.
         // Enable flag for len sag compensation.
         // Default value: 0.
         // Data range: 0 or 1.
         // Constraints: None.
         //
         // Variable name: hysteresis_comp_enable.
         // Enable flag for hysteresis compensation.
         // Default value: 0.
         // Data range: 0 or 1.
         // Constraints: None.
         //
         // Variable name: actuator_shift_comp.
         // Enable flag for scene monitor for DCIAF.
         // Default value: 0.
         // Constraints: None.
         //
         // Variable name: actuator_hysteresis_comp.
         // Enable flag for scene monitor for DCIAF.
         // Default value: 0.
         // Constraints: None.
         //
         // Variable name: actuator_sensitivity.
         // Enable flag for scene monitor for DCIAF.
         // Default value: 0.
         // Constraints: None.
         //
         // Variable name: stats_select.
         // Selection of stats for FV based search.
         // Default value: 0.
         // Data range: 0 to 2.
         // Constraints: None.
         //
         // Variable name: fine_srch_drop_thres.
         // FV drop ratio threshold to consider drop.
         // Default value: 0.7
         // Data range: 0.5 to 0.99
         // Constraints: None.
         //
         // Variable name: fine_step_size.
         // Fine search step size.
         // Default value: 8.
         // Constraints: Should be same as single search fine step.
         //
         // Variable name: max_move_step.
         // Max lens move for UX.
         // Default value: 100.
         // Data range: 0 to far end.
         // Constraints: None.
         //
         // Variable name: max_move_step_buffer.
         // Buffer step to avoid small lens movement.
         // Default value: 15.
         // Data range: 0 to far end.
         // Constraints: None.
         //
         // Variable name: base_frame_delay.
         // Base frane skip for HAF.
         // Default value: 0.
         // Data range: 0 to far end.
         // Constraints: None.
         /*********************************************************************/

         0, /* Enable */
         /* Algo Enable */
         {
            0, 0, 0, 0
         },
         /* Stats Consume Enable */
         {
            0, 0, 0
         },
         0, /* Lens Sag Comp Enable */
         0, /* Hysteresis Comp Enable */
         0, /* Actuator Shift Comp */
         0, /* Actuator Hysteresis Comp */
         0.000000f, /* Actuator Sensitivity */
         AF_FV_STATS_TYPE_HW_1, /* Stats Select */
         0.700000f, /* Fine Search Drop Thresh */
         8, /* Fine Step Size */
         100, /* Max Move Step */
         15, /* Max Move Step Buffer */
         0, /* Base Frame Delay */
         /* PDAF */
         {

            /*********************************************************************/
            // Feature: Defocus ROI size and location.
            //
            // Variable name: num_entries.
            // Description: number of PD ROIs.
            // Default value: 1
            // Data range: 1 to 20.
            // Constraints: None
            // Effect: Allows specification of multiple defocus ROIs.
            //            PDAF allows multi-window implementation based on
            //            examination of defocus values obtained from multiple ROIs.
            //
            // Variable name: roi_loc_y.
            // Y location of defocus ROI inside MxN grid.
            // Default value: 2 for PDAF Type 1 PD with full frame grid configured to 6x8
            //                       0 for PDAF Type 2 and PDAF Type 3 (i.e. no XY offset)
            // Data range: 0 to 5.
            // Constraints: None
            // Effect: Specifies the y location of defocus ROI.
            //
            // Variable name: roi_loc_x.
            // X location of defocus ROI inside MxN grid,
            // Default value: 3 for PDAF Type 1 with full frame grid configured to 6x8
            //                       0 for PDAF Type 2 and PDAF Type 3 (i.e. no XY offset)
            // Data range: 0 to 5.
            // Constraints: None.
            // Effect: specifies the x location of defocus ROI.
            //
            // Variable name: roi_num_rows.
            // Height of PD ROI in terms of grid count.
            // Default value: 2.
            // Data range: 1 to 5.
            // Constraints: Less than or equal to the number of grid rows available.
            // Effect: increases/decreases the height of defocus ROI.
            //
            // Variable name: roi_num_cols.
            // Number of columns.
            // Default value: 2.
            // Data range: 1 to 5.
            // Constraints: Less than or equal to the number of grid columns available.
            // Effect: Increases/decreases the width of defocus ROI.
            /*********************************************************************/

            /* ROI */
            {
               1, /* Number of Entries */
               /* Config */
               {
                  /* Config 0 */
                  {
                     2, /* Y */
                     3, /* X */
                     2, /* Num Rows */
                     2, /* Num Cols */
                  },
                  /* Config 1 */
                  {
                     0, /* Y */
                     0, /* X */
                     2, /* Num Rows */
                     2, /* Num Cols */
                  },
                  /* Config 2 */
                  {
                     0, /* Y */
                     0, /* X */
                     2, /* Num Rows */
                     2, /* Num Cols */
                  },
                  /* Config 3 */
                  {
                     0, /* Y */
                     0, /* X */
                     2, /* Num Rows */
                     2, /* Num Cols */
                  },
                  /* Config 4 */
                  {
                     0, /* Y */
                     0, /* X */
                     2, /* Num Rows */
                     2, /* Num Cols */
                  },
                  /* Config 5 */
                  {
                     0, /* Y */
                     0, /* X */
                     2, /* Num Rows */
                     2, /* Num Cols */
                  },
                  /* Config 6 */
                  {
                     0, /* Y */
                     0, /* X */
                     2, /* Num Rows */
                     2, /* Num Cols */
                  },
                  /* Config 7 */
                  {
                     0, /* Y */
                     0, /* X */
                     2, /* Num Rows */
                     2, /* Num Cols */
                  },
                  /* Config 8 */
                  {
                     0, /* Y */
                     0, /* X */
                     2, /* Num Rows */
                     2, /* Num Cols */
                  },
                  /* Config 9 */
                  {
                     0, /* Y */
                     0, /* X */
                     2, /* Num Rows */
                     2, /* Num Cols */
                  },
               },
            },

            /*********************************************************************/
            // Feature: Focus table.
            //
            // Variable name: num_entries.
            // Number of knee points in focus table.
            // Default value: 3
            // Data range:
            // Constraints: None
            // Effect: Specifies the number of knee points in focus table.
            //
            // Variable name: entries[].
            // Contains the location of knee points in PD focus table.
            // Effect: Knee points of PD focus table that is linearly interpolated.
            //
            // Table entries as follows:
            //
            //   Variable name: Defocus.
            //   Defocus threshold of focus percent (%) table.
            //   Default values: {10, 20, 30}.
            //   Data range: 0 to 500.
            //   Constraints: None.
            //   Effect: Changes defocus threshold (x-axis) of focus percent (%) table.
            //
            //   Variable name: move_pcnt.
            //   Focus percent threshold of focus percent (%) table.
            //   Default values: {0.75f. 0.67f, 0.50f}.
            //   Data range: 0 to 1.
            //   Constraints: None.
            //   Effect: Changes focus percentage (y-axis) of focus percent (%) table.
            //           Increase value to cause PDAF to focus faster, but higher occurence of focus overshoot.
            //           Decrease value to cause PDAF to focus slower, but lower occurence of focus overshoot.
            /*********************************************************************/

            /* Focus Table */
            {
               3, /* Number of Entries */
               /* Entries */
               {
                  /* Entry 0 */
                  {
                     10, /* Defocus */
                     0.750000f, /* Move Percent */
                  },
                  /* Entry 1 */
                  {
                     20, /* Defocus */
                     0.670000f, /* Move Percent */
                  },
                  /* Entry 2 */
                  {
                     30, /* Defocus */
                     0.500000f, /* Move Percent */
                  },
                  /* Entry 3 */
                  {
                     0, /* Defocus */
                     0.000000f, /* Move Percent */
                  },
                  /* Entry 4 */
                  {
                     0, /* Defocus */
                     0.000000f, /* Move Percent */
                  },
                  /* Entry 5 */
                  {
                     0, /* Defocus */
                     0.000000f, /* Move Percent */
                  },
                  /* Entry 6 */
                  {
                     0, /* Defocus */
                     0.000000f, /* Move Percent */
                  },
                  /* Entry 7 */
                  {
                     0, /* Defocus */
                     0.000000f, /* Move Percent */
                  },
                  /* Entry 8 */
                  {
                     0, /* Defocus */
                     0.000000f, /* Move Percent */
                  },
                  /* Entry 9 */
                  {
                     0, /* Defocus */
                     0.000000f, /* Move Percent */
                  },
                  /* Entry 10 */
                  {
                     0, /* Defocus */
                     0.000000f, /* Move Percent */
                  },
                  /* Entry 11 */
                  {
                     0, /* Defocus */
                     0.000000f, /* Move Percent */
                  },
                  /* Entry 12 */
                  {
                     0, /* Defocus */
                     0.000000f, /* Move Percent */
                  },
                  /* Entry 13 */
                  {
                     0, /* Defocus */
                     0.000000f, /* Move Percent */
                  },
                  /* Entry 14 */
                  {
                     0, /* Defocus */
                     0.000000f, /* Move Percent */
                  },
                  /* Entry 15 */
                  {
                     0, /* Defocus */
                     0.000000f, /* Move Percent */
                  },
                  /* Entry 16 */
                  {
                     0, /* Defocus */
                     0.000000f, /* Move Percent */
                  },
                  /* Entry 17 */
                  {
                     0, /* Defocus */
                     0.000000f, /* Move Percent */
                  },
                  /* Entry 18 */
                  {
                     0, /* Defocus */
                     0.000000f, /* Move Percent */
                  },
                  /* Entry 19 */
                  {
                     0, /* Defocus */
                     0.000000f, /* Move Percent */
                  },
               },
            },

            /*********************************************************************/
            // Feature: AF Noise table.
            //
            // Variable name: num_entries.
            // Description: number of knee points in noise table
            // 3A version:
            // Default value: 3
            // Data range: 0~30
            // Constraints: None
            // Effect: specifies the number of knee points in noise table
            //
            // Variable name: entries[].
            // Contains the location of knee points in noise table.
            //   Noise size vs noise_gain.
            // Effect: Knee points of noise table that is linearly interpolated.
            //
            // Table entries as follows:
            //
            //   Variable name: noise_gain.
            //   Noise level in dB (computed from scene brightness, defocus ROI size, lens shading).
            //   Default values: {12.0f, 24.0f, 36.0f}.
            //   Data range: 0 to 40.
            //   Constraints: None.
            //   Effect: Changes noise thresholds (x-axis), in dB, of noise table.
            //
            //   Variable name: multiplier.
            //   Fine scan range multipler.
            //   Default values: {1.0f, 4.0f, 16.0f}.
            //   Data range: 1 to 30.
            //   Constraints: None.
            //   Effect: Changes multipler (y-axis) of noise table which determines fine scan range.
            /*********************************************************************/

            /* Noise Table */
            {
               3, /* Number of Entries */
               /* Entries */
               {
                  /* Entry 0 */
                  {
                     12.000000f, /* Noise Gain */
                     1.000000f, /* Multiplier */
                  },
                  /* Entry 1 */
                  {
                     24.000000f, /* Noise Gain */
                     4.000000f, /* Multiplier */
                  },
                  /* Entry 2 */
                  {
                     36.000000f, /* Noise Gain */
                     16.000000f, /* Multiplier */
                  },
                  /* Entry 3 */
                  {
                     0.000000f, /* Noise Gain */
                     0.000000f, /* Multiplier */
                  },
                  /* Entry 4 */
                  {
                     0.000000f, /* Noise Gain */
                     1.000000f, /* Multiplier */
                  },
                  /* Entry 5 */
                  {
                     0.000000f, /* Noise Gain */
                     1.000000f, /* Multiplier */
                  },
                  /* Entry 6 */
                  {
                     0.000000f, /* Noise Gain */
                     1.000000f, /* Multiplier */
                  },
                  /* Entry 7 */
                  {
                     0.000000f, /* Noise Gain */
                     1.000000f, /* Multiplier */
                  },
                  /* Entry 8 */
                  {
                     0.000000f, /* Noise Gain */
                     1.000000f, /* Multiplier */
                  },
                  /* Entry 9 */
                  {
                     0.000000f, /* Noise Gain */
                     1.000000f, /* Multiplier */
                  },
                  /* Entry 10 */
                  {
                     0.000000f, /* Noise Gain */
                     1.000000f, /* Multiplier */
                  },
                  /* Entry 11 */
                  {
                     0.000000f, /* Noise Gain */
                     1.000000f, /* Multiplier */
                  },
                  /* Entry 12 */
                  {
                     0.000000f, /* Noise Gain */
                     1.000000f, /* Multiplier */
                  },
                  /* Entry 13 */
                  {
                     0.000000f, /* Noise Gain */
                     1.000000f, /* Multiplier */
                  },
                  /* Entry 14 */
                  {
                     0.000000f, /* Noise Gain */
                     1.000000f, /* Multiplier */
                  },
                  /* Entry 15 */
                  {
                     0.000000f, /* Noise Gain */
                     1.000000f, /* Multiplier */
                  },
                  /* Entry 16 */
                  {
                     0.000000f, /* Noise Gain */
                     1.000000f, /* Multiplier */
                  },
                  /* Entry 17 */
                  {
                     0.000000f, /* Noise Gain */
                     1.000000f, /* Multiplier */
                  },
                  /* Entry 18 */
                  {
                     0.000000f, /* Noise Gain */
                     1.000000f, /* Multiplier */
                  },
                  /* Entry 19 */
                  {
                     0.000000f, /* Noise Gain */
                     1.000000f, /* Multiplier */
                  },
               },
            },

            /*********************************************************************/
            // Feature: Defocus (PD) confidence table.
            //
            // Variable name: num_entries.
            // Number of knee points in defocus (PD) confidence table.
            // Default value: 5.
            // Data range: 0 to 30.
            // Constraints: None.
            // Effect: Specifies the number of knee points in defocus (PD) confidence table.
            //
            // Variable name: entries[].
            // Contains the location of knee points in PD confidence table.
            // Effect: Knee points of PD confidence table that is linearly interpolated.
            //
            // Table entries as follows:
            //
            //   Variable name: noise_gain.
            //   Noise level in dB (computed from scene brightness, PD ROI size, lens shading).
            //   Default values: {-24.5f, -23.0f, 12.0f, 24.0f, 36.0f}.
            //   Data range: 0 to 40.
            //   Constraints: None.
            //   Effect: Changes noise thresholds (x-axis) of PD noise table.
            //
            //   Variable name: min_conf.
            //   Minimum confidence level.
            //   Default values: {300, 200, 150, 150, 150}.
            //   Data range: 0 to 1000.
            //   Constraints: None.
            //   Effect: Changes the minimum confidence thresholds.
            /*********************************************************************/

            /* Confidence Table */
            {
               5, /* Number of Entries */
               /* Entries */
               {
                  /* Entry 0 */
                  {
                     -24.500000f, /* Noise Gain */
                     300, /* Minimum Confidence */
                  },
                  /* Entry 1 */
                  {
                     -23.000000f, /* Noise Gain */
                     200, /* Minimum Confidence */
                  },
                  /* Entry 2 */
                  {
                     12.000000f, /* Noise Gain */
                     150, /* Minimum Confidence */
                  },
                  /* Entry 3 */
                  {
                     24.000000f, /* Noise Gain */
                     150, /* Minimum Confidence */
                  },
                  /* Entry 4 */
                  {
                     36.000000f, /* Noise Gain */
                     150, /* Minimum Confidence */
                  },
                  /* Entry 5 */
                  {
                     0.000000f, /* Noise Gain */
                     1, /* Minimum Confidence */
                  },
                  /* Entry 6 */
                  {
                     0.000000f, /* Noise Gain */
                     1, /* Minimum Confidence */
                  },
                  /* Entry 7 */
                  {
                     0.000000f, /* Noise Gain */
                     1, /* Minimum Confidence */
                  },
                  /* Entry 8 */
                  {
                     0.000000f, /* Noise Gain */
                     1, /* Minimum Confidence */
                  },
                  /* Entry 9 */
                  {
                     0.000000f, /* Noise Gain */
                     1, /* Minimum Confidence */
                  },
                  /* Entry 10 */
                  {
                     0.000000f, /* Noise Gain */
                     1, /* Minimum Confidence */
                  },
                  /* Entry 11 */
                  {
                     0.000000f, /* Noise Gain */
                     1, /* Minimum Confidence */
                  },
                  /* Entry 12 */
                  {
                     0.000000f, /* Noise Gain */
                     1, /* Minimum Confidence */
                  },
                  /* Entry 13 */
                  {
                     0.000000f, /* Noise Gain */
                     1, /* Minimum Confidence */
                  },
                  /* Entry 14 */
                  {
                     0.000000f, /* Noise Gain */
                     1, /* Minimum Confidence */
                  },
                  /* Entry 15 */
                  {
                     0.000000f, /* Noise Gain */
                     1, /* Minimum Confidence */
                  },
                  /* Entry 16 */
                  {
                     0.000000f, /* Noise Gain */
                     1, /* Minimum Confidence */
                  },
                  /* Entry 17 */
                  {
                     0.000000f, /* Noise Gain */
                     1, /* Minimum Confidence */
                  },
                  /* Entry 18 */
                  {
                     0.000000f, /* Noise Gain */
                     1, /* Minimum Confidence */
                  },
                  /* Entry 19 */
                  {
                     0.000000f, /* Noise Gain */
                     1, /* Minimum Confidence */
                  },
               },
            },

            /*********************************************************************/
            // Feature: PD stable table array.
            //
            // Variable name: num_entries.
            // Number of knee points in minimum PD stability table.
            // Default value: 3
            // Data range:
            // Constraints: None.
            // Effect: Specifies the number of knee points in PD stability table.
            //
            // Variable name: entries[].
            // Effect: Knee points of PD stability table that is linearly interpolated.
            //
            // Table entries as follows:
            //
            //   Variable name: fps.
            //   Frames-per-second threshold of PD stability condition table.
            //   Default values: {10, 14, 24}.
            //   Data range: 0 to 120.
            //   Constraints: None.
            //   Effect: changes fps thresholds (x-axis) of minimum PD stable condition table.
            //
            //   Variable name: min_stable_cnt.
            //   Description: minimum frame count for PD stability condition table.
            //   Default value: {0, 1, 2}.
            //   Data range: 0 to 30.
            //   Constraints: None.
            //   Effect: Changes min frame count (y-axis) of minimum PD stable condition.
            //           Increasing this value causes PDAF to be triggered only after a
            //           longer PD stability check.
            /*********************************************************************/

            /* Stable Table */
            {
               3, /* Number of Entries */
               /* Entries */
               {
                  /* Entry 0 */
                  {
                     10, /* FPS */
                     0, /* Minimum Stable Count */
                  },
                  /* Entry 1 */
                  {
                     14, /* FPS */
                     1, /* Minimum Stable Count */
                  },
                  /* Entry 2 */
                  {
                     24, /* FPS */
                     2, /* Minimum Stable Count */
                  },
                  /* Entry 3 */
                  {
                     0, /* FPS */
                     0, /* Minimum Stable Count */
                  },
                  /* Entry 4 */
                  {
                     0, /* FPS */
                     0, /* Minimum Stable Count */
                  },
                  /* Entry 5 */
                  {
                     0, /* FPS */
                     0, /* Minimum Stable Count */
                  },
                  /* Entry 6 */
                  {
                     0, /* FPS */
                     0, /* Minimum Stable Count */
                  },
                  /* Entry 7 */
                  {
                     0, /* FPS */
                     0, /* Minimum Stable Count */
                  },
                  /* Entry 8 */
                  {
                     0, /* FPS */
                     0, /* Minimum Stable Count */
                  },
                  /* Entry 9 */
                  {
                     0, /* FPS */
                     0, /* Minimum Stable Count */
                  },
                  /* Entry 10 */
                  {
                     0, /* FPS */
                     0, /* Minimum Stable Count */
                  },
                  /* Entry 11 */
                  {
                     0, /* FPS */
                     0, /* Minimum Stable Count */
                  },
                  /* Entry 12 */
                  {
                     0, /* FPS */
                     0, /* Minimum Stable Count */
                  },
                  /* Entry 13 */
                  {
                     0, /* FPS */
                     0, /* Minimum Stable Count */
                  },
                  /* Entry 14 */
                  {
                     0, /* FPS */
                     0, /* Minimum Stable Count */
                  },
                  /* Entry 15 */
                  {
                     0, /* FPS */
                     0, /* Minimum Stable Count */
                  },
                  /* Entry 16 */
                  {
                     0, /* FPS */
                     0, /* Minimum Stable Count */
                  },
                  /* Entry 17 */
                  {
                     0, /* FPS */
                     0, /* Minimum Stable Count */
                  },
                  /* Entry 18 */
                  {
                     0, /* FPS */
                     0, /* Minimum Stable Count */
                  },
                  /* Entry 19 */
                  {
                     0, /* FPS */
                     0, /* Minimum Stable Count */
                  },
               },
            },
            /* Focus Scan */
            {

               /*********************************************************************/
               // Feature: PDAF focus scan configuration.
               //
               // Variable name: focus_conv_frame_skip.
               // Number of frame skip to use during focus convergence.
               // Default value: 1.
               // Data range: 1 to 5.
               // Constraints: None.
               // Effect: Increasing frame skip if PD library takes longer time to compute
               //         will slow PDAF but will ensure sufficient time for PD stat to arrive AF.
               //
               // Variable name: enable_fine_scan.
               // Enable/disable fine scan in PDAF.
               // Default value: 1.
               // Data range: 0 or 1.
               // Constraints: None.
               // Effect: Enable or disable fine scan used in PDAF.
               //
               // Variable name: min_fine_scan_range.
               // Specifies the minimum fine scan range used in PDAF.
               // Default value: 1.
               // Data range: 1 to 3.
               // Constraints: None.
               // Effect: This should be usually kept at 1. Change noise table to modify
               //         fine scan range for different scene brightness.
               //
               // Variable name: fine_scan_step_size.
               // Fine scan step size in logical lens position (1 step = 1 um).
               // Default value: 4.
               // Data range: 1 to 50.
               // Constraints: None.
               // Effect: increasing fine scan step size increases the lens position range
               //         covered by fine scan.
               //
               // Variable name: focus_done_threshold.
               // Defocus threshold (in logical lens pos) that defines when PDAF convergence should end.
               // Default value: 6.
               // Data range: 0 to 50.
               // Constraints: None.
               // Effect: increasing focus done threshold will cause PDAF convergence to end faster
               //         yet potentially with a higher separation between the convergence end position
               //         and the start of fine scan.
               /*********************************************************************/

               1, /* Conv Frame Skip */
               1, /* Enable Fine Scan */
               1, /* Min Fine Scane Range */
               4, /* Fine Scan Step Size */
               6, /* Focus Done Treshold */
            },
            /* Monitor */
            {

               /*********************************************************************/
               // Feature: PD monitor configuration.
               //
               // Variable name: wait_after_focus_cnt.
               // Default value: 2.
               // Data range: 0 to 50.
               // Constraints: None.
               //
               // Variable name: wait_conf_recover_cnt.
               // Number of frames to wait for depth estimate confidence to recover from a temporary drop
               //   (e.g. sudden depth change).
               // Default value: 4.
               // Data range: 0 to 10.
               // Constraints: None.
               // Effect: Increasing this count allows PDAF to wait longer before triggering contrast.
               //         Decreasing this count causes contrast AF to be triggered more quickly.
               //
               // Variable name: defocused_threshold.
               // PDAF focus convergence terminates when the absolute value of lens defocus is within the defocus
               //  threshold.
               // Default value: 10.
               // Data range: 0 to 50.
               // Constraints: None.
               // Effect: Decreasing this threshold increases the sensitivity of PDAF to react to depth change, but may cause
               //         focus convergence to be triggered too frequently.
               //         Increasing this threshold decreases the sensitivity of PDAF to react to depth change, helping
               //         prevent too frequent lens position adjustment.
               //
               // Variable name: depth_stable_threshold
               // Default value: 1.5f
               // Data range: 0 to 50.
               // Constraints: None.
               /*********************************************************************/

               2, /* Wait After Focus Count */
               4, /* Conf Recover Count */
               10.000000f, /* Defocused Threshold */
               1.500000f, /* Depth Stable Threshold */
            },
            /* Reserved */
            {
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
            }
         },
         /* TOF */
         {

            /*********************************************************************/
            // Feature: TOF algorithm tuning params.
            //
            // Variable name: lens_laser_dist_comp_mm.
            // Distance compensation between lens and laser in mm.
            // Default value: 0.
            // Constraints: None.
            //
            //
            // Variable name: wait_frame_limt.
            // Maximum number of valid frames to wait.
            // Default value: 3.
            // Constraints: None
            //
            // Variable name: max_tof_srch_cnt.
            // Maximum search count.
            // 3A version:
            // Default value: 3.
            // Constraints: None.
            //
            // Variable name: jump_to_start_limit.
            // Limit for jumping to start position.
            // Default value: 50.
            // Constraints: None.
            //
            // Variable name: num_near_steps.
            // Number of steps at near end.
            // Default value: 3.
            // Constraints: None.
            //
            // Variable name: num_far_steps.
            // Description: Number of steps at far end.
            // Default value: 3.
            // Constraints: None.
            //
            // Variable name: tof_step_size.
            // Lens move step size.
            // Default value: 20.
            // Constraints: Finescan_normal_light[5]* step_index_per_um.
            //
            // Variable name: normal_light_cnt.
            // Normal light count.
            // Default value: 3.
            // Constraints: None.
            //
            // Variable name: lowlight_cnt.
            // Low light count.
            // Default value: 3.
            // Constraints: None.
            //
            // Variable name: num_monitor_samples.
            // Number of sample needed for scene monitor.
            // Default value: 5.
            // Constraints: None.
            //
            // Variable name: scene_change_distance_thres.
            //
            // Default value:
            // Constraints:
            //
            // Variable name: scene_change_lens_pos_thres.
            //
            // Default value:
            // Constraints:
            //
            // Variable name: far_scene_coarse_srch_enable.
            // Enable flag for coarse srch for far scenes.
            // Default value: 0.
            // Constraints: None.
            //
            // Variable name: enable.
            //
            // Default value:
            // Constraints:
            //
            // Variable name: outdoor_lux_idx.
            // Lux index for outdoor.
            // Default value: 183.
            // Constraints: None.
            //
            // Variable name: reserve.
            // Description: Reserved parameters
            // Default value: 0.
            // Constraints: None.
            /*********************************************************************/

            0, /* Lens Laser Dist Comp MM */
            3, /* Wait Frame Limit */
            3, /* Max TOF Search Count */
            50, /* Jump to Start Limit */
            3, /* Num Near Steps */
            3, /* Num Far Steps */
            20, /* TOF Step Size */
            3, /* Normal Light Count */
            3, /* Lowlight Count */
            5, /* Num Monitor Samples */
            20, /* Scene Change Distance Threshold */
            10, /* Scene Change Lens Position Threshold */
            0, /* Far Scene Course Search Enable */
            0, /* Enable */
            183, /* Outdoor Lux Index */
            /* Reserved */
            {
               1.000000f, 1.000000f, 3.000000f, 3.000000f, 8.000000f, 0.000000f, 3.000000f, 5.000000f, 0.000000f, 0.000000f,
               0.520000f, 20.00000f, 40.00000f, 60.00000f, 80.00000f, 100.0000f, 30.00000f, 1.000000f, 3.000000f, 30.00000f,
               2.000000f, 30.00000f, 2.000000f, 25.00000f, 20.00000f, 50.00000f, 40.00000f, 70.00000f, 200.0000f, 350.0000f,
               500.0000f, 765.0000f, 148.0000f, 4.000000f, 2.000000f, 50.00000f, 8.000000f, 3.000000f, 1.000000f, 0.000000f,
               3.000000f, 80.00000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
            }
         },
         /* DCIAF */
         {

            /*********************************************************************/
            // Feature: DCIAF algorithm tuning params.
            //
            // Variable name: monitor_enable.
            // Enable flag for scene monitor for DCIAF.
            // Default value: 0.
            // Data range: 0 or 1.
            // Constraints: None.
            // Effect: Runs distance estimation library in continuous mode for scene monitor.
            //
            // Variable name: monitor_freq.
            // Max rate of distance estimation in monitor mode.
            // Default value: 30.
            // Data range: 1 to 30.
            // Constraints: None.
            // Effect: Distance stats would arrive at or below this rate in monitor.
            //
            // Variable name: search_freq.
            // Max rate of distance estimation in AF search mode.
            // Default value: 30.
            // Data range: 1 to 30.
            // Constraints: None.
            // Effect: Distance stats would arrive at or below this rate in search.
            //
            // Variable name: baseline_mm.
            // Physical distance(mm) between optical centers of dual cameras.
            // Default value: 20.
            // Constraints: None.
            //
            // Variable name: aux_direction.
            // Physical location of aux camera wrt Main camera
            // Default value: AF_CAM_ORIENT_LEFT.
            // Data range: 0 - AF_CAM_ORIENT_MAX.
            // Constraints: None.
            // Effect: Ensures accurate distance estimation.
            //
            // Variable name: macro_est_limit_cm.
            // Closest distance in cm estimated by depth service.
            // Default value: 10.
            // Data range: 10.
            // Constraints: None.
            // Effect: Distance may not be estimated for objects closer than this value.
            //
            // Variable name: alignment_check_enable.
            // Enable alignment check in depth service.
            // Default value: 0.
            // Data range: 0 or 1.
            // Constraints: None.
            // Effect: Enables alignment check.
            //
            // Variable name: jump_to_start_limit.
            // Largest lens position jump.
            // Default value: 400.
            // Data range: 10 to 1024.
            // Constraints: None.
            // Effect: Smaller steps would give smooth lens move.
            //   Larger steps would move lens to destination in one step.
            //
            // Variable name: num_near_steps.
            // Number of steps at near end.
            // Default value: 3.
            // Data range: 0 to 10.
            // Constraints: None.
            // Effect: Affects near range of fine search.
            //
            // Variable name: num_far_steps.
            // Number of steps at far end.
            // Default value: 3.
            // Data range: 0 to 10.
            // Constraints: None.
            // Effect: Affects far range of fine search.
            //
            // Variable name: dciaf_step_size.
            // Step size to determine range of fine search.
            // Default value: 10.
            // Data range: 1 to 20.
            // Effect: Affects range of fine search.
            //
            // Variable name: motion_data_use_enable.
            // Flag for using gyro data for trigger.
            // Default value: 1.
            // Data range: 0 or 1.
            // Constraints: None.
            // Effect: Uses gyro info for scene change and panning stable.
            //
            // Variable name: scene_change_lens_pos_th.
            // Lens position delta threshold for scene change detection.
            // Default value: 20.
            // Data range: 10 to 40.
            // Constraints: None.
            //
            // Variable name: panning_stable_lens_pos_th.
            // Lens position delta threshold for scene stable.
            // Default value: 15.
            // Data range: 5 to 20.
            // Constraints: None.
            //
            // Variable name: panning_stable_duration_ms_bright.
            // Time duration to consider scene stable in bright light in ms.
            // Default value: 132.
            // Data range: 66 to 198.
            // Constraints: None.
            // Effect: Trigger speed and behavior in bright light.
            //
            // Variable name: panning_stable_duration_ms_low.
            // Time duration to consider scene stable in low light in ms.
            // Default value: 200.
            // Data range: 100 to 400.
            // Constraints: None.
            // Effect: Trigger speed and behavior in low light.
            //
            // Variable name: reserve[].
            // Description: Reserved parameters.
            // Default value: 0
            // Constraints: None
            /*********************************************************************/

            0, /* Monitor Enable */
            30, /* Monitor Frequency */
            30, /* Search Frequency */
            20, /* Baseline MM */
            AF_CAM_ORIENT_LEFT, /* Aux Direction */
            10, /* Macro Est Limit CM */
            0, /* Alignment Check Enable */
            400, /* Jump to Start Limit */
            3, /* Num Near Steps */
            3, /* Num Far Steps */
            10, /* DCIAF Step Size */
            1, /* Motion Data Use Enable */
            20, /* Scene Change Lens Pos Th */
            15, /* Panning Stable Lens Pos Th */
            132, /* Panning Stable Duration MS Bright */
            200, /* Panning Stable Duration MS Low */
            /* Reserved */
            {
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
               0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
            }
         },
         /* Reserved */
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         }
      },
      /* Vertical Blanking Time Injection */
      {

         /*********************************************************************/
         // Feature: Vertical Blanking Time injection feature parameters.
         //
         // Variable name: enable.
         // Enable flag for VBT injection.
         // Default value: 0.
         // Data range: 0 or 1.
         // Constraints: None.
         //
         // Variable name: comp_time.
         // Compensation time for actuator movement.
         //   Usually this is equal to actuator settle time.
         // Default value: 8.00f (ms).
         // Data range: 0.0 to 15.00f
         // Constraints: None.
         // Effect: Increasing comp_time will lower over fps, proportional to the frame time.
         //
         // Variable name: contamination_pcnt_allow.
         // Description: Percentage of actuator stability time allowed.
         //              This is with respect to the Exposure time.
         // Default value: 0.10 (10%)
         // Data range: 0.00f or 0.99
         // Constraints: None.
         // Effect:
         /*********************************************************************/

         0, /* Enable */
         8.000000f, /* Compensation Time */
         0.100000f, /* Contamination Percent Allowed */
      },

      /******************************************************************************/
      // af_tuning_smooth_lens_convergence: Smooth lens convergence feature parameters
      //
      // Variable name: enable
      // Description: enable flag for smooth lens convergence
      // 3A version:
      // Default value: 0
      // Data range: 0 or 1
      // Constraints: None
      // Effect:
      //
      // Variable name: fudge_factor
      // Description: Compensation factor inorder to get the
      //              right crop factor
      // 3A version:
      // Default value: 1
      // Data range: [0 1]
      // Constraints: None
      //
      // Variable name: anchor_lens_pos1
      // Description: Lens position corresponding to the anchor_distance_mm_1
      //              Need to specify the lens position, can refer to Contrast AF
      //              tuning settings from single_index_t
      // 3A version:
      // Default value: lens position specified at SINGLE_20CM_IDX in single_index_t
      // Data range: [position_near_end position_far_end]
      //
      // Variable name: anchor_lens_pos2
      // Description: Lens position corresponding to the anchor_distance_mm_2
      //              Need to specify the lens position, can refer to Contrast AF
      //              tuning settings from single_index_t
      // 3A version:
      // Default value: lens position specified at SINGLE_HYP_F_IDX in single_index_t
      // Data range: [position_near_end position_far_end]
      //
      // Variable name: anchor_distance_mm_1
      // Description: Physical distance in millimeters at which anchor_lens_pos1
      //              corresponds to.
      // 3A version:
      // Default value: 200
      // Data range: [0 3000]
      //
      // Variable name: anchor_distance_mm_2
      // Description: Physical distance in millimeters at which anchor_lens_pos2
      //              corresponds to.
      // 3A version:
      // Default value: 600
      // Data range: [0 3000]
      //
      // Variable name: focus_converge_step_size_bright_light
      // Description: Step size for focus converge in bright light
      // 3A version:
      // Default value: 8
      // Data range: [0 50]
      //
      // Variable name: fine_search_step_size_bright_light
      // Description: Step size for fine search in bright light
      // 3A version:
      // Default value: 6
      // Data range: [0 50]
      //
      // Variable name: focus_converge_step_size_low_light
      // Description: Step size for focus converge in low light
      // 3A version:
      // Default value: 9
      // Data range: [0 50]
      //
      // Variable name: fine_search_step_size_low_light
      // Description: Step size for fine search in low light
      // 3A version:
      // Default value: 7
      // Data range: [0 50]
      /******************************************************************************/

      /* AF Fovc */
      {
         0, /* AF FOVC Enable */
         1.000000f, /* AF FOVC Fudge Factor */
         100, /* AF FOVC Anchor Lens Pos1 */
         250, /* AF FOVC Anchor Lens Pos2 */
         200, /* AF FOVC Anchor Distance MM1 */
         600, /* AF FOVC Anchor Distance MM2 */
         8, /* AF FOVC Focus Conv Step Size Bright Light */
         6, /* AF FOVC Fine Search Step Size Bright Light */
         9, /* AF FOVC Focus Conv Step Size Low Light */
         7, /* AF FOVC Fine Search Step Size Low Light */
         /* AF FOVC Reserve */
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
      },

      /******************************************************************************/
      // af_tuning_multiwindow_t: AF tuning parameters specific to
      //  Multiwindow feature
      //
      // Variable name: enable
      // Description: enable flag for multiwindow feature
      // 3A version:
      // Default value: 0
      // Data range: 0 or 1
      // Constraints: None
      // Effect:
      //
      // Variable name: h_clip_ratio_normal_light
      // AF window horizontal size in terms of ratio to the whole image. For the
      // same example above, Horizontal Clip Ratio is 500/1000=0.5.
      // 3A version:
      // Default value: 0.5
      // Data range: 0 - 1
      // Constraints:
      // Effect:
      //
      // Variable name: v_clip_ratio_normal_light
      // AF window vertical size in terms of ratio to the whole image. For the
      // same example above, Vertical Clip Ratio is 500/1000=0.5.
      // 3A version:
      // Default value: 0.5
      // Data range: 0 -1
      // Constraints:
      // Effect:
      //
      // Variable name: h_clip_ratio_low_light
      // AF window horizontal size in terms of ratio to the whole image. For the
      // same example above, Horizontal Clip Ratio is 500/1000=0.5.
      // 3A version:
      // Default value: 0.5
      // Data range: 0 - 1
      // Constraints:
      // Effect:
      //
      // Variable name: v_clip_ratio_low_light
      // AF window vertical size in terms of ratio to the whole image. For the
      // same example above, Vertical Clip Ratio is 500/1000=0.5.
      // 3A version:
      // Default value: 0.5
      // Data range: 0 - 1
      // Constraints:
      // Effect:
      //
      // Variable name: h_num_default
      // Default horizontal number of grids in an ROI.
      // 3A version:
      // Default value: 6
      // Data range: [1 18]
      // Constraints:
      // Effect:
      //
      // Variable name: v_num_default
      // Default vertical number of grids in an ROI.
      // 3A version:
      // Default value: 6
      // Data range: [1 14]
      // Constraints:
      // Effect:
      //
      // Variable name: h_num_windows
      // Default horizontal number of windows in an ROI.
      // 3A version:
      // Default value: 5
      // Data range: [1 h_num_default]
      // Constraints:
      // Effect:
      //
      // Variable name: v_num_windows
      // Default vertical number of windows in an ROI.
      // 3A version:
      // Default value: 5
      // Data range: [1 v_num_default]
      // Constraints:
      // Effect:
      /******************************************************************************/

      /* AF Multi Window */
      {
         0, /* AF Multi Window Enable */
         0.500000f, /* AF Multi Window H Clip Ratio Normal Light */
         0.500000f, /* AF Multi Window V Clip Ratio Normal Light */
         0.500000f, /* AF Multi Window H Clip Ratio Low Light */
         0.500000f, /* AF Multi Window V Clip Ratio Low Light */
         6, /* AF Multi Window H Num Default */
         6, /* AF Multi Window V Num Default */
         5, /* AF Multi Window H Num Windows */
         5, /* AF Multi Window V Num Windows */
         /* AF Multi Window Reserve */
         {
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
            0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
         },
      },

      /******************************************************************************/
      // af_tuning_focus_mode_search_limit_t: AF tuning parameters defining search limits applicable to each focus mode
      //
      // Variable name: enable
      // Description: enable/disable flag for the feature
      // Default values: 0
      // Data range: [0,1]
      //
      // Variable name: near_end
      // Description: Near end position for the mode
      // Default value: position_near_end.
      // Data range: [position_near_end position_far_end]
      //
      // Variable name: far_end
      // Description: Far end position for the mode
      // Default value: position_far_end.
      // Data range: [position_near_end position_far_end]
      //
      // Variable name: default_pos
      // Description: default position for the mode
      // Default value: position_default_in_normal.
      // Data range: [position_near_end position_far_end]
      /******************************************************************************/

      /* AF Search Limit */
      {
         /* Default Mode */
         {
            0, /* AF Search Limit Default Enable */
            0, /* AF Search Limit Default Near End */
            335, /* AF Search Limit Default Far End */
            300, /* AF Search Limit Default Default Pos */
         },
         /* Macro Mode */
         {
            0, /* AF Search Limit Macro Enable */
            0, /* AF Search Limit Macro Near End */
            335, /* AF Search Limit Macro Far End */
            300, /* AF Search Limit Macro Default Pos */
         },
         /* Normal Mode */
         {
            0, /* AF Search Limit Normal Enable */
            0, /* AF Search Limit Normal Near End */
            335, /* AF Search Limit Normal Far End */
            300, /* AF Search Limit Normal Default Pos */
         },
         /* CAF Mode */
         {
            0, /* AF Search Limit CAF Enable */
            0, /* AF Search Limit CAF Near End */
            335, /* AF Search Limit CAF Far End */
            300, /* AF Search Limit CAF Default Pos */
         },
         /* Manual Mode */
         {
            0, /* AF Search Limit Manual Enable */
            0, /* AF Search Limit Manual Near End */
            335, /* AF Search Limit Manual Far End */
            300, /* AF Search Limit Manual Default Pos */
         },
      },
      /* Reserved */
      {
         0.000000f, 399.0000f, 304.0000f, 0.000000f, 399.0000f, 304.0000f, 0.000000f, 399.0000f, 304.0000f, 0.000000f,
         399.0000f, 304.0000f, 0.000000f, 399.0000f, 304.0000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f,
         0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
      }
   },
   /* SW Stats */
   {
      /* Default */
      {

         /*********************************************************************/
         // Variable name: filter_type
         // Specify Choice of filter used for SW Stats.
         // 3A version: 4.1
         // Default value: AFS_ON_IIR.
         // Data range: AFS_ON_IIR (1), AFS_ON_FIR (2).
         // Constraints: DO NOT USE AFS_OFF.
         // Effect: Specifies to use FIR or IIR fitler.
         /*********************************************************************/

         1, /* Filter Type */

         /*********************************************************************/
         // Future: FIR high pass filter coefficients for software stats.
         //
         // Variable name: a.
         // High pass FIR filter coeffs used for focus value calculation. For 1x11
         //   kernel. Only 11 parameters are configurable.
         // Default value: {-4, -4, 1, 2, 3, 4, 3, 2, 1, -4, -4}.
         // Data range: -16 to 15.
         // Constraints:
         // Effect:
         //
         // Variable name: fv_min_hi.
         // Minimum FV value to be accumulated with respect to the filter.
         // Default value: 0.1
         // Data range: 0.0f to 5.0f
         // Constraints:
         // Effect: Higher value will result in a sharper FV curve but
         //   it might filter out low contrast context or missing peak.
         //   Lower Value will have flatter curve due to noise.
         //
         // Variable name: fv_min_lo.
         // Minimum FV value to be accumulated with respect to the filter.
         // Default value: 0.1
         // Data range: 0.0f to 5.0f
         // Constraints:
         // Effect: Higher value will result in a sharper FV curve but
         //   it might filter out low contrast context or missing peak.
         //   Lower Value will have flatter curve due to noise.
         //
         // Variable name: coeff_length.
         // Length of the filter coefficients used.
         // Default value: FILTER_SW_LENGTH_FIR (11).
         // Data range: 11.
         // Constraints: Should not modify randomly; should
         //   match the filter entries used.
         // Effect: For different camera use case, different kernel is used.
         /*********************************************************************/

         /* VFE SW FIR HPF */
         {
            /* A */
            {
               -4, -4, 1, 2, 3, 4, 3, 2, 1, -4, -4
            },
            0.1000000000, /* FV Min Hi */
            0.1000000000, /* FV Min Lo */
            11, /* Coeff Length */
         },

         /*********************************************************************/
         // Feature: IIR high pass filter coefficients for software stats.
         // 3A version: 4.1
         //
         // Variable name: a, b.
         // High pass IIR filter coeffs used for focus value calculation. For 2x6
         //   kernel, all 6 parameters are configurable.
         // Default value: a: {1.00000000f, -1.3642469f, 0.75484900f, 1.00000000f, -0.8725360f, 0.68906000f}
         //                b: {0.12260000f, 0.00000000f, -0.1226000f, 0.33660000f, 0.00000000f, -0.3366000f}
         // Data range: double -16 to 15.
         // Constraints:
         // Effect:
         //
         // Variable name: fv_min_hi.
         // Minimum FV value to be accumulated with respect to the filter.
         // Default value: 0.1
         // Data range: 0.0f to 5.0f
         // Constraints:
         // Effect: Higher value will result in a sharper FV curve but
         //   it might filter out low contrast context or missing peak.
         //   Lower Value will have flatter curve due to noise.
         //
         // Variable name: fv_min_lo.
         // Minimum FV value to be accumulated with respect to the filter.
         // Default value: 0.1
         // Data range: 0.0f to 5.0f
         // Constraints:
         // Effect: Higher value will result in a sharper FV curve but
         //   it might filter out low contrast context or missing peak.
         //   Lower Value will have flatter curve due to noise.
         //
         // Variable name: coeff_length.
         // Length of the filter coefficients used.
         // Default value: FILTER_SW_LENGTH_IIR (6).
         // Data range: 3 or 6.
         // Constraints: Should not modify randomly; should
         //   match the filter entries used.
         // Effect: For different camera use case, different kernel is used.
         //
         /*********************************************************************/

         /* VFE SW IIR HPF */
         {
            /* A */
            {
               1.0000000000, -1.3642470000, 0.7548490000, 1.0000000000, -0.8725360000, 0.6890600000
            },
            /* B */
            {
               0.1226000000, 0.0000000000, -0.1226000000, 0.3366000000, 0.0000000000, -0.3366000000
            },
            0.1000000000, /* FV Min Hi */
            0.1000000000, /* FV Min Lo */
            6, /* Coeff Length */
         },
      },
      /* Face */
      {

         /*********************************************************************/
         // Variable name: filter_type
         // Specify Choice of filter used for SW Stats.
         // 3A version: 4.1
         // Default value: AFS_ON_IIR.
         // Data range: AFS_ON_IIR (1), AFS_ON_FIR (2).
         // Constraints: DO NOT USE AFS_OFF.
         // Effect: Specifies to use FIR or IIR fitler.
         /*********************************************************************/

         1, /* Filter Type */

         /*********************************************************************/
         // Future: FIR high pass filter coefficients for software stats.
         //
         // Variable name: a.
         // High pass FIR filter coeffs used for focus value calculation. For 1x11
         //   kernel. Only 11 parameters are configurable.
         // Default value: {-4, -4, 1, 2, 3, 4, 3, 2, 1, -4, -4}.
         // Data range: -16 to 15.
         // Constraints:
         // Effect:
         //
         // Variable name: fv_min_hi.
         // Minimum FV value to be accumulated with respect to the filter.
         // Default value: 0.1
         // Data range: 0.0f to 5.0f
         // Constraints:
         // Effect: Higher value will result in a sharper FV curve but
         //   it might filter out low contrast context or missing peak.
         //   Lower Value will have flatter curve due to noise.
         //
         // Variable name: fv_min_lo.
         // Minimum FV value to be accumulated with respect to the filter.
         // Default value: 0.1
         // Data range: 0.0f to 5.0f
         // Constraints:
         // Effect: Higher value will result in a sharper FV curve but
         //   it might filter out low contrast context or missing peak.
         //   Lower Value will have flatter curve due to noise.
         //
         // Variable name: coeff_length.
         // Length of the filter coefficients used.
         // Default value: FILTER_SW_LENGTH_FIR (11).
         // Data range: 11.
         // Constraints: Should not modify randomly; should
         //   match the filter entries used.
         // Effect: For different camera use case, different kernel is used.
         /*********************************************************************/

         /* VFE SW FIR HPF */
         {
            /* A */
            {
               -4, -4, 1, 2, 3, 4, 3, 2, 1, -4, -4
            },
            0.1000000000, /* FV Min Hi */
            0.1000000000, /* FV Min Lo */
            11, /* Coeff Length */
         },

         /*********************************************************************/
         // Feature: IIR high pass filter coefficients for software stats.
         // 3A version: 4.1
         //
         // Variable name: a, b.
         // High pass IIR filter coeffs used for focus value calculation. For 2x6
         //   kernel, all 6 parameters are configurable.
         // Default value: a: {1.00000000f, -1.3642469f, 0.75484900f, 1.00000000f, -0.8725360f, 0.68906000f}
         //                b: {0.12260000f, 0.00000000f, -0.1226000f, 0.33660000f, 0.00000000f, -0.3366000f}
         // Data range: double -16 to 15.
         // Constraints:
         // Effect:
         //
         // Variable name: fv_min_hi.
         // Minimum FV value to be accumulated with respect to the filter.
         // Default value: 0.1
         // Data range: 0.0f to 5.0f
         // Constraints:
         // Effect: Higher value will result in a sharper FV curve but
         //   it might filter out low contrast context or missing peak.
         //   Lower Value will have flatter curve due to noise.
         //
         // Variable name: fv_min_lo.
         // Minimum FV value to be accumulated with respect to the filter.
         // Default value: 0.1
         // Data range: 0.0f to 5.0f
         // Constraints:
         // Effect: Higher value will result in a sharper FV curve but
         //   it might filter out low contrast context or missing peak.
         //   Lower Value will have flatter curve due to noise.
         //
         // Variable name: coeff_length.
         // Length of the filter coefficients used.
         // Default value: FILTER_SW_LENGTH_IIR (6).
         // Data range: 3 or 6.
         // Constraints: Should not modify randomly; should
         //   match the filter entries used.
         // Effect: For different camera use case, different kernel is used.
         //
         /*********************************************************************/

         /* VFE SW IIR HPF */
         {
            /* A */
            {
               1.0000000000, -1.6545000000, 0.8568000000, 1.0000000000, -0.7883000000, 0.8940000000
            },
            /* B */
            {
               0.0716000000, 0.0000000000, -0.0716000000, 0.1092000000, 0.0000000000, -0.1092000000
            },
            0.1000000000, /* FV Min Hi */
            0.1000000000, /* FV Min Lo */
            6, /* Coeff Length */
         },
      },
      /* Lowlight */
      {

         /*********************************************************************/
         // Variable name: filter_type
         // Specify Choice of filter used for SW Stats.
         // 3A version: 4.1
         // Default value: AFS_ON_IIR.
         // Data range: AFS_ON_IIR (1), AFS_ON_FIR (2).
         // Constraints: DO NOT USE AFS_OFF.
         // Effect: Specifies to use FIR or IIR fitler.
         /*********************************************************************/

         1, /* Filter Type */

         /*********************************************************************/
         // Future: FIR high pass filter coefficients for software stats.
         //
         // Variable name: a.
         // High pass FIR filter coeffs used for focus value calculation. For 1x11
         //   kernel. Only 11 parameters are configurable.
         // Default value: {-4, -4, 1, 2, 3, 4, 3, 2, 1, -4, -4}.
         // Data range: -16 to 15.
         // Constraints:
         // Effect:
         //
         // Variable name: fv_min_hi.
         // Minimum FV value to be accumulated with respect to the filter.
         // Default value: 0.1
         // Data range: 0.0f to 5.0f
         // Constraints:
         // Effect: Higher value will result in a sharper FV curve but
         //   it might filter out low contrast context or missing peak.
         //   Lower Value will have flatter curve due to noise.
         //
         // Variable name: fv_min_lo.
         // Minimum FV value to be accumulated with respect to the filter.
         // Default value: 0.1
         // Data range: 0.0f to 5.0f
         // Constraints:
         // Effect: Higher value will result in a sharper FV curve but
         //   it might filter out low contrast context or missing peak.
         //   Lower Value will have flatter curve due to noise.
         //
         // Variable name: coeff_length.
         // Length of the filter coefficients used.
         // Default value: FILTER_SW_LENGTH_FIR (11).
         // Data range: 11.
         // Constraints: Should not modify randomly; should
         //   match the filter entries used.
         // Effect: For different camera use case, different kernel is used.
         /*********************************************************************/

         /* VFE SW FIR HPF */
         {
            /* A */
            {
               -4, -4, 1, 2, 3, 4, 3, 2, 1, -4, -4
            },
            0.1000000000, /* FV Min Hi */
            0.1000000000, /* FV Min Lo */
            11, /* Coeff Length */
         },

         /*********************************************************************/
         // Feature: IIR high pass filter coefficients for software stats.
         // 3A version: 4.1
         //
         // Variable name: a, b.
         // High pass IIR filter coeffs used for focus value calculation. For 2x6
         //   kernel, all 6 parameters are configurable.
         // Default value: a: {1.00000000f, -1.3642469f, 0.75484900f, 1.00000000f, -0.8725360f, 0.68906000f}
         //                b: {0.12260000f, 0.00000000f, -0.1226000f, 0.33660000f, 0.00000000f, -0.3366000f}
         // Data range: double -16 to 15.
         // Constraints:
         // Effect:
         //
         // Variable name: fv_min_hi.
         // Minimum FV value to be accumulated with respect to the filter.
         // Default value: 0.1
         // Data range: 0.0f to 5.0f
         // Constraints:
         // Effect: Higher value will result in a sharper FV curve but
         //   it might filter out low contrast context or missing peak.
         //   Lower Value will have flatter curve due to noise.
         //
         // Variable name: fv_min_lo.
         // Minimum FV value to be accumulated with respect to the filter.
         // Default value: 0.1
         // Data range: 0.0f to 5.0f
         // Constraints:
         // Effect: Higher value will result in a sharper FV curve but
         //   it might filter out low contrast context or missing peak.
         //   Lower Value will have flatter curve due to noise.
         //
         // Variable name: coeff_length.
         // Length of the filter coefficients used.
         // Default value: FILTER_SW_LENGTH_IIR (6).
         // Data range: 3 or 6.
         // Constraints: Should not modify randomly; should
         //   match the filter entries used.
         // Effect: For different camera use case, different kernel is used.
         //
         /*********************************************************************/

         /* VFE SW IIR HPF */
         {
            /* A */
            {
               1.0000000000, -1.3642470000, 0.7548490000, 1.0000000000, -0.8725360000, 0.6890600000
            },
            /* B */
            {
               0.1226000000, 0.0000000000, -0.1226000000, 0.3366000000, 0.0000000000, -0.3366000000
            },
            0.1000000000, /* FV Min Hi */
            0.1000000000, /* FV Min Lo */
            6, /* Coeff Length */
         },
      },

      /*********************************************************************/
      // Feature: tuning parameters for software AF stats.
      //
      // Variable name: sw_fv_min_lux_trig_hi.
      // Lux trigger to use normal FV_min.
      // Default value: 310 (120 lux corresponding index).
      // Data range: 0 to 500.
      // Effect: Lower value will activate normal light fv_min
      //   at a brighter condition.
      //
      // Variable name:sw_fv_min_lux_trig_lo.
      // Lux trigger to use lowlight FV_min.
      // Default value: 450 (20 lux corresponding index).
      // Data range: 0 to 500.
      // Effect: Lower value will activate normal light fv_min
      //   at a brighter condition.
      /*********************************************************************/

      310.000000f, /* Min Lux Trig Hi */
      450.000000f, /* Min Lux Trig Lo */
   },
   /* VFE Stats */
   {
      /* 0 */
      {

         /*********************************************************************/
         // Feature: tuning parameters for AF stats.
         //
         // Variable name: fv_metric
         // FV metric (0: sum of FV  1: max of FV).
         // Default value: 0.
         // Data range: 0 or 1.
         /*********************************************************************/

         0, /* FV Metric */

         /*********************************************************************/
         // Feature: VFE configuration info.
         //
         // Variable name: fv_min.
         // Minimum focus value for each pixel below which it'll be ignored.
         //   Required for AF stats hardware configuration.
         // Default value: 0.
         // Data range: 0 to 32.
         // Constraints:
         // Effect:
         //
         // Variable name: max_h_num.
         // Maximum number of horizontal grids configurable in each ROI.
         // Default value: 18.
         // Data range: 1 to 65535.
         // Constraints:
         // Effect:
         //
         // Variable name: max_v_num.
         // Maximum number of vertical grids configurable in each ROI.
         // Default value: 14.
         // Data range: 1 to 65535.
         // Constraints:
         // Effect:
         //
         // Variable name: max_block_width.
         // Maximum width of each block in the grids.
         // Default value: (336) to be read from datasheet.
         // Data range: 1 to 65535.
         // Constraints:
         // Effect:
         //
         // Variable name: max_block_height.
         // Maximum height of each block in the grids.
         // Default value: (252) to be read from datasheet.
         // Data range: 1 to 65535.
         // Constraints:
         // Effect:
         //
         // Variable name: min_block_width.
         // Minimum width of each block in the grids.
         // Default value: (64) to be read from datasheet.
         // Data range: 1 to 65535.
         // Constraints:
         // Effect:
         //
         // Variable name: min_block_height.
         // Minimum height of each block in the grids.
         // Default value: (48) to be read from datasheet.
         // Data range: 1 to 65535.
         // Constraints:
         // Effect:
         //
         // Variable name: h_offset_ratio_normal_light.
         // Horizontal location of first pixel in terms of the ratio to the
         //   whole frame size. For example, image width is 1000, we want to use
         //   the middle 500 as AF window. Horizontal offset ratio is
         //   250/1000=0.25.
         // Default value: 0.25
         // Data range: 0 to 1.
         // Constraints:
         // Effect:
         //
         // Variable name: v_offset_ratio_normal_light.
         // Similar to Horizontal Offset Ratio, but this is in the vertical direction.
         // Default value: 0.25
         // Data range: 0 to 1.
         // Constraints:
         // Effect:
         //
         // Variable name: h_clip_ratio_normal_light.
         // AF window horizontal size in terms of ratio to the whole image. For the
         //   same example above, Horizontal Clip Ratio is 500/1000=0.5.
         // Default value: 0.5
         // Data range: 0 to 1.
         // Constraints:
         // Effect:
         //
         // Variable name: v_clip_ratio_normal_light.
         // AF window vertical size in terms of ratio to the whole image. For the
         //   same example above, Vertical Clip Ratio is 500/1000=0.5.
         // Default value: 0.5
         // Data range: 0 to 1.
         // Constraints:
         // Effect:
         //
         // Variable name: h_offset_ratio_low_light.
         // Horizontal location of first pixel in terms of the ratio to the
         //   whole frame size. For example, image width is 1000, we want to use
         //   the middle 500 as AF window. Horizontal offset ratio is
         //   250/1000=0.25.
         // Default value: 0.25
         // Data range: 0 to 1.
         // Constraints:
         // Effect:
         //
         // Variable name: v_offset_ratio_low_light.
         // Similar to Horizontal Offset Ratio, but this is in the vertical direction.
         // 3A version:
         // Default value: 0.25
         // Data range: 0 to 1.
         // Constraints:
         // Effect:
         //
         // Variable name: h_clip_ratio_low_light.
         // AF window horizontal size in terms of ratio to the whole image. For the
         //   same example above, Horizontal Clip Ratio is 500/1000=0.5.
         // 3A version:
         // Default value: 0.5
         // Data range: 0 to 1.
         // Constraints:
         // Effect:
         //
         // Variable name: v_clip_ratio_low_light.
         // AF window vertical size in terms of ratio to the whole image. For the
         //   same example above, Vertical Clip Ratio is 500/1000=0.5.
         // Default value: 0.5
         // Data range: 0 to 1.
         // Constraints:
         // Effect:
         //
         // Variable name: touch_scaling_factor_normal_light.
         // Factor by how much we will reduce the touch AF ROI in addition to
         //   clip ratio.
         // Default value: 0.5
         // Data range: 0 to 1.
         // Constraints:
         // Effect:
         //
         // Variable name: touch_scaling_factor_ low_light.
         // Factor by how much we will reduce the touch AF ROI in addition to
         //   clip ratio.
         // Default value: 1.0
         // Data range: > 0.
         // Constraints:
         // Effect:
         //
         // Variable name: bf_scale_factor.
         // Downscale factor for secondary kernel.
         // Default value: 1.
         // Data range: 1 to 65535.
         // Constraints:
         // Effect:
         //
         // Variable name: h_num_default.
         // Default horizontal number of grids in an ROI.
         // Default value: 5.
         // Data range: 1 to 65535.
         // Constraints:
         // Effect:
         //
         // Variable name: v_num_default.
         // Default vertical number of grids in an ROI.
         // Default value: 1.
         // Data range: 1 to 65535.
         // Constraints:
         // Effect:
         /*********************************************************************/

         /* VFE Config */
         {
            0, /* FV Min */
            18, /* Max H Num */
            14, /* Max V Num */
            336, /* Max Block Width */
            252, /* Max Block Height */
            64, /* Min Block Width */
            48, /* Min Block Height */
            0.300000f, /* H Offset Ratio Normal Light */
            0.150000f, /* V Offset Ratio Normal Light */
            0.200000f, /* H Clip Ratio Normal Light */
            0.200000f, /* V Clip Ratio Normal Light */
            0.300000f, /* H Offset Ratio Lowlight */
            0.300000f, /* V Offset Ratio Lowlight */
            0.250000f, /* H Clip Ratio Lowlight */
            0.250000f, /* V Clip Ratio Lowlight */
            0.750000f, /* Touch Scaling Factor Normal Light */
            0.750000f, /* Touch Scaling Factor Lowlight */
            1, /* BF Scale Factor */
            5, /* H Num Default */
            5, /* V Num Default */
         },
         /* Default */
         {

            /*********************************************************************/
            // Feature: Default high pass filter coefficients for legacy YUV stats.
            //
            // Variable name: a00, a02, a04, a20, a21, a22, a23, a24
            // High pass filter coeffs used for focus value calculation. For 3x5
            //   kernel. Only 8 parameters are configurable.
            // Default : {-4, -2, -4, -1, -1, 14, -1, -1}.
            // Data range: -16 to 15.
            /*********************************************************************/

            /* VFE Legacy HPF */
            {
               -4, /* A00 */
               -2, /* A02 */
               -4, /* A04 */
               -1, /* A20 */
               -1, /* A21 */
               14, /* A22 */
               -1, /* A23 */
               -1, /* A24 */
            },

            /*********************************************************************/
            // Feature: Default high pass filter coefficients.
            //
            // Variable name: bf_hpf_2x5.
            // High pass filter coeffs used for focus value calculation. For 2x5
            // kernel, all 10 parameters are configurable.
            // Default values: {-4, 0, -2, 0, -4, -1, -1, 14, -1, -1}.
            // Data range: -16 to 15.
            // Constraints:
            //
            // Variable name:bf_hpf_2x11.
            // High pass filter coeffs for 2x11 kernel used for focus value calculation.
            // Default values: {-4, -4, 1, 2, 3, 4, 3, 2, 1, -4, -4,
            //                  -4, -4, 1, 2, 3, 4, 3, 2, 1, -4, -4}.
            // Data range: -16 to 15.
            /*********************************************************************/

            /* BF HPF 2x5 */
            {
               -4, 0, -2, 0, -4, -1, -1, 14, -1, -1
            },
            /* BF HPF 2x11 */
            {
               -4, -4, 1, 2, 3, 4, 3, 2, 1, -4,
               -4, -4, -4, 1, 2, 3, 4, 3, 2, 1,
               -4, -4
            }
         },
         /* Face */
         {

            /*********************************************************************/
            // Feature: High pass filter coefficients for legacy YUV stats when face is detected.
            //
            // Variable name: a00, a02, a04, a20, a21, a22, a23, a24
            // High pass filter coeffs used for focus value calculation. For 3x5
            //   kernel. Only 8 parameters are configurable.
            // Default : {-3, 0, -2, -15, 0, 0, 0, 15.}
            // Data range: -16 to 15.
            /*********************************************************************/

            /* VFE Legacy HPF */
            {
               -3, /* A00 */
               0, /* A02 */
               -2, /* A04 */
               -15, /* A20 */
               0, /* A21 */
               0, /* A22 */
               0, /* A23 */
               15, /* A24 */
            },

            /*********************************************************************/
            // Feature: High pass filter coefficients when face is detected.
            //
            // Variable name: bf_hpf_2x5.
            // High pass filter coeffs used for focus value calculation. For 2x5
            // kernel, all 10 parameters are configurable.
            // Default values: {-3, 0, 0, 0, -2, -15, 0, 0, 0, 15}.
            // Data range: -16 to 15.
            // Constraints:
            //
            // Variable name:bf_hpf_2x11.
            // High pass filter coeffs for 2x11 kernel used for focus value calculation.
            // Default values: {-4, -4, 1, 2, 3, 4, 3, 2, 1, -4, -4,
            //                  -4, -4, 1, 2, 3, 4, 3, 2, 1, -4, -4}.
            // Data range: -16 to 15.
            /*********************************************************************/

            /* BF HPF 2x5 */
            {
               -3, 0, 0, 0, -2, -15, 0, 0, 0, 15
            },
            /* BF HPF 2x11 */
            {
               -4, -4, 1, 2, 3, 4, 3, 2, 1, -4,
               -4, -4, -4, 1, 2, 3, 4, 3, 2, 1,
               -4, -4
            }
         },
         /* Lowlight */
         {

            /*********************************************************************/
            // Feature: High pass filter coefficients for legacy YUV stats in lowlight scenes.
            //
            // Variable name: a00, a02, a04, a20, a21, a22, a23, a24
            // High pass filter coeffs used for focus value calculation. For 3x5
            //   kernel. Only 8 parameters are configurable.
            // Default : {-3, 0, -2, -15, 0, 0, 0, 15}.
            // Data range: -16 to 15.
            /*********************************************************************/

            /* VFE Legacy HPF */
            {
               -3, /* A00 */
               0, /* A02 */
               -2, /* A04 */
               -15, /* A20 */
               0, /* A21 */
               0, /* A22 */
               0, /* A23 */
               15, /* A24 */
            },

            /*********************************************************************/
            // Feature: High pass filter coefficients in lowlight scenes.
            //
            // Variable name: bf_hpf_2x5.
            // High pass filter coeffs used for focus value calculation. For 2x5
            // kernel, all 10 parameters are configurable.
            // Default values: {-4, 0, -2, 0, -4, -1, -1, 14, -1, -1}.
            // Data range: -16 to 15.
            // Constraints:
            //
            // Variable name:bf_hpf_2x11.
            // High pass filter coeffs for 2x11 kernel used for focus value calculation.
            // Default values: {-4, -4, 1, 2, 3, 4, 3, 2, 1, -4, -4,
            //                  -4, -4, 1, 2, 3, 4, 3, 2, 1, -4, -4}.
            // Data range: -16 to 15.
            /*********************************************************************/

            /* BF HPF 2x5 */
            {
               -4, 0, -2, 0, -4, -1, -1, 14, -1, -1
            },
            /* BF HPF 2x11 */
            {
               -4, -4, 1, 2, 3, 4, 3, 2, 1, -4,
               -4, -4, -4, 1, 2, 3, 4, 3, 2, 1,
               -4, -4
            }
         },
      },
      /* 1 */
      {

         /*********************************************************************/
         // Feature: tuning parameters for AF stats.
         //
         // Variable name: fv_metric
         // FV metric (0: sum of FV  1: max of FV).
         // Default value: 0.
         // Data range: 0 or 1.
         /*********************************************************************/

         0, /* FV Metric */

         /*********************************************************************/
         // Feature: VFE configuration info.
         //
         // Variable name: fv_min.
         // Minimum focus value for each pixel below which it'll be ignored.
         //   Required for AF stats hardware configuration.
         // Default value: 0.
         // Data range: 0 to 32.
         // Constraints:
         // Effect:
         //
         // Variable name: max_h_num.
         // Maximum number of horizontal grids configurable in each ROI.
         // Default value: 18.
         // Data range: 1 to 65535.
         // Constraints:
         // Effect:
         //
         // Variable name: max_v_num.
         // Maximum number of vertical grids configurable in each ROI.
         // Default value: 14.
         // Data range: 1 to 65535.
         // Constraints:
         // Effect:
         //
         // Variable name: max_block_width.
         // Maximum width of each block in the grids.
         // Default value: (336) to be read from datasheet.
         // Data range: 1 to 65535.
         // Constraints:
         // Effect:
         //
         // Variable name: max_block_height.
         // Maximum height of each block in the grids.
         // Default value: (252) to be read from datasheet.
         // Data range: 1 to 65535.
         // Constraints:
         // Effect:
         //
         // Variable name: min_block_width.
         // Minimum width of each block in the grids.
         // Default value: (64) to be read from datasheet.
         // Data range: 1 to 65535.
         // Constraints:
         // Effect:
         //
         // Variable name: min_block_height.
         // Minimum height of each block in the grids.
         // Default value: (48) to be read from datasheet.
         // Data range: 1 to 65535.
         // Constraints:
         // Effect:
         //
         // Variable name: h_offset_ratio_normal_light.
         // Horizontal location of first pixel in terms of the ratio to the
         //   whole frame size. For example, image width is 1000, we want to use
         //   the middle 500 as AF window. Horizontal offset ratio is
         //   250/1000=0.25.
         // Default value: 0.25
         // Data range: 0 to 1.
         // Constraints:
         // Effect:
         //
         // Variable name: v_offset_ratio_normal_light.
         // Similar to Horizontal Offset Ratio, but this is in the vertical direction.
         // Default value: 0.25
         // Data range: 0 to 1.
         // Constraints:
         // Effect:
         //
         // Variable name: h_clip_ratio_normal_light.
         // AF window horizontal size in terms of ratio to the whole image. For the
         //   same example above, Horizontal Clip Ratio is 500/1000=0.5.
         // Default value: 0.5
         // Data range: 0 to 1.
         // Constraints:
         // Effect:
         //
         // Variable name: v_clip_ratio_normal_light.
         // AF window vertical size in terms of ratio to the whole image. For the
         //   same example above, Vertical Clip Ratio is 500/1000=0.5.
         // Default value: 0.5
         // Data range: 0 to 1.
         // Constraints:
         // Effect:
         //
         // Variable name: h_offset_ratio_low_light.
         // Horizontal location of first pixel in terms of the ratio to the
         //   whole frame size. For example, image width is 1000, we want to use
         //   the middle 500 as AF window. Horizontal offset ratio is
         //   250/1000=0.25.
         // Default value: 0.25
         // Data range: 0 to 1.
         // Constraints:
         // Effect:
         //
         // Variable name: v_offset_ratio_low_light.
         // Similar to Horizontal Offset Ratio, but this is in the vertical direction.
         // 3A version:
         // Default value: 0.25
         // Data range: 0 to 1.
         // Constraints:
         // Effect:
         //
         // Variable name: h_clip_ratio_low_light.
         // AF window horizontal size in terms of ratio to the whole image. For the
         //   same example above, Horizontal Clip Ratio is 500/1000=0.5.
         // 3A version:
         // Default value: 0.5
         // Data range: 0 to 1.
         // Constraints:
         // Effect:
         //
         // Variable name: v_clip_ratio_low_light.
         // AF window vertical size in terms of ratio to the whole image. For the
         //   same example above, Vertical Clip Ratio is 500/1000=0.5.
         // Default value: 0.5
         // Data range: 0 to 1.
         // Constraints:
         // Effect:
         //
         // Variable name: touch_scaling_factor_normal_light.
         // Factor by how much we will reduce the touch AF ROI in addition to
         //   clip ratio.
         // Default value: 0.5
         // Data range: 0 to 1.
         // Constraints:
         // Effect:
         //
         // Variable name: touch_scaling_factor_ low_light.
         // Factor by how much we will reduce the touch AF ROI in addition to
         //   clip ratio.
         // Default value: 1.0
         // Data range: > 0.
         // Constraints:
         // Effect:
         //
         // Variable name: bf_scale_factor.
         // Downscale factor for secondary kernel.
         // Default value: 1.
         // Data range: 1 to 65535.
         // Constraints:
         // Effect:
         //
         // Variable name: h_num_default.
         // Default horizontal number of grids in an ROI.
         // Default value: 5.
         // Data range: 1 to 65535.
         // Constraints:
         // Effect:
         //
         // Variable name: v_num_default.
         // Default vertical number of grids in an ROI.
         // Default value: 1.
         // Data range: 1 to 65535.
         // Constraints:
         // Effect:
         /*********************************************************************/

         /* VFE Config */
         {
            0, /* FV Min */
            5, /* Max H Num */
            5, /* Max V Num */
            336, /* Max Block Width */
            252, /* Max Block Height */
            64, /* Min Block Width */
            48, /* Min Block Height */
            0.300000f, /* H Offset Ratio Normal Light */
            0.150000f, /* V Offset Ratio Normal Light */
            0.160000f, /* H Clip Ratio Normal Light */
            0.160000f, /* V Clip Ratio Normal Light */
            0.300000f, /* H Offset Ratio Lowlight */
            0.300000f, /* V Offset Ratio Lowlight */
            0.250000f, /* H Clip Ratio Lowlight */
            0.250000f, /* V Clip Ratio Lowlight */
            0.750000f, /* Touch Scaling Factor Normal Light */
            0.750000f, /* Touch Scaling Factor Lowlight */
            2, /* BF Scale Factor */
            5, /* H Num Default */
            5, /* V Num Default */
         },
         /* Default */
         {

            /*********************************************************************/
            // Feature: Default high pass filter coefficients for legacy YUV stats.
            //
            // Variable name: a00, a02, a04, a20, a21, a22, a23, a24
            // High pass filter coeffs used for focus value calculation. For 3x5
            //   kernel. Only 8 parameters are configurable.
            // Default : {-4, -2, -4, -1, -1, 14, -1, -1}.
            // Data range: -16 to 15.
            /*********************************************************************/

            /* VFE Legacy HPF */
            {
               -4, /* A00 */
               -2, /* A02 */
               -4, /* A04 */
               -1, /* A20 */
               -1, /* A21 */
               14, /* A22 */
               -1, /* A23 */
               -1, /* A24 */
            },

            /*********************************************************************/
            // Feature: Default high pass filter coefficients.
            //
            // Variable name: bf_hpf_2x5.
            // High pass filter coeffs used for focus value calculation. For 2x5
            // kernel, all 10 parameters are configurable.
            // Default values: {-4, 0, -2, 0, -4, -1, -1, 14, -1, -1}.
            // Data range: -16 to 15.
            // Constraints:
            //
            // Variable name:bf_hpf_2x11.
            // High pass filter coeffs for 2x11 kernel used for focus value calculation.
            // Default values: {-4, -4, 1, 2, 3, 4, 3, 2, 1, -4, -4,
            //                  -4, -4, 1, 2, 3, 4, 3, 2, 1, -4, -4}.
            // Data range: -16 to 15.
            /*********************************************************************/

            /* BF HPF 2x5 */
            {
               -4, 0, -2, 0, -4, -1, -1, 14, -1, -1
            },
            /* BF HPF 2x11 */
            {
               -4, -4, 1, 2, 3, 4, 3, 2, 1, -4,
               -4, -4, -4, 1, 2, 3, 4, 3, 2, 1,
               -4, -4
            }
         },
         /* Face */
         {

            /*********************************************************************/
            // Feature: High pass filter coefficients for legacy YUV stats when face is detected.
            //
            // Variable name: a00, a02, a04, a20, a21, a22, a23, a24
            // High pass filter coeffs used for focus value calculation. For 3x5
            //   kernel. Only 8 parameters are configurable.
            // Default : {-3, 0, -2, -15, 0, 0, 0, 15.}
            // Data range: -16 to 15.
            /*********************************************************************/

            /* VFE Legacy HPF */
            {
               -3, /* A00 */
               0, /* A02 */
               -2, /* A04 */
               -15, /* A20 */
               0, /* A21 */
               0, /* A22 */
               0, /* A23 */
               15, /* A24 */
            },

            /*********************************************************************/
            // Feature: High pass filter coefficients when face is detected.
            //
            // Variable name: bf_hpf_2x5.
            // High pass filter coeffs used for focus value calculation. For 2x5
            // kernel, all 10 parameters are configurable.
            // Default values: {-3, 0, 0, 0, -2, -15, 0, 0, 0, 15}.
            // Data range: -16 to 15.
            // Constraints:
            //
            // Variable name:bf_hpf_2x11.
            // High pass filter coeffs for 2x11 kernel used for focus value calculation.
            // Default values: {-4, -4, 1, 2, 3, 4, 3, 2, 1, -4, -4,
            //                  -4, -4, 1, 2, 3, 4, 3, 2, 1, -4, -4}.
            // Data range: -16 to 15.
            /*********************************************************************/

            /* BF HPF 2x5 */
            {
               -3, 0, 0, 0, -2, -15, 0, 0, 0, 15
            },
            /* BF HPF 2x11 */
            {
               -4, -4, 1, 2, 3, 4, 3, 2, 1, -4,
               -4, -4, -4, 1, 2, 3, 4, 3, 2, 1,
               -4, -4
            }
         },
         /* Lowlight */
         {

            /*********************************************************************/
            // Feature: High pass filter coefficients for legacy YUV stats in lowlight scenes.
            //
            // Variable name: a00, a02, a04, a20, a21, a22, a23, a24
            // High pass filter coeffs used for focus value calculation. For 3x5
            //   kernel. Only 8 parameters are configurable.
            // Default : {-3, 0, -2, -15, 0, 0, 0, 15}.
            // Data range: -16 to 15.
            /*********************************************************************/

            /* VFE Legacy HPF */
            {
               -3, /* A00 */
               0, /* A02 */
               -2, /* A04 */
               -15, /* A20 */
               0, /* A21 */
               0, /* A22 */
               0, /* A23 */
               15, /* A24 */
            },

            /*********************************************************************/
            // Feature: High pass filter coefficients in lowlight scenes.
            //
            // Variable name: bf_hpf_2x5.
            // High pass filter coeffs used for focus value calculation. For 2x5
            // kernel, all 10 parameters are configurable.
            // Default values: {-4, 0, -2, 0, -4, -1, -1, 14, -1, -1}.
            // Data range: -16 to 15.
            // Constraints:
            //
            // Variable name:bf_hpf_2x11.
            // High pass filter coeffs for 2x11 kernel used for focus value calculation.
            // Default values: {-4, -4, 1, 2, 3, 4, 3, 2, 1, -4, -4,
            //                  -4, -4, 1, 2, 3, 4, 3, 2, 1, -4, -4}.
            // Data range: -16 to 15.
            /*********************************************************************/

            /* BF HPF 2x5 */
            {
               -4, 0, -2, 0, -4, -1, -1, 14, -1, -1
            },
            /* BF HPF 2x11 */
            {
               -4, -4, 1, 2, 3, 4, 3, 2, 1, -4,
               -4, -4, -4, 1, 2, 3, 4, 3, 2, 1,
               -4, -4
            }
         },
      },
   },
   /* BAF */
   {
      /* ROI Config */
      {

         /*********************************************************************/
         // Feature: Tuning preference on ROI type and settings.
         //
         // Variable name: preset_id.
         // Type of preset ROI pattern (rect, diam, cross, custom).
         // Default value: 0.
         // Constraints: None.
         //
         // Variable name: grid_size_h.
         // ROI grid width ratio with respect to ROI width.
         // Default value: 0.
         // Constraints: None.
         //
         // Variable name: grid_size_v.
         // ROI grid height ratio with respect to ROI height.
         // Default value: 0.
         // Constraints: None.
         //
         // Variable name: grid_gap_h.
         // ROI grid gap width ratio with respect to ROI width.
         // Default value: 0.
         // Constraints: None.
         //
         // Variable name: grid_gap_v.
         // ROI grid gap width ratio with respect to ROI height.
         // Default value: 0.
         // Constraints: None.
         //
         // Variable name: num_ROI.
         // Number of ROI used in custom ROI configuration.
         // Default value: 0.
         // Constraints: None.
         //
         // Variable name: ROI_custom[].
         // Array of custom ROI as follows:
         //
         //   Variable name: flag.
         //   Flag to indicate whether the ROI is primary or secondary.
         //   Default value: 0.
         //   Constraints: None.
         //
         //   Variable name: x.
         //   Start location x of a ROI.
         //   Default value: 0.
         //   Constraints: None.
         //
         //   Variable name: y.
         //   Start location y of a ROI.
         //   Default value: 0.
         //  Constraints: None.
         //
         //   Variable name: width.
         //   ROI width.
         //   Default value: 0.
         //   Constraints: None.
         //
         //   Variable name: height.
         //   ROI height
         //   Default value: 0.
         //   Constraints: None.
         /*********************************************************************/

         /* Normal Light */
         {
            BAF_ROI_PATTERN_RECT, /* Preset ID */
            0.200000f, /* Grid Size H */
            0.200000f, /* Grid Size V */
            0.000000f, /* Grid Gap H */
            0.000000f, /* Grid Gap V */
            0, /* Num ROI */
            /* Custom ROI */
            {
               /* Region 0 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 1 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 2 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 3 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 4 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 5 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 6 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 7 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 8 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 9 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 10 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 11 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 12 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 13 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 14 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 15 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 16 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 17 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 18 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 19 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 20 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 21 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 22 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 23 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 24 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 25 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 26 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 27 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 28 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 29 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 30 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 31 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 32 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 33 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 34 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 35 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 36 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 37 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 38 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 39 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 40 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 41 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 42 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 43 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 44 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 45 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 46 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 47 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 48 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 49 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 50 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 51 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 52 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 53 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 54 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 55 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 56 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 57 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 58 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 59 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 60 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 61 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 62 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 63 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 64 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 65 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 66 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 67 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 68 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 69 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 70 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 71 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 72 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 73 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 74 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 75 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 76 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 77 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 78 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 79 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 80 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 81 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 82 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 83 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 84 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 85 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 86 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 87 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 88 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 89 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 90 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 91 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 92 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 93 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 94 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 95 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 96 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 97 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 98 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 99 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 100 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 101 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 102 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 103 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 104 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 105 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 106 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 107 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 108 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 109 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 110 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 111 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 112 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 113 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 114 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 115 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 116 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 117 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 118 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 119 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 120 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 121 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 122 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 123 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 124 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 125 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 126 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 127 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 128 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 129 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 130 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 131 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 132 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 133 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 134 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 135 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 136 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 137 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 138 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 139 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 140 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 141 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 142 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 143 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 144 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 145 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 146 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 147 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 148 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 149 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 150 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 151 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 152 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 153 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 154 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 155 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 156 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 157 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 158 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 159 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 160 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 161 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 162 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 163 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 164 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 165 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 166 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 167 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 168 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 169 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 170 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 171 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 172 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 173 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 174 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 175 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 176 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 177 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 178 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 179 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 180 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 181 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 182 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 183 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 184 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 185 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 186 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 187 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 188 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 189 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 190 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 191 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 192 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 193 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 194 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 195 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 196 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 197 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 198 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 199 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 200 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 201 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 202 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 203 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 204 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 205 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 206 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 207 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 208 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 209 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 210 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 211 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 212 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 213 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 214 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 215 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 216 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 217 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 218 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 219 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 220 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 221 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 222 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 223 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 224 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 225 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 226 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 227 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 228 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 229 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 230 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 231 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 232 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 233 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 234 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 235 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 236 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 237 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 238 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 239 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 240 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 241 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 242 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 243 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 244 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 245 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 246 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 247 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 248 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 249 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 250 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 251 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 252 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 253 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 254 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 255 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 256 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 257 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 258 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 259 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 260 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 261 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 262 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 263 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 264 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 265 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 266 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 267 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 268 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 269 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 270 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 271 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 272 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 273 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 274 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 275 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 276 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 277 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 278 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 279 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 280 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 281 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
            },
         },
         /* Lowlight */
         {
            BAF_ROI_PATTERN_RECT, /* Preset ID */
            0.200000f, /* Grid Size H */
            0.200000f, /* Grid Size V */
            0.000000f, /* Grid Gap H */
            0.000000f, /* Grid Gap V */
            0, /* Num ROI */
            /* Custom ROI */
            {
               /* Region 0 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 1 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 2 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 3 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 4 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 5 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 6 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 7 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 8 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 9 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 10 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 11 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 12 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 13 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 14 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 15 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 16 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 17 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 18 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 19 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 20 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 21 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 22 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 23 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 24 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 25 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 26 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 27 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 28 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 29 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 30 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 31 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 32 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 33 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 34 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 35 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 36 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 37 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 38 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 39 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 40 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 41 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 42 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 43 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 44 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 45 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 46 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 47 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 48 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 49 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 50 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 51 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 52 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 53 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 54 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 55 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 56 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 57 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 58 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 59 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 60 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 61 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 62 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 63 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 64 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 65 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 66 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 67 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 68 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 69 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 70 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 71 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 72 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 73 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 74 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 75 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 76 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 77 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 78 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 79 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 80 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 81 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 82 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 83 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 84 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 85 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 86 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 87 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 88 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 89 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 90 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 91 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 92 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 93 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 94 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 95 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 96 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 97 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 98 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 99 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 100 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 101 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 102 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 103 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 104 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 105 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 106 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 107 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 108 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 109 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 110 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 111 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 112 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 113 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 114 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 115 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 116 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 117 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 118 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 119 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 120 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 121 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 122 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 123 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 124 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 125 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 126 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 127 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 128 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 129 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 130 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 131 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 132 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 133 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 134 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 135 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 136 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 137 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 138 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 139 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 140 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 141 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 142 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 143 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 144 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 145 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 146 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 147 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 148 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 149 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 150 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 151 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 152 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 153 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 154 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 155 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 156 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 157 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 158 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 159 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 160 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 161 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 162 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 163 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 164 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 165 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 166 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 167 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 168 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 169 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 170 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 171 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 172 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 173 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 174 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 175 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 176 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 177 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 178 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 179 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 180 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 181 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 182 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 183 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 184 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 185 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 186 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 187 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 188 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 189 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 190 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 191 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 192 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 193 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 194 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 195 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 196 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 197 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 198 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 199 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 200 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 201 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 202 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 203 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 204 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 205 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 206 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 207 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 208 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 209 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 210 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 211 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 212 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 213 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 214 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 215 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 216 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 217 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 218 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 219 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 220 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 221 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 222 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 223 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 224 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 225 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 226 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 227 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 228 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 229 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 230 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 231 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 232 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 233 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 234 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 235 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 236 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 237 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 238 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 239 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 240 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 241 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 242 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 243 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 244 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 245 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 246 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 247 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 248 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 249 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 250 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 251 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 252 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 253 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 254 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 255 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 256 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 257 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 258 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 259 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 260 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 261 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 262 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 263 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 264 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 265 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 266 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 267 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 268 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 269 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 270 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 271 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 272 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 273 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 274 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 275 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 276 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 277 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 278 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 279 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 280 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 281 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
            },
         },
         /* Face */
         {
            BAF_ROI_PATTERN_RECT, /* Preset ID */
            0.200000f, /* Grid Size H */
            0.200000f, /* Grid Size V */
            0.000000f, /* Grid Gap H */
            0.000000f, /* Grid Gap V */
            0, /* Num ROI */
            /* Custom ROI */
            {
               /* Region 0 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 1 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 2 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 3 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 4 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 5 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 6 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 7 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 8 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 9 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 10 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 11 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 12 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 13 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 14 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 15 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 16 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 17 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 18 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 19 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 20 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 21 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 22 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 23 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 24 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 25 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 26 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 27 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 28 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 29 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 30 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 31 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 32 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 33 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 34 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 35 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 36 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 37 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 38 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 39 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 40 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 41 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 42 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 43 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 44 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 45 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 46 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 47 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 48 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 49 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 50 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 51 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 52 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 53 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 54 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 55 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 56 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 57 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 58 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 59 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 60 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 61 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 62 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 63 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 64 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 65 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 66 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 67 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 68 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 69 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 70 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 71 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 72 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 73 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 74 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 75 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 76 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 77 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 78 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 79 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 80 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 81 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 82 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 83 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 84 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 85 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 86 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 87 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 88 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 89 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 90 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 91 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 92 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 93 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 94 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 95 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 96 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 97 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 98 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 99 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 100 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 101 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 102 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 103 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 104 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 105 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 106 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 107 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 108 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 109 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 110 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 111 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 112 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 113 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 114 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 115 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 116 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 117 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 118 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 119 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 120 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 121 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 122 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 123 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 124 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 125 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 126 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 127 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 128 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 129 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 130 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 131 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 132 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 133 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 134 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 135 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 136 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 137 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 138 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 139 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 140 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 141 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 142 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 143 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 144 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 145 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 146 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 147 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 148 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 149 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 150 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 151 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 152 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 153 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 154 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 155 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 156 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 157 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 158 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 159 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 160 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 161 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 162 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 163 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 164 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 165 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 166 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 167 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 168 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 169 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 170 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 171 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 172 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 173 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 174 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 175 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 176 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 177 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 178 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 179 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 180 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 181 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 182 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 183 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 184 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 185 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 186 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 187 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 188 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 189 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 190 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 191 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 192 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 193 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 194 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 195 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 196 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 197 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 198 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 199 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 200 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 201 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 202 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 203 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 204 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 205 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 206 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 207 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 208 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 209 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 210 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 211 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 212 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 213 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 214 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 215 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 216 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 217 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 218 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 219 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 220 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 221 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 222 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 223 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 224 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 225 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 226 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 227 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 228 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 229 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 230 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 231 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 232 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 233 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 234 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 235 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 236 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 237 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 238 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 239 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 240 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 241 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 242 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 243 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 244 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 245 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 246 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 247 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 248 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 249 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 250 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 251 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 252 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 253 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 254 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 255 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 256 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 257 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 258 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 259 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 260 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 261 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 262 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 263 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 264 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 265 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 266 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 267 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 268 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 269 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 270 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 271 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 272 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 273 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 274 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 275 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 276 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 277 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 278 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 279 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 280 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
               /* Region 281 */
               {
                  0, /* Flag */
                  0, /* X */
                  0, /* Y */
                  0, /* Width */
                  0, /* Height */
               },
            },
         },
      },
      /* Gamma */
      {

         /*********************************************************************/
         // Feature: baf gamma configuration.
         //
         // Variable name: preset_id.
         // Preset ID for default gamma configuration.
         // Default value: 0.
         // Constraints: None.
         //
         // Variable name: gamma.
         // Custom gamma configuration as follows:
         //
         //   Variable name: ch_sel.
         //   Processing channel selection, 0=G, 1=Y.
         //   Default value: 0.
         //   Constraints: None.
         //
         //   Variable name: Y_coeffs[].
         //   Description: Y conversion coefficients.
         //   Default value: 0.
         //   Constraints: None.
         //
         //   Variable name: g_sel.
         //   Green Channel selection, 0=GR, 1=GB.
         //   Default value: 0.
         //   Constraints: None.
         //
         //   Variable name: LUT_enable.
         //   Description: Enable gamma LUT.
         //   Default value: 0.
         //   Constraints: None.
         //
         //   Variable name: gamma_LUT.
         //   Gamma LUT for R/{Gr,Gb}/B channels.
         //   Default value: 0.
         //   Constraints: None.
         /*********************************************************************/

         /* Normal Light */
         {
            AF_TUNING_PRESET_0, /* Preset ID */
            /* Custom Gamma */
            {
               0, /* CH Sel */
               {
                  0.000000f, 0.000000f, 0.000000f
               },
               0, /* G Sel */
               0, /* LUT Enable */
               {
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
               }
            },
         },
         /* Lowlight */
         {
            AF_TUNING_PRESET_0, /* Preset ID */
            /* Custom Gamma */
            {
               0, /* CH Sel */
               {
                  0.000000f, 0.000000f, 0.000000f
               },
               0, /* G Sel */
               0, /* LUT Enable */
               {
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
               }
            },
         },
         /* Face */
         {
            AF_TUNING_PRESET_0, /* Preset ID */
            /* Custom Gamma */
            {
               0, /* CH Sel */
               {
                  0.000000f, 0.000000f, 0.000000f
               },
               0, /* G Sel */
               0, /* LUT Enable */
               {
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
               }
            },
         },
      },
      /* Filter */
      {

         /*********************************************************************/
         // Feature: basic filter configuation.
         //
         // Filters:
         //
         // Variable name: preset_id.
         // Preset for H and V filters.
         // Default value: 0
         // Constraints: None.
         //
         // Coring configuration as follows:
         //
         //   Variable name: x_index[].
         //   5b, coring table indices, range [0, 1, ..., 16].
         //   Default value: 0.
         //   Constraints: None.
         //
         //   Variable name: threshold.
         //   Coring threshold value.
         //   Default value: 0.
         //   Constraints: None.
         //
         //   Variable name: gain.
         //   Coring gain value.
         //   Default value: 0.
         //   Constraints: None.
         //
         // Variable name: filter_custom
         // Description: custom configuration for H or V filter as follows:
         //
         //   Variable name: fir_en.
         //   Enable/disable FIR filter.
         //   Default value: 0.
         //   Constraints: None.
         //
         //   Variable name: iir_en.
         //   Enable/disable IIR filter.
         //   Default value: 0.
         //   Constraints: None.
         //
         //   Variable name: fir[].
         //   Description: 1 x 13 FIR filter 6s for coefficients
         //   Default value: 0
         //   Constraints: None.
         //
         //   Variable name: iir[].
         //   Description: 10 coefficients for IIR, float, b0, b1, b2, -a1, -a2.
         //   Default value: 0.
         //   Constraints: None.
         //
         //   Variable name: shift_bits.
         //   Description: 4s, shift between FIR and IIR.
         //   Default value: 0.
         //   Constraints: None.
         //
         //   Variable name: scaler_sel.
         //   Scaler enable for this filter.
         //   Default value: 0.
         //   Constraints: None.
         //
         // Scaler:
         //
         // Variable name: M.
         // Scaler factor for numerator.
         // Default value: 0.
         // Constraints: None.
         //
         // Variable name: N.
         // Scaler factor for denominator, M/N is the scaler factor, maximum 8/1.
         // Default value: 0.
         // Constraints: None.
         /*********************************************************************/

         /* Normal Light */
         {
            /* HV Filter */
            {
               /* Filter 0 */
               {
                  AF_TUNING_PRESET_0, /* Preset ID */
                  /* Coring */
                  {
                     /* X Index */
                     {
                        0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
                     },
                     16, /* Threshold */
                     16, /* Gain */
                  },
                  /* Custom Filter */
                  {
                     0, /* FIR Enable */
                     0, /* IIR Enable */
                     /* FIR Filter */
                     {
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                     },
                     /* IIR Filter */
                     {
                        0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
                     },
                     0, /* Shift Bits */
                     0, /* Scaler Sel */
                  },
               },
               /* Filter 1 */
               {
                  AF_TUNING_PRESET_0, /* Preset ID */
                  /* Coring */
                  {
                     /* X Index */
                     {
                        0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
                     },
                     16, /* Threshold */
                     16, /* Gain */
                  },
                  /* Custom Filter */
                  {
                     0, /* FIR Enable */
                     0, /* IIR Enable */
                     /* FIR Filter */
                     {
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                     },
                     /* IIR Filter */
                     {
                        0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
                     },
                     0, /* Shift Bits */
                     0, /* Scaler Sel */
                  },
               },
               /* Filter 2 */
               {
                  AF_TUNING_PRESET_0, /* Preset ID */
                  /* Coring */
                  {
                     /* X Index */
                     {
                        0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
                     },
                     16, /* Threshold */
                     16, /* Gain */
                  },
                  /* Custom Filter */
                  {
                     0, /* FIR Enable */
                     0, /* IIR Enable */
                     /* FIR Filter */
                     {
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                     },
                     /* IIR Filter */
                     {
                        0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
                     },
                     0, /* Shift Bits */
                     0, /* Scaler Sel */
                  },
               },
            },
            /* HV Filter 2nd Tier */
            {
               /* Filter 0 */
               {
                  AF_TUNING_PRESET_0, /* Preset ID */
                  /* Coring */
                  {
                     /* X Index */
                     {
                        0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
                     },
                     16, /* Threshold */
                     16, /* Gain */
                  },
                  /* Custom Filter */
                  {
                     0, /* FIR Enable */
                     0, /* IIR Enable */
                     /* FIR Filter */
                     {
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                     },
                     /* IIR Filter */
                     {
                        0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
                     },
                     0, /* Shift Bits */
                     0, /* Scaler Sel */
                  },
               },
               /* Filter 1 */
               {
                  AF_TUNING_PRESET_0, /* Preset ID */
                  /* Coring */
                  {
                     /* X Index */
                     {
                        0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
                     },
                     16, /* Threshold */
                     16, /* Gain */
                  },
                  /* Custom Filter */
                  {
                     0, /* FIR Enable */
                     0, /* IIR Enable */
                     /* FIR Filter */
                     {
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                     },
                     /* IIR Filter */
                     {
                        0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
                     },
                     0, /* Shift Bits */
                     0, /* Scaler Sel */
                  },
               },
            },
            /* Scaler */
            {
               1, /* M */
               1, /* N */
            },
         },
         /* Lowlight */
         {
            /* HV Filter */
            {
               /* Filter 0 */
               {
                  AF_TUNING_PRESET_0, /* Preset ID */
                  /* Coring */
                  {
                     /* X Index */
                     {
                        0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
                     },
                     16, /* Threshold */
                     16, /* Gain */
                  },
                  /* Custom Filter */
                  {
                     0, /* FIR Enable */
                     0, /* IIR Enable */
                     /* FIR Filter */
                     {
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                     },
                     /* IIR Filter */
                     {
                        0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
                     },
                     0, /* Shift Bits */
                     0, /* Scaler Sel */
                  },
               },
               /* Filter 1 */
               {
                  AF_TUNING_PRESET_0, /* Preset ID */
                  /* Coring */
                  {
                     /* X Index */
                     {
                        0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
                     },
                     16, /* Threshold */
                     16, /* Gain */
                  },
                  /* Custom Filter */
                  {
                     0, /* FIR Enable */
                     0, /* IIR Enable */
                     /* FIR Filter */
                     {
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                     },
                     /* IIR Filter */
                     {
                        0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
                     },
                     0, /* Shift Bits */
                     0, /* Scaler Sel */
                  },
               },
               /* Filter 2 */
               {
                  AF_TUNING_PRESET_0, /* Preset ID */
                  /* Coring */
                  {
                     /* X Index */
                     {
                        0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
                     },
                     16, /* Threshold */
                     16, /* Gain */
                  },
                  /* Custom Filter */
                  {
                     0, /* FIR Enable */
                     0, /* IIR Enable */
                     /* FIR Filter */
                     {
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                     },
                     /* IIR Filter */
                     {
                        0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
                     },
                     0, /* Shift Bits */
                     0, /* Scaler Sel */
                  },
               },
            },
            /* HV Filter 2nd Tier */
            {
               /* Filter 0 */
               {
                  AF_TUNING_PRESET_0, /* Preset ID */
                  /* Coring */
                  {
                     /* X Index */
                     {
                        0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
                     },
                     16, /* Threshold */
                     16, /* Gain */
                  },
                  /* Custom Filter */
                  {
                     0, /* FIR Enable */
                     0, /* IIR Enable */
                     /* FIR Filter */
                     {
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                     },
                     /* IIR Filter */
                     {
                        0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
                     },
                     0, /* Shift Bits */
                     0, /* Scaler Sel */
                  },
               },
               /* Filter 1 */
               {
                  AF_TUNING_PRESET_0, /* Preset ID */
                  /* Coring */
                  {
                     /* X Index */
                     {
                        0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
                     },
                     16, /* Threshold */
                     16, /* Gain */
                  },
                  /* Custom Filter */
                  {
                     0, /* FIR Enable */
                     0, /* IIR Enable */
                     /* FIR Filter */
                     {
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                     },
                     /* IIR Filter */
                     {
                        0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
                     },
                     0, /* Shift Bits */
                     0, /* Scaler Sel */
                  },
               },
            },
            /* Scaler */
            {
               1, /* M */
               1, /* N */
            },
         },
         /* Face */
         {
            /* HV Filter */
            {
               /* Filter 0 */
               {
                  AF_TUNING_PRESET_0, /* Preset ID */
                  /* Coring */
                  {
                     /* X Index */
                     {
                        0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
                     },
                     16, /* Threshold */
                     16, /* Gain */
                  },
                  /* Custom Filter */
                  {
                     0, /* FIR Enable */
                     0, /* IIR Enable */
                     /* FIR Filter */
                     {
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                     },
                     /* IIR Filter */
                     {
                        0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
                     },
                     0, /* Shift Bits */
                     0, /* Scaler Sel */
                  },
               },
               /* Filter 1 */
               {
                  AF_TUNING_PRESET_0, /* Preset ID */
                  /* Coring */
                  {
                     /* X Index */
                     {
                        0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
                     },
                     16, /* Threshold */
                     16, /* Gain */
                  },
                  /* Custom Filter */
                  {
                     0, /* FIR Enable */
                     0, /* IIR Enable */
                     /* FIR Filter */
                     {
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                     },
                     /* IIR Filter */
                     {
                        0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
                     },
                     0, /* Shift Bits */
                     0, /* Scaler Sel */
                  },
               },
               /* Filter 2 */
               {
                  AF_TUNING_PRESET_0, /* Preset ID */
                  /* Coring */
                  {
                     /* X Index */
                     {
                        0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
                     },
                     16, /* Threshold */
                     16, /* Gain */
                  },
                  /* Custom Filter */
                  {
                     0, /* FIR Enable */
                     0, /* IIR Enable */
                     /* FIR Filter */
                     {
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                     },
                     /* IIR Filter */
                     {
                        0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
                     },
                     0, /* Shift Bits */
                     0, /* Scaler Sel */
                  },
               },
            },
            /* HV Filter 2nd Tier */
            {
               /* Filter 0 */
               {
                  AF_TUNING_PRESET_0, /* Preset ID */
                  /* Coring */
                  {
                     /* X Index */
                     {
                        0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
                     },
                     16, /* Threshold */
                     16, /* Gain */
                  },
                  /* Custom Filter */
                  {
                     0, /* FIR Enable */
                     0, /* IIR Enable */
                     /* FIR Filter */
                     {
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                     },
                     /* IIR Filter */
                     {
                        0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
                     },
                     0, /* Shift Bits */
                     0, /* Scaler Sel */
                  },
               },
               /* Filter 1 */
               {
                  AF_TUNING_PRESET_0, /* Preset ID */
                  /* Coring */
                  {
                     /* X Index */
                     {
                        0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
                     },
                     16, /* Threshold */
                     16, /* Gain */
                  },
                  /* Custom Filter */
                  {
                     0, /* FIR Enable */
                     0, /* IIR Enable */
                     /* FIR Filter */
                     {
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                     },
                     /* IIR Filter */
                     {
                        0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f
                     },
                     0, /* Shift Bits */
                     0, /* Scaler Sel */
                  },
               },
            },
            /* Scaler */
            {
               1, /* M */
               1, /* N */
            },
         },
      },
   },
   /* PDAF3 */
   {

      /*********************************************************************/
      // Feature: PDAF Phase Difference Calculation.
      // Applicable chipset(s): SW version can be applied to any chipsets.
      //
      // First Part: Reserved Internal Parameters
      //
      // ROI Start location
      // Variable name: RegionTopLeft.
      // The left top location of region to be used in PDAF phase difference calculation.
      // Default value: RegionTopLeft.x = 800  RegionTopLeft.y = 900.
      // Constraints: The selected values will be inside the image.
      //
      // ROI End location
      // Variable name: RegionBotRight.
      // The right bottom location of region to be used in PDAF phase difference calculation.
      // Default value: RegionBotRight.x = 3200  RegionBotRight.y = 2100.
      // Constraints: The selected values will be inside the image.
      //
      // All Default Values are defined on 4(Q4) Bits' Data.
      // 1D Smooth Filter
      // Variable name: SmoothFilter[7].
      // Default values: SmoothFilter[0] = SmoothFilter[6] = 0,
      //                 SmoothFilter[1] = SmoothFilter[5] = 1,
      //                 SmoothFilter[2] = SmoothFilter[4] = 4,
      //                 SmoothFilter[3] = 6.
      // Data range: 0 to 15.
      // Constraints: The sum of all Item Values is 16.
      //
      // All Default Values are defined on 5 Bits' Data.
      // 1D Sobel Filter.
      // Variable name: SobelFilter[9].
      // Default values: SobelFilter[0] = SobelFilter[8] = 0,
      //                 SobelFilter[1] = SobelFilter[7] = 0,
      //                 SobelFilter[2] = SobelFilter[6] = -4,
      //                 SobelFilter[3] = SobelFilter[5] = 0,
      //                 SobelFilter[4] = 8.
      // Data range: -15 to 15.
      // Constraints: The sum of all Item Values is 0.
      //
      // The value is defined on 6(Q6) Bits' Data
      // Confidence Level Coefficient
      // Variable name: Confidence_k.
      // Coefficient value in confidence value calculation.
      // Default value: 64.
      // Data range: 0 to 255.
      // Effect: If this value is bigger, the final confidence value will
      //   prefer to be higher, and vice versa.
      //
      // Confidence Level Threshold
      // Variable name: DefocusConfidenceTh.
      // Confidence level threshold value.
      // default value: 20.
      // Data range: 0 to 128.
      // Effect: If this value is smaller, more regions (grids) PDAF outputs
      //   can be used for defocus calculation, and vice versa.
      //
      // Second Part: Customer Tuning Parameters
      //
      // Horizontal Grid Number
      // Variable name: HorGridNumber.
      // The central ROI will be divided into several grids, this is grid number along the x direction.
      // Default value: 6.
      // Data range: 1 to 20.
      //
      // Vertical Grid Number
      // Variable name: VerGridNumber.
      // The central ROI will be divided into several grids, this is grid number along the y direction.
      // default value: 4.
      // Data range: 1 to 20.
      /*********************************************************************/

      /* Region Top Left */
      {
         800, /* X */
         900, /* Y */
      },
      /* Region Bottom Right */
      {
         3200, /* X */
         2100, /* Y */
      },
      /* Smooth Filter */
      {
         1, 2, 3, 4, 3, 2, 1
      },
      /* Sobel Filter */
      {
         -2, -1, 0, 1, 4, 1, 0, -1, -2
      },
      1, /* Confidence K */
      20, /* Defocus Confidence Threshold */
      6, /* Horizontal Grid Number */
      4, /* Vertical Grid Number */
   },
},
/* AAA Sync */
{
   /* AEC */
   {

      /*********************************************************************/
      // Feature name: AEC Synchronization for dual sensor control.
      // Applicable chipset:  8952, 8996 and forward.
      //
      // Variable name: mode.
      // The AEC sync mode describes how the 2nd sensor follows the master sensor.
      // Default value: AEC_SYNC_MODE_DISABLE
      // Data range: AEC_SYNC_MODE_DISABLE, AEC_SYNC_MODE_ENABLE.
      // Constraints: None.
      // Effect: Changes the AEC sync follow strategy.
      //
      // Variable name: correction.
      // Multiplier that will be applied over the master sensor exposure.
      //   Should represent the sensetivity and apperture difference between the two sensors.
      // Default value: 1.0
      // Data range: 0.0 to 8.0
      // Constraints: None.
      // Effect: Brighter image with larger numbers.
      //
      // Variable name: trans_ms.
      // Time in ms for transition when the sync mode is changed.
      // Default value: 1000.
      // Data range: 0 to 10000.
      // Constraints: None.
      // Effect: AEC result gradually blends during transition period.
      /*********************************************************************/

      AEC_SYNC_MODE_DISABLE, /* Mode */
      1.000000f, /* Correction */
      1000.000f, /* Trans ms */
   },
   /* AWB */
   {

      /*********************************************************************/
      // Feature name: AWB Synchronization for dual sensor control.
      // Applicable chipset:  8952, 8996 and forward.
      //
      // Variable name: mode.
      // The AWB sync mode describes how the 2nd sensor follows the master sensor.
      // Default value: AWB_SYNC_MODE_DISABLE.
      // Data range: AWB_SYNC_MODE_SAME_SCALERS, AWB_SYNC_MODE_STATIC_CORRECTION, AWB_SYNC_MODE_DYNAMIC_CORRECTION.
      // Constraints: None.
      // Effect: Changes the AWB following strategy.
      //
      // Variable name: correction.
      // RGB Correction multiplies the white balance scalers coming from the master AWB results.
      // Default value: {1.0, 1.0, 1.0}.
      // Data range: 0.1 to 10 for each.
      // Constraints: None.
      // Effect: Modulation of RGB values.
      //
      // Variable name: aggressiveness.
      // Aggressiveness of correction changes when AWB_SYNC_MODE_DYNAMIC_CORRECTION is enabled.
      // Default value: 0.5
      // Data range: 0.0 to 1.0
      // Constraints: None.
      // Effect: Smaller numbers will reult smoother correction changes and hide temporal errors in dynamic correction.
      //
      // Variable name: trans_ms.
      // Time in ms for transition when the sync mode is changed.
      // Default value: 1000.
      // Data range: 0 to 10000.
      // Constraints: None.
      // Effect: WBC scalers gradually blend with the new results during transition period.
      /*********************************************************************/

      AWB_SYNC_MODE_DISABLE, /* Mode */
      /* Correction */
      {
         1.000000f, /* R */
         1.000000f, /* G */
         1.000000f, /* B */
      },
      0.500000f, /* Aggressiveness */
      1000.000f, /* Trans ms */
   },
},

/******************************************************************************/
// Feature name: Electronic Image Stabilization 2.0
// Variable name: focal_length
// Focal length in pixel units for 1080p.  This value is scaled for other
//   resolutions.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: 1755
// Data range: 1000 to 2000
// Constraints: 1000 to 2000
// Effect: Rolling shutter correction
//
// Variable name: gyro_pixel_scale
// Scale factor to convert degree of rotation (yaw and pitch) to pixels.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: 30
// Data range: 20 to 40
// Constraints: 20 to 40
// Effect: Rolling shutter correction
//
// Variable name: virtual_margin
// Extra margin that allows the IS algorithm to operate on a margin that is
//   larger than the actual physical margin provided by the sensor.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: 0.035 (based on 5% actual margin on each side)
// Data range: 0.000 to 0.070 in increments of 0.005
// Constraints: 0.000 to 0.070 in increments of 0.005
// Effect: Image stabilization.  Values greater than 0.0 allows the algorithm
//   to correct for bigger shake at the cost of reduced field of view.  The
//   image appears more zoomed which can result in less detail.
//
// Variable name: gyro_noise_floor
// Gyro noise floor.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: 0.003
// Data range: 0.003 to ...
// Constraints: 0.003 to ...
// Effect: Image stabilization.  The higher the gyro noise, the higher this
//   value.  Only when the gyro values are above this floor will the IS
//   algorithm use them to generate a correction matrix.
//
// Variable name: gyro_frequency
// Gyro sample frequency.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: 200
// Data range: 100 to 200 (Hz)
// Constraints: 100 to 200
// Effect: Image stabilization.
//
// Variable name: rs_offset_1
// Offset to adjust the rolling shutter gyro interval start/end times to better
//   align with the frame.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: -2000
// Data range: -15000 to 15000 (usec)
// Constraints: -15000 to 15000
//   For exposure times less than rs_threshold_1, the rolling shutter gyro
//   interval start/end times are adjusted by rs_offset_1.
// Effect: Rolling shutter correction
//
// Variable name: rs_offset_2
// Offset to adjust the rolling shutter gyro interval start/end times to better
//   align with the frame.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: -7000
// Data range: -15000 to 15000 (usec)
// Constraints: -15000 to 15000
//   For exposure times less than rs_threshold_2, the rolling shutter gyro
//   interval start/end times are adjusted by rs_offset_2.
// Effect: Rolling shutter correction
//
// Variable name: rs_offset_3
// Offset to adjust the rolling shutter gyro interval start/end times to better
//   align with the frame.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: -12000
// Data range: -15000 to 15000 (usec)
// Constraints: -15000 to 15000
//   For exposure times less than rs_threshold_3, the rolling shutter gyro
//   interval start/end times are adjusted by rs_offset_3.
// Effect: Rolling shutter correction
//
// Variable name: rs_offset_4
// Offset to adjust the rolling shutter gyro interval start/end times to better
//   align with the frame.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: -15000
// Data range: -15000 to 15000 (usec)
// Constraints: -15000 to 15000
//   For exposure times greater than or equal to rs_threshold_3, the rolling
//   shutter gyro interval start/end times are adjusted by rs_offset_4.
// Effect: Rolling shutter correction
//
// Variable name: s3d_offset_1
// Offset to adjust the 3D shake gyro interval start/end times to better
//   align with the frame.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: -2000
// Data range: -15000 to 15000 (usec)
// Constraints: -15000 to 15000
//   For exposure times less than s3d_threshold_1, the 3D shake gyro interval
//   start/end times are adjusted by s3d_offset_1.
// Effect: 3D shake correction
//
// Variable name: s3d_offset_2
// Offset to adjust the 3D shake gyro interval start/end times to better
//   align with the frame.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: -7000
// Data range: -15000 to 15000 (usec)
// Constraints: -15000 to 15000
//   For exposure times less than s3d_threshold_2, the 3D shake gyro interval
//   start/end times are adjusted by s3d_offset_2.
// Effect: 3D shake correction
//
// Variable name: s3d_offset_3
// Offset to adjust the 3D shake gyro interval start/end times to better
//   align with the frame.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: -12000
// Data range: -15000 to 15000 (usec)
// Constraints: -15000 to 15000
//   For exposure times less than s3d_threshold_3, the 3D shake gyro interval
//   start/end times are adjusted by s3d_offset_3.
// Effect: 3D shake correction
//
// Variable name: s3d_offset_4
// Offset to adjust the 3D shake gyro interval start/end times to better
//   align with the frame.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: -15000
// Data range: -15000 to 15000 (usec)
// Constraints: -15000 to 15000
//   For exposure times greater than or equal to s3d_threshold_3, the 3D shake
//   gyro interval start/end times are adjusted by s3d_offset_4.
// Effect: 3D shake correction
//
// Variable name: rs_threshold_1
// The exposure threshold whereby exposure times above and below this threshold
//   results in a different offset getting applied to the rolling shutter gyro
//   time interval.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: 0.005
// Data range: 0.000 to 0.050 (sec)
// Constraints: 0.000 to 0.050
//   For exposure times less than rs_threshold_1, the rolling shutter gyro
//   interval start/end times are adjusted by rs_offset_1.
// Effect: Rolling shutter correction
//
// Variable name: rs_threshold_2
// The exposure threshold whereby exposure times above and below this threshold
//   results in a different offset getting applied to the rolling shutter gyro
//   time interval.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: 0.010
// Data range: 0.000 to 0.050 (sec)
// Constraints: 0.000 to 0.050
//   For exposure times less than rs_threshold_2, the rolling shutter gyro
//   interval start/end times are adjusted by rs_offset_2.
// Effect: Rolling shutter correction
//
// Variable name: rs_threshold_3
// The exposure threshold whereby exposure times above and below this threshold
//   results in a different offset getting applied to the rolling shutter gyro
//   time interval.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: 0.020
// Data range: 0.000 to 0.050 (sec)
// Constraints: 0.00 to 0.050
//   For exposure times less than rs_threshold_3, the rolling shutter gyro
//   interval start/end times are adjusted by rs_offset_3.  For exposure times
//   greater than or equal to rs_threshold_3, the rolling shutter gyro interval
//   start/end times are adjusted by rs_offset_4.
// Effect: Rolling shutter correction
//
// Variable name: s3d_threshold_1
// The exposure threshold whereby exposure times above and below this threshold
//   results in a different offset getting applied to the 3D shake gyro
//   time interval.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: 0.005
// Data range: 0.000 to 0.050 (sec)
// Constraints: 0.000 to 0.050
//   For exposure times less than s3d_threshold_1, the 3D shake gyro interval
//   start/end times are adjusted by s3d_offset_1.
// Effect: 3D shake correction
//
// Variable name: s3d_threshold_2
// The exposure threshold whereby exposure times above and below this threshold
//   results in a different offset getting applied to the 3D shake gyro
//   time interval.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: 0.010
// Data range: 0.000 to 0.050 (sec)
// Constraints: 0.000 to 0.050
//   For exposure times less than s3d_threshold_2, the 3D shake gyro interval
//   start/end times are adjusted by s3d_offset_2.
// Effect: 3D shake correction
//
// Variable name: s3d_threshold_3
// The exposure threshold whereby exposure times above and below this threshold
//   results in a different offset getting applied to the rolling shutter gyro
//   time interval.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: 0.020
// Data range: 0.000 to 0.050 (sec)
// Constraints: 0.000 to 0.050
//   For exposure times less than s3d_threshold_3, the 3D shake gyro interval
//   start/end times are adjusted by s3d_offset_3.  For exposure times greater
//   than or equal to s3d_threshold_3, the 3D shake gyro interval start/end
//   times are adjusted by s3d_offset_4.
// Effect: 3D shake correction
//
// Variable name: rs_time_interval_1
// Width of the rolling shutter gyro time interval.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: 30
// Data range: 0 to 33 (msec)
// Constraints: 0 to 33
//   For exposure times less than rs_threshold_1, the rolling shutter gyro
//   time interval is rs_time_interval_1.
// Effect: Rolling shutter correction
//
// Variable name: rs_time_interval_2
// Width of the rolling shutter gyro time interval.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: 30
// Data range: 0 to 33 (msec)
// Constraints: 0 to 33
//   For exposure times less than rs_threshold_2, the rolling shutter gyro
//   time interval is rs_time_interval_2.
// Effect: Rolling shutter correction
//
// Variable name: rs_time_interval_3
// Width of the rolling shutter gyro time interval.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: 30
// Data range: 0 to 33 (msec)
// Constraints: 0 to 33
//   For exposure times less than rs_threshold_3, the rolling shutter gyro
//   time interval is rs_time_interval_3.
// Effect: Rolling shutter correction
//
// Variable name: rs_time_interval_4
// Width of the rolling shutter gyro time interval.
// Applicable chipset(s): Targets with gyro sensor
// Applicable operation mode:  Camcorder
// Default value: 30
// Data range: 0 to 33 (msec)
// Constraints: 0 to 33
//   For exposure times greater than or equal to rs_threshold_3, the rolling
//   shutter gyro time interval is rs_time_interval_4.
// Effect: Rolling shutter correction
/******************************************************************************/

/* EIS */
{
   0, /* EIS Enable */
   1755, /* EIS Focal Length */
   30, /* EIS Gyro Pixel Scale */
   0.035000f, /* EIS Virtual Margin */
   0.003000f, /* EIS Gyro Noise Floor */
   200, /* EIS Gyro Frequency */
   -2000, /* EIS RS Offset1 */
   -7000, /* EIS RS Offset2 */
   -12000, /* EIS RS Offset3 */
   -15000, /* EIS RS Offset4 */
   -2000, /* EIS S3D Offset1 */
   -7000, /* EIS S3D Offset2 */
   -12000, /* EIS S3D Offset3 */
   -15000, /* EIS S3D Offset4 */
   0.005000f, /* EIS RS Threshold1 */
   0.010000f, /* EIS RS Threshold2 */
   0.020000f, /* EIS RS Threshold3 */
   0.005000f, /* EIS S3D Threshold1 */
   0.010000f, /* EIS S3D Threshold2 */
   0.020000f, /* EIS S3D Threshold3 */
   30, /* EIS RS Time Interval1 */
   30, /* EIS RS Time Interval2 */
   30, /* EIS RS Time Interval3 */
   30, /* EIS RS Time Interval4 */
   0, /* EIS Reserve1 */
   0, /* EIS Reserve2 */
   0, /* EIS Reserve3 */
   0, /* EIS Reserve4 */
},
/*
 * Copyright (c) 2018 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 *
 */

package vendor.qti.hardware.radio.qtiradio@2.0;

import @1.0::IQtiRadioResponse;
import @1.0::QtiRadioResponseInfo;
import android.hardware.radio@1.0::SendSmsResult;
/*
 * Interface declaring responses to solicited qtiradio requests
 *
 */
interface IQtiRadioResponse extends @1.0::IQtiRadioResponse {
     /**
     * Response to IQtiRadio.enable5g
     *
     * @param serial to match request/response. Response must inclue same serial as request.
     * @param errorCode - errorCode as per types.hal returned from RIL.
     * @param status SUCCESS/FAILURE of the request.
     */
    oneway onEnable5gResponse(int32_t serial, uint32_t errorCode, Status status);

     /**
     * Response to IQtiRadio.disable5g
     *
     * @param serial to match request/response. Response must inclue same serial as request.
     * @param errorCode - errorCode as per types.hal returned from RIL.
     * @param status SUCCESS/FAILURE of the request.
     */
    oneway onDisable5gResponse(int32_t serial, uint32_t errorCode, Status status);

     /**
     * Response to IQtiRadio.enable5gOnly
     *
     * @param serial to match request/response. Response must inclue same serial as request.
     * @param errorCode - errorCode as per types.hal returned from RIL.
     * @param status SUCCESS/FAILURE of the request.
     */
    oneway onEnable5gOnlyResponse(int32_t serial, uint32_t errorCode, Status status);

     /**
     * Response to IQtiRadio.query5gStatus
     *
     * @param serial to match request/response. Response must inclue same serial as request.
     * @param errorCode - errorCode as per types.hal returned from RIL.
     * @param enabled values as per types.hal to indicate status of 5g in NSA or SA mode.
     */
    oneway on5gStatusResponse(int32_t serial, uint32_t errorCode, EnableStatus enabled);

     /**
     * Response to IQtiRadio.queryNrDcParam
     *
     * @param serial to match request/response. Response must inclue same serial as request.
     * @param errorCode - errorCode as per types.hal returned from RIL.
     * @param dcParam info about EN-DC and restrict-DCNR..
     */
    oneway onNrDcParamResponse(int32_t serial, uint32_t errorCode, DcParam dcParam);

     /**
     * Response to IQtiRadio.queryNrBearerAllocation
     *
     * @param serial to match request/response. Response must inclue same serial as request.
     * @param errorCode - errorCode as per types.hal returned from RIL.
     * @param bearerStatus values as per types.hal to indicate status of 5g bearer allocation..
     */
    oneway onNrBearerAllocationResponse(int32_t serial, uint32_t errorCode,
            BearerStatus bearerStatus);

     /**
     * Response to IQtiRadio.queryNrSignalStrength
     *
     * @param serial to match request/response. Response must inclue same serial as request.
     * @param errorCode - errorCode as per types.hal returned from RIL.
     * @param signalStrength values as per types.hal to indicate 5g signal strength parameters.
     */
    oneway onSignalStrengthResponse(int32_t serial, uint32_t errorCode,
            SignalStrength signalStrength);

    /**
     * @param info Response info struct containing response type, serial no. and error
     * @param sms Sms result struct as defined by SendSmsResult in types.hal
     *
     * Valid errors returned:
     *   RadioError:NONE
     *   RadioError:RADIO_NOT_AVAILABLE
     *   RadioError:INVALID_ARGUMENTS
     *   RadioError:SMS_SEND_FAIL_RETRY
     *   RadioError:NETWORK_REJECT
     *   RadioError:INVALID_STATE
     *   RadioError:NO_MEMORY
     *   RadioError:REQUEST_RATE_LIMITED
     *   RadioError:INVALID_SMS_FORMAT
     *   RadioError:SYSTEM_ERR
     *   RadioError:FDN_CHECK_FAILURE
     *   RadioError:MODEM_ERR
     *   RadioError:NETWORK_ERR
     *   RadioError:ENCODING_ERR
     *   RadioError:INVALID_SMSC_ADDRESS
     *   RadioError:INTERNAL_ERR
     *   RadioError:SYSTEM_ERR
     *   RadioError:REQUEST_NOT_SUPPORTED
     *   RadioError:OPERATION_NOT_ALLOWED
     *   RadioError:ENCODING_ERR
     *   RadioError:NO_RESOURCES
     *   RadioError:CANCELLED
     *   RadioError:SIM_ABSENT
     */
    oneway sendCdmaSmsResponse(QtiRadioResponseInfo info, SendSmsResult sms);
};

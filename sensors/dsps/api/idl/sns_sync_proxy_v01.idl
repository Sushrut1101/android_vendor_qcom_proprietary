/*****************************************************************************
  @FILE     sns_sync_proxy_v01.idl

  @BRIEF    Proxy service for synchronized communication with the SSC

  @DESCRIPTION
  Provides synchronized access to services, so the SSC can synchronize wakeups
  with other subsystems

  @COPYRIGHT
  Copyright (c) 2014 Qualcomm Technologies, Inc.  All Rights Reserved
  Qualcomm Technologies Proprietary and Confidential.

*****************************************************************************/
include "sns_common_v01.idl";

revision 0;

//!============================================================================
/** @COMMAND SNS_SYNC_PROXY_MOTION_ENABLE
    @BRIEF Enables the motion detection algorithm. Service will send indications
    when the state changes
    @CMD_VERSION 1.0
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//!============================================================================

/** Maximum number of DRX schedules which can be tracked by the sync proxy
    at one time */
const SNS_SYNC_PROXY_MAX_SCHEDS = 10;


//! @ENUM   SNS_SYNC_PROXY_MOTION_STATE_ENUM
enum {
  SNS_SYNC_PROXY_MOTION_UNKNOWN    = 0,
  SNS_SYNC_PROXY_MOTION_REST       = 1,
  SNS_SYNC_PROXY_MOTION_MOVE       = 2
} sns_sync_proxy_motion_state_e;


/** This structure defines a periodic synchronization schedule */
struct {
  uint64 absolute_qtimer_value;
  /**< An absolute qtimer value when the client processor will wake up */
  uint32 qtimer_interval;
  /**< Interval period (in qtimer units) at which the client processor wakes up */
} sns_sync_proxy_sync_schedule_s;



//! @MSG     SNS_SYNC_PROXY_MOTION_ENABLE_REQ
//! @TYPE    Request
//! @SENDER  Client
message {
//! @VERSION 1.0
//! @VERSION_INTRODUCED 1.0
  mandatory sns_sync_proxy_sync_schedule_s sync_schedule<SNS_SYNC_PROXY_MAX_SCHEDS>;
  /**< Client wakeup schedule. The service may support multiple schedules. If
     the service supports fewer schedules than provided, it will honor the first
     schedule(s) in the array */
//! @VERSION 1.0
//! @VERSION_INTRODUCED 1.0
  mandatory uint32                         stationary_to_motion_latency;
  /**< State change detection latency requirements, in QTimer ticks */
//! @VERSION 1.0
//! @VERSION_INTRODUCED 1.0
  mandatory uint32                         motion_to_stationary_latency;
  /**< State change detection latency requirements, in QTimer ticks */
} sns_sync_proxy_motion_enable_req_msg;

//! @MSG     SNS_SYNC_PROXY_MOTION_ENABLE_RESP
//! @TYPE    Response
//! @SENDER  Service
message {
//! @VERSION 1.0
//! @VERSION_INTRODUCED 1.0
  mandatory sns_common_resp_s Resp = 2;
//! @VERSION 1.0
//! @VERSION_INTRODUCED 1.0
  optional  uint32            num_sync_schedules_processed;
  /**< Number of sync schedules which will be honored by the service */
} sns_sync_proxy_motion_enable_resp_msg;


//!============================================================================
/** @COMMAND SNS_SYNC_PROXY_MOTION_IND
    @BRIEF
    @CMD_VERSION 1.0
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//!============================================================================

//! @MSG     SNS_SYNC_PROXY_MOTION_IND
//! @TYPE    Indication
//! @SENDER  Service
message {
//! @VERSION 1.0
//! @VERSION_INTRODUCED 1.0
  mandatory uint32                          timestamp;
  /**< Timestamp of the event, in SSC ticks */
//! @VERSION 1.0
//! @VERSION_INTRODUCED 1.0
  mandatory sns_sync_proxy_motion_state_e   state;
} sns_sync_proxy_motion_ind_msg;




//!============================================================================
/** Service definition */
//!============================================================================
service SNS_SYNC_PROXY_SVC {

  //! @ID SNS_COMMON_CANCEL
  sns_common_cancel_req_msg        SNS_SYNC_PROXY_CANCEL_REQ,
  sns_common_cancel_resp_msg       SNS_SYNC_PROXY_CANCEL_RESP
    = 0x00;

  //! @ID SNS_COMMON_VERSION
  sns_common_version_req_msg       SNS_SYNC_PROXY_VERSION_REQ,
  sns_common_version_resp_msg      SNS_SYNC_PROXY_VERSION_RESP
    = 0x01;

  //! @ID SNS_SYNC_PROXY_MOTION_ENABLE
  sns_sync_proxy_motion_enable_req_msg  SNS_SYNC_PROXY_MOTION_ENABLE_REQ,
  sns_sync_proxy_motion_enable_resp_msg SNS_SYNC_PROXY_MOTION_ENABLE_RESP
    = 0x20;

  //! @ID SNS_SYNC_PROXY_MOTION_IND
  sns_sync_proxy_motion_ind_msg           SNS_SYNC_PROXY_MOTION_IND
    = 0x21;

} = SNS_QMI_SVC_ID_50;

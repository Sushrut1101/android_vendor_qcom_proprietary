/*
 * Copyright (c) 2018 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 *
 */

package vendor.qti.hardware.radio.uim@1.1;

import @1.0::IUimResponse;
import @1.0::UimRemoteSimlockResponseType;
import @1.0::UimRemoteSimlockVersion;
import @1.0::UimRemoteSimlockStatus;

interface IUimResponse extends @1.0::IUimResponse {
  /**
   * UIM_REMOTE_SIMLOCK_RESPONSE_1_1
   *
   * @param token Id to match req-resp. Value must match the one in req.
   * @param response Remote simlock response
   * @param simlockOp remote simlock requested operation
   * @param simlockRspData simlock response data valid for requested operation
   *        Encrypted Key for UIM_REMOTE_SIMLOCK_GENERATE_ENCRYPTED_KEY
   *        Simlock response BLOB for UIM_REMOTE_SIMLOCK_PROCESS_SIMLOCK_DATA
   *        HMAC data for UIM_REMOTE_SIMLOCK_GENERATE_HMAC
   *        BLOB data for UIM_REMOTE_SIMLOCK_GENERATE_BLOB_REQUEST
   * @param version Simlock blob highest version supported valid for requested
            operation UIM_REMOTE_SIMLOCK_GET_MAX_SUPPORTED_VERSION
   * @param status Status of the simlock valid for requested operation
            UIM_REMOTE_SIMLOCK_GET_STATUS
   */
  oneway uimRemoteSimlockResponse_1_1(int32_t token,
                                      UimRemoteSimlockResponseType  response,
                                      UimRemoteSimlockOperationType simlockOp,
                                      vec<uint8_t>                  simlockRspData,
                                      UimRemoteSimlockVersion       version,
                                      UimRemoteSimlockStatus        status);

  /**
   * UIM_REMOTE_SIMLOCK_TIMER_RESPONSE_1_1
   *
   * @param token Id to match req-resp. Value must match the one in req.
   * @param response Remote simlock response
   * @param timerValue timer value started by simlock engine
   */
  oneway uimRemoteSimlockTimerResponse_1_1(int32_t token,
                                           UimRemoteSimlockResponseType  response,
                                           int32_t timerValue);
};

/*
 * Copyright (c) 2017 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 *
 */

package vendor.qti.hardware.radio.uim_remote_client@1.0;

enum UimRemoteClientEventStatusType : uint32_t {
    UIM_REMOTE_STATUS_CONN_UNAVAILABLE = 0,
    UIM_REMOTE_STATUS_CONN_AVAILABLE   = 1,
    UIM_REMOTE_STATUS_CARD_INSERTED    = 2,
    UIM_REMOTE_STATUS_CARD_REMOVED     = 3,
    UIM_REMOTE_STATUS_CARD_ERROR       = 4,
    UIM_REMOTE_STATUS_CARD_RESET       = 5,
    UIM_REMOTE_STATUS_CARD_WAKEUP      = 6
};

enum UimRemoteClientRsp : uint32_t {
    UIM_REMOTE_ERR_SUCCESS           = 0,
    UIM_REMOTE_ERR_GENERIC_FAILURE   = 1,
    UIM_REMOTE_ERR_NOT_SUPPORTED     = 2,
    UIM_REMOTE_ERR_INVALID_PARAMETER = 3
};

enum UimRemoteClientErrorCauseType : uint32_t {
    UIM_REMOTE_CARD_ERROR_UNKNOWN            = 0,
    UIM_REMOTE_CARD_ERROR_NO_LINK_EST        = 1,
    UIM_REMOTE_CARD_ERROR_CMD_TIMEOUT        = 2,
    UIM_REMOTE_CARD_ERROR_POWER_DOWN         = 3,
    UIM_REMOTE_CARD_ERROR_POWER_DOWN_TELECOM = 4
};

enum UimRemoteClientTransportType : uint32_t {
    UIM_REMOTE_TRANSPORT_OTHER     = 0,
    UIM_REMOTE_TRANSPORT_BLUETOOTH = 1,
    UIM_REMOTE_TRANSPORT_IP        = 2
};

enum UimRemoteClientUsageType : uint32_t {
    UIM_REMOTE_USAGE_REDUCED = 0,
    UIM_REMOTE_USAGE_NORMAL  = 1
};

enum UimRemoteClientEventRsp : uint32_t {
    UIM_REMOTE_SUCCESS = 0,
    UIM_REMOTE_FAILURE = 1
};

enum UimRemoteClientApduStatus : uint32_t {
    UIM_REMOTE_SUCCESS = 0,
    UIM_REMOTE_FAILURE = 1
};

enum UimRemoteClientApduRsp : uint32_t {
    UIM_REMOTE_SUCCESS = 0,
    UIM_REMOTE_FAILURE = 1
};

enum UimRemoteClientVoltageClass : uint32_t {
    UIM_REMOTE_VOLTAGE_CLASS_C_LOW  = 0,
    UIM_REMOTE_VOLTAGE_CLASS_C      = 1,
    UIM_REMOTE_VOLTAGE_CLASS_C_HIGH = 2,
    UIM_REMOTE_VOLTAGE_CLASS_B_LOW  = 3,
    UIM_REMOTE_VOLTAGE_CLASS_B      = 4,
    UIM_REMOTE_VOLTAGE_CLASS_B_HIGH = 5
};

enum UimRemoteClientPowerDownMode : uint32_t {
    UIM_REMOTE_PDOWN_TELECOM_INTERFACE = 0,
    UIM_REMOTE_PDOWN_CARD              = 1
};

struct UimRemoteEventReqType {
    UimRemoteClientEventStatusType event;
    vec<uint8_t>                   atr;     //Present for event = UIM_REMOTE_STATUS_CARD_INSERTED
    bool                           has_wakeupSupport;
    bool                           wakeupSupport; //Present if remote UIM supports wake-up feature
    bool                           has_errorCode;
    UimRemoteClientErrorCauseType  errorCode;    //Present for evnt = UIM_REMOTE_STATUS_CARD_ERROR
    bool                           has_transport;
    UimRemoteClientTransportType   transport;
    bool                           has_usage;
    UimRemoteClientUsageType       usage;
    bool                           has_apdu_timeout;
    uint32_t                       apduTimeout;
    bool                           has_disable_all_polling;
    uint32_t                       disableAllPolling;
    bool                           has_poll_timer;
    uint32_t                       pollTimer;
};

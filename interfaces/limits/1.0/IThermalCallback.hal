/*
 * Copyright (c) 2017 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 */

package vendor.qti.hardware.limits@1.0;

/**
 * Callback Interface exposed by the IThermal HIDL interface.
 * Clients need to host an instance of this HIDL interface object and
 * pass a reference of the object to the limits hal via the
 * IThermal.registerCallback method. Use same instance of this HIDL
 * interface object to unregister with limits hal.
 */
interface IThermalCallback {
  /**
   * Notifies caller about an event from thermal framework
   *
   * @param report_buf is the string describing the event.
   *        String format will be as below order
   *   "<sensor name>\n<temp in mC>\n<thresh level>\n<is trigger>\n<rule name>".
   *
   * For below sample rule in thermal-engine,
   *
   *  [CPU0-MONITOR-REPORT_RULE]
   *  algo_type monitor
   *  sampling 1000
   *  sensor cpu0-silver-usr
   *  thresholds 75000
   *  thresholds_clr 65000
   *  actions report_rule
   *  action_info 1
   *
   * report_buf string when it violates threshold will be as below
   * "cpu0-silver-usr
   *  75000
   *  1
   *  true
   *  CPU0-MONITOR-REPORT_RULE"
   *
   * @param report is the parsed report_buf data filled in ThermalReport struct.
   */
  oneway onThermReport(string report_buf, ThermalReport report);
};

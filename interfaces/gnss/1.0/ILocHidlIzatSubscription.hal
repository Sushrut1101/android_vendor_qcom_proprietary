/*
 * Copyright (c) 2017 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 */

package vendor.qti.gnss@1.0;

import ILocHidlIzatSubscriptionCallback;

interface ILocHidlIzatSubscription {
    struct BoolDataItem {
        int32_t id;
        bool enabled;
    };

    struct StringDataItem {
        int32_t id;
        string str;
    };

    struct NetworkInfoDataItem {
        int32_t type;
        string typeName;
        string subTypeName;
        bool available;
        bool connected;
        bool roaming;
    };

    struct RilServiceInfoDataItem {
        uint32_t type;
        uint32_t mcc;
        uint32_t mnc;
        string name;
    };

    struct CellLteDataItem {
        int32_t type;
        int32_t status;
        int32_t mcc;
        int32_t mnc;
        int32_t cid;
        int32_t pci;
        int32_t tac;
        int32_t mask;
    };

    struct CellGwDataItem {
        int32_t type;
        int32_t status;
        int32_t mcc;
        int32_t mnc;
        int32_t lac;
        int32_t cid;
        int32_t mask;
    };

    struct CellCdmaDataItem {
        int32_t type;
        int32_t status;
        int32_t sid;
        int32_t nid;
        int32_t bsid;
        int32_t bslat;
        int32_t bslong;
        int32_t timeOffset;
        int32_t mask;
        bool inDST;
    };

    struct CellOooDataItem {
        int32_t status;
        int32_t mask;
    };

    struct ServiceStateDataItem {
        int32_t status;
    };

    struct ScreenStatusDataItem {
        bool status;
    };

    struct PowerConnectStatusDataItem {
        bool status;
    };

    struct TimeZoneChangeDataItem {
        int64_t curTimeMillis;
        int32_t rawOffset;
        int32_t dstOffset;
    };

    struct TimeChangeDataItem {
        int64_t curTimeMillis;
        int32_t rawOffset;
        int32_t dstOffset;
    };

    struct WifiSupplicantStatusDataItem {
        int32_t state;
        bool apMacAddressValid;
        bool apSsidValid;
        vec<uint8_t> apMacAddress;
        string apSsid;
    };

    struct BtLeDeviceScanDetailsDataItem {
        bool validSrnData;
        int32_t apSrnRssi;
        vec<uint8_t> apSrnMacAddress;
        int64_t apSrnTimestamp;
        int64_t requestTimestamp;
        int64_t receiveTimestamp;
        int32_t errorCause;
    };

    struct BtDeviceScanDetailsDataItem {
        bool validSrnData;
        int32_t apSrnRssi;
        vec<uint8_t> apSrnMacAddress;
        int64_t apSrnTimestamp;
        int64_t requestTimestamp;
        int64_t receiveTimestamp;
        int32_t errorCause;
    };

    init(ILocHidlIzatSubscriptionCallback callback) generates (bool success);
    deinit();

    boolDataItemUpdate(vec<BoolDataItem> dataItemArray);
    stringDataItemUpdate(StringDataItem dataItem);
    networkinfoUpdate(NetworkInfoDataItem dataItem);
    serviceinfoUpdate(RilServiceInfoDataItem dataItem);
    cellLteUpdate(CellLteDataItem dataItem);
    cellGwUpdate(CellGwDataItem dataItem);
    cellCdmaUpdate(CellCdmaDataItem dataItem);
    cellOooUpdate(CellOooDataItem dataItem);
    serviceStateUpdate(ServiceStateDataItem dataItem);
    screenStatusUpdate(ScreenStatusDataItem dataItem);
    powerConnectStatusUpdate(PowerConnectStatusDataItem dataItem);
    timezoneChangeUpdate(TimeZoneChangeDataItem dataItem);
    timeChangeUpdate(TimeChangeDataItem dataItem);
    shutdownUpdate();
    wifiSupplicantStatusUpdate(WifiSupplicantStatusDataItem dataItem);
    btleScanDataInject(BtLeDeviceScanDetailsDataItem dataItem);
    btClassicScanDataInject(BtDeviceScanDetailsDataItem dataItem);
};

/*
 * Copyright (c) 2017 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 */

#ifndef __IMX376_LIB_H__
#define __IMX376_LIB_H__

#include "sensor_lib.h"
#define SENSOR_MODEL "imx376"

/* IMX376 REGISTERS */
#define IMX376_DIG_GAIN_GR_ADDR           0x020E
#define IMX376_DIG_GAIN_R_ADDR            0x0210
#define IMX376_DIG_GAIN_B_ADDR            0x0212
#define IMX376_DIG_GAIN_GB_ADDR           0x0214
#define IMX376_EXP_RATIO_ADDR             0x0222
#define IMX376_ABS_GAIN_R_WORD_ADDR       0x0B90
#define IMX376_ABS_GAIN_B_WORD_ADDR       0x0B92
#define IMX376_SHORT_COARSE_INT_TIME_ADDR 0x0224
#define IMX376_SHORT_GAIN_ADDR            0x0216

/* IMX376 CONSTANTS */
#define IMX376_MAX_INTEGRATION_MARGIN   10

/* STATS DATA TYPE */
#define IMX376_CSI_PD_ISTATS            0x36

#define IMX376_DATA_PEDESTAL            0x40    /* 10bit value */

#define IMX376_MIN_AGAIN_REG_VAL        0       /* 1.0x */

/* IMX376_MAX_AGAIN_REG_VAL is 981=0x3D5
 * Maximum Analog Gain: 24 times
 * only use Maximum Analog Gain 16 times here.
 */
#define IMX376_MAX_AGAIN_REG_VAL        960     /* 16.0x */

#define IMX376_MIN_DGAIN_REG_VAL        256     /* 1.0x */
#define IMX376_MAX_DGAIN_REG_VAL        511     /* 2.0x */

#define IMX376_MAX_DGAIN_DECIMATOR      256

/* IMX376 FORMULAS */
#define IMX376_MIN_AGAIN    (1024 / (1024 - IMX376_MIN_AGAIN_REG_VAL))
#define IMX376_MAX_AGAIN    (1024 / (1024 - IMX376_MAX_AGAIN_REG_VAL))

#define IMX376_MIN_DGAIN    (IMX376_MIN_DGAIN_REG_VAL / 256)
#define IMX376_MAX_DGAIN    (IMX376_MAX_DGAIN_REG_VAL / 256)

#define IMX376_MIN_GAIN     IMX376_MIN_AGAIN * IMX376_MIN_DGAIN
#define IMX376_MAX_GAIN     IMX376_MAX_AGAIN * IMX376_MAX_DGAIN
#define FULL_SIZE_WIDTH     5184
#define FULL_SIZE_HEIGHT    3880

#define CL_SHIFT 3 /* confidence level shift to prevent overflow */
#define CL_SHIFT_BINNING 2

#define SCALE_X(n) (n/(float)FULL_SIZE_WIDTH)
#define SCALE_Y(n) (n/(float)FULL_SIZE_HEIGHT)

#define START_REG_ARRAY \
{ \
  {0x0100, 0x01, 0x00}, \
}

#define STOP_REG_ARRAY \
{ \
  {0x0100, 0x00, 0x00}, \
}

#define GROUPON_REG_ARRAY \
{ \
  {0x0104, 0x01, 0x00}, \
}

#define GROUPOFF_REG_ARRAY \
{ \
  {0x0104, 0x00, 0x00}, \
}

#define INIT0_REG_ARRAY \
{ \
  {0x0136, 0x18, 0x00}, \
  {0x0137, 0x00, 0x00}, \
  {0x3C7D, 0x18, 0x00}, \
  {0x3C7E, 0x02, 0x00}, \
  {0x3C7F, 0x06, 0x00}, \
  {0x3F02, 0x02, 0x00}, \
  {0x3F22, 0x01, 0x00}, \
  {0x3F7F, 0x01, 0x00}, \
  {0x4421, 0x04, 0x00}, \
  {0x4430, 0x05, 0x00}, \
  {0x4431, 0xDC, 0x00}, \
  {0x5222, 0x02, 0x00}, \
  {0x56B7, 0x74, 0x00}, \
  {0x6204, 0xC6, 0x00}, \
  {0x620E, 0x27, 0x00}, \
  {0x6210, 0x69, 0x00}, \
  {0x6211, 0xD6, 0x00}, \
  {0x6213, 0x01, 0x00}, \
  {0x6215, 0x5A, 0x00}, \
  {0x6216, 0x75, 0x00}, \
  {0x6218, 0x5A, 0x00}, \
  {0x6219, 0x75, 0x00}, \
  {0x6220, 0x03, 0x00}, \
  {0x6222, 0x0C, 0x00}, \
  {0x6225, 0x19, 0x00}, \
  {0x6228, 0x32, 0x00}, \
  {0x6229, 0x70, 0x00}, \
  {0x622B, 0x64, 0x00}, \
  {0x622E, 0xB0, 0x00}, \
  {0x6231, 0x71, 0x00}, \
  {0x6234, 0x06, 0x00}, \
  {0x6236, 0x46, 0x00}, \
  {0x6237, 0x43, 0x00}, \
  {0x6239, 0x0C, 0x00}, \
  {0x623C, 0x19, 0x00}, \
  {0x623F, 0x32, 0x00}, \
  {0x6240, 0x71, 0x00}, \
  {0x6242, 0x64, 0x00}, \
  {0x6243, 0x44, 0x00}, \
  {0x6245, 0xB0, 0x00}, \
  {0x6246, 0xA8, 0x00}, \
  {0x6248, 0x71, 0x00}, \
  {0x624B, 0x06, 0x00}, \
  {0x624D, 0x46, 0x00}, \
  {0x625C, 0xC9, 0x00}, \
  {0x625F, 0x92, 0x00}, \
  {0x6262, 0x26, 0x00}, \
  {0x6264, 0x46, 0x00}, \
  {0x6265, 0x45, 0x00}, \
  {0x6267, 0x0C, 0x00}, \
  {0x626A, 0x19, 0x00}, \
  {0x626D, 0x32, 0x00}, \
  {0x626E, 0x72, 0x00}, \
  {0x6270, 0x64, 0x00}, \
  {0x6271, 0x58, 0x00}, \
  {0x6273, 0xC8, 0x00}, \
  {0x6276, 0x91, 0x00}, \
  {0x6279, 0x27, 0x00}, \
  {0x627B, 0x46, 0x00}, \
  {0x627C, 0x55, 0x00}, \
  {0x627F, 0x95, 0x00}, \
  {0x6282, 0x8D, 0x00}, \
  {0x6283, 0xE9, 0x00}, \
  {0x6284, 0x4A, 0x00}, \
  {0x6285, 0xA1, 0x00}, \
  {0x6286, 0x15, 0x00}, \
  {0x6287, 0x0B, 0x00}, \
  {0x6288, 0xA1, 0x00}, \
  {0x6289, 0x41, 0x00}, \
  {0x628A, 0x1F, 0x00}, \
  {0x628B, 0x8F, 0x00}, \
  {0x628C, 0x52, 0x00}, \
  {0x628E, 0x3F, 0x00}, \
  {0x628F, 0x1E, 0x00}, \
  {0x6290, 0x83, 0x00}, \
  {0x6291, 0x80, 0x00}, \
  {0x6292, 0x28, 0x00}, \
  {0x6293, 0x3C, 0x00}, \
  {0x6294, 0xCD, 0x00}, \
  {0x6296, 0x70, 0x00}, \
  {0x6297, 0x59, 0x00}, \
  {0x6298, 0x14, 0x00}, \
  {0x6299, 0x01, 0x00}, \
  {0x629A, 0x50, 0x00}, \
  {0x629B, 0xA4, 0x00}, \
  {0x629C, 0x28, 0x00}, \
  {0x629D, 0x03, 0x00}, \
  {0x629E, 0xE2, 0x00}, \
  {0x629F, 0x09, 0x00}, \
  {0x62A0, 0x48, 0x00}, \
  {0x62B1, 0x24, 0x00}, \
  {0x62B2, 0x30, 0x00}, \
  {0x62B3, 0x8C, 0x00}, \
  {0x62B5, 0x64, 0x00}, \
  {0x62B6, 0x40, 0x00}, \
  {0x62B7, 0xD6, 0x00}, \
  {0x62B8, 0x01, 0x00}, \
  {0x62B9, 0x30, 0x00}, \
  {0x62BA, 0xA2, 0x00}, \
  {0x62BB, 0x2C, 0x00}, \
  {0x62BC, 0x03, 0x00}, \
  {0x62BD, 0x81, 0x00}, \
  {0x62BE, 0xE4, 0x00}, \
  {0x62BF, 0x60, 0x00}, \
  {0x62D0, 0x24, 0x00}, \
  {0x62D1, 0x28, 0x00}, \
  {0x62D2, 0xAC, 0x00}, \
  {0x62D4, 0x64, 0x00}, \
  {0x62D5, 0x39, 0x00}, \
  {0x62D6, 0x54, 0x00}, \
  {0x62D7, 0x01, 0x00}, \
  {0x62D8, 0x30, 0x00}, \
  {0x62D9, 0xA3, 0x00}, \
  {0x62DA, 0x2C, 0x00}, \
  {0x62DB, 0x03, 0x00}, \
  {0x62DC, 0x62, 0x00}, \
  {0x62DD, 0x07, 0x00}, \
  {0x62DE, 0x58, 0x00}, \
  {0x62EF, 0x2A, 0x00}, \
  {0x62F0, 0x34, 0x00}, \
  {0x62F1, 0xAC, 0x00}, \
  {0x62F3, 0x74, 0x00}, \
  {0x62F4, 0x49, 0x00}, \
  {0x62F5, 0x54, 0x00}, \
  {0x62F6, 0x01, 0x00}, \
  {0x62F7, 0x60, 0x00}, \
  {0x62F8, 0xC3, 0x00}, \
  {0x62F9, 0x28, 0x00}, \
  {0x62FA, 0x04, 0x00}, \
  {0x62FB, 0x11, 0x00}, \
  {0x62FC, 0xC8, 0x00}, \
  {0x62FD, 0x40, 0x00}, \
  {0x62FE, 0x0E, 0x00}, \
  {0x62FF, 0xC9, 0x00}, \
  {0x6300, 0x90, 0x00}, \
  {0x6301, 0xA1, 0x00}, \
  {0x6302, 0x16, 0x00}, \
  {0x6303, 0x8D, 0x00}, \
  {0x6304, 0x21, 0x00}, \
  {0x6305, 0x41, 0x00}, \
  {0x6306, 0x21, 0x00}, \
  {0x6307, 0x90, 0x00}, \
  {0x6308, 0x5A, 0x00}, \
  {0x630A, 0x42, 0x00}, \
  {0x630B, 0x1E, 0x00}, \
  {0x630C, 0x84, 0x00}, \
  {0x630E, 0x28, 0x00}, \
  {0x630F, 0x2C, 0x00}, \
  {0x6310, 0xCC, 0x00}, \
  {0x6312, 0x74, 0x00}, \
  {0x6313, 0x41, 0x00}, \
  {0x6314, 0x54, 0x00}, \
  {0x6315, 0x01, 0x00}, \
  {0x6316, 0x58, 0x00}, \
  {0x6317, 0xB4, 0x00}, \
  {0x6318, 0x28, 0x00}, \
  {0x6319, 0x03, 0x00}, \
  {0x631A, 0xF2, 0x00}, \
  {0x631B, 0x08, 0x00}, \
  {0x631C, 0x48, 0x00}, \
  {0x632D, 0x26, 0x00}, \
  {0x632E, 0x30, 0x00}, \
  {0x632F, 0xAD, 0x00}, \
  {0x6331, 0x68, 0x00}, \
  {0x6332, 0x40, 0x00}, \
  {0x6333, 0xD6, 0x00}, \
  {0x6334, 0x01, 0x00}, \
  {0x6335, 0x40, 0x00}, \
  {0x6336, 0xA2, 0x00}, \
  {0x6337, 0x2C, 0x00}, \
  {0x6338, 0x03, 0x00}, \
  {0x6339, 0xB2, 0x00}, \
  {0x633A, 0x04, 0x00}, \
  {0x633B, 0x58, 0x00}, \
  {0x634C, 0x22, 0x00}, \
  {0x634D, 0x2C, 0x00}, \
  {0x634E, 0xAC, 0x00}, \
  {0x6350, 0x60, 0x00}, \
  {0x6351, 0x39, 0x00}, \
  {0x6352, 0x54, 0x00}, \
  {0x6353, 0x01, 0x00}, \
  {0x6354, 0x28, 0x00}, \
  {0x6355, 0xA3, 0x00}, \
  {0x6356, 0x28, 0x00}, \
  {0x6357, 0x03, 0x00}, \
  {0x6358, 0x62, 0x00}, \
  {0x6359, 0x06, 0x00}, \
  {0x635A, 0x58, 0x00}, \
  {0x636B, 0x2A, 0x00}, \
  {0x636C, 0x34, 0x00}, \
  {0x636D, 0xAC, 0x00}, \
  {0x636F, 0x74, 0x00}, \
  {0x6370, 0x49, 0x00}, \
  {0x6371, 0x54, 0x00}, \
  {0x6372, 0x01, 0x00}, \
  {0x6373, 0x60, 0x00}, \
  {0x6374, 0xB3, 0x00}, \
  {0x6375, 0x24, 0x00}, \
  {0x6376, 0x04, 0x00}, \
  {0x6377, 0x01, 0x00}, \
  {0x6378, 0xC8, 0x00}, \
  {0x6379, 0x38, 0x00}, \
  {0x637A, 0x13, 0x00}, \
  {0x637B, 0xD4, 0x00}, \
  {0x6388, 0x22, 0x00}, \
  {0x6389, 0x82, 0x00}, \
  {0x638A, 0xC8, 0x00}, \
  {0x639D, 0x20, 0x00}, \
  {0x7BA0, 0x01, 0x00}, \
  {0x7BA9, 0x00, 0x00}, \
  {0x7BAA, 0x01, 0x00}, \
  {0x7BAD, 0x00, 0x00}, \
  {0x9002, 0x00, 0x00}, \
  {0x9003, 0x00, 0x00}, \
  {0x9004, 0x0D, 0x00}, \
  {0x9006, 0x01, 0x00}, \
  {0x9200, 0x93, 0x00}, \
  {0x9201, 0x85, 0x00}, \
  {0x9202, 0x93, 0x00}, \
  {0x9203, 0x87, 0x00}, \
  {0x9204, 0x93, 0x00}, \
  {0x9205, 0x8D, 0x00}, \
  {0x9206, 0x93, 0x00}, \
  {0x9207, 0x8F, 0x00}, \
  {0x9208, 0x62, 0x00}, \
  {0x9209, 0x2C, 0x00}, \
  {0x920A, 0x62, 0x00}, \
  {0x920B, 0x2F, 0x00}, \
  {0x920C, 0x6A, 0x00}, \
  {0x920D, 0x23, 0x00}, \
  {0x920E, 0x71, 0x00}, \
  {0x920F, 0x08, 0x00}, \
  {0x9210, 0x71, 0x00}, \
  {0x9211, 0x09, 0x00}, \
  {0x9212, 0x71, 0x00}, \
  {0x9213, 0x0B, 0x00}, \
  {0x9214, 0x6A, 0x00}, \
  {0x9215, 0x0F, 0x00}, \
  {0x9216, 0x71, 0x00}, \
  {0x9217, 0x07, 0x00}, \
  {0x9218, 0x71, 0x00}, \
  {0x9219, 0x03, 0x00}, \
  {0x935D, 0x01, 0x00}, \
  {0x9389, 0x05, 0x00}, \
  {0x938B, 0x05, 0x00}, \
  {0x9391, 0x05, 0x00}, \
  {0x9393, 0x05, 0x00}, \
  {0x9395, 0x65, 0x00}, \
  {0x9397, 0x5A, 0x00}, \
  {0x9399, 0x05, 0x00}, \
  {0x939B, 0x05, 0x00}, \
  {0x939D, 0x05, 0x00}, \
  {0x939F, 0x05, 0x00}, \
  {0x93A1, 0x05, 0x00}, \
  {0x93A3, 0x05, 0x00}, \
  {0xB3F1, 0x80, 0x00}, \
  {0xB3F2, 0x0E, 0x00}, \
  {0xBC40, 0x03, 0x00}, \
  {0xBC82, 0x07, 0x00}, \
  {0xBC83, 0xB0, 0x00}, \
  {0xBC84, 0x0D, 0x00}, \
  {0xBC85, 0x08, 0x00}, \
  {0xE0A6, 0x0A, 0x00}, \
}

#define RES0_REG_ARRAY \
{ \
  {0x0112, 0x0A, 0x00}, \
  {0x0113, 0x0A, 0x00}, \
  {0x0114, 0x03, 0x00}, \
  {0x0342, 0x18, 0x00}, \
  {0x0343, 0x40, 0x00}, \
  {0x0340, 0x11, 0x00}, \
  {0x0341, 0x9C, 0x00}, \
  {0x0344, 0x00, 0x00}, \
  {0x0345, 0x00, 0x00}, \
  {0x0346, 0x00, 0x00}, \
  {0x0347, 0x00, 0x00}, \
  {0x0348, 0x14, 0x00}, \
  {0x0349, 0x3F, 0x00}, \
  {0x034A, 0x0F, 0x00}, \
  {0x034B, 0x27, 0x00}, \
  {0x0381, 0x01, 0x00}, \
  {0x0383, 0x01, 0x00}, \
  {0x0385, 0x01, 0x00}, \
  {0x0387, 0x01, 0x00}, \
  {0x0900, 0x00, 0x00}, \
  {0x0901, 0x11, 0x00}, \
  {0x0902, 0x0A, 0x00}, \
  {0x3F4D, 0x01, 0x00}, \
  {0x3F4C, 0x01, 0x00}, \
  {0x4254, 0x7F, 0x00}, \
  {0x0401, 0x00, 0x00}, \
  {0x0404, 0x00, 0x00}, \
  {0x0405, 0x10, 0x00}, \
  {0x0408, 0x00, 0x00}, \
  {0x0409, 0x00, 0x00}, \
  {0x040A, 0x00, 0x00}, \
  {0x040B, 0x00, 0x00}, \
  {0x040C, 0x14, 0x00}, \
  {0x040D, 0x40, 0x00}, \
  {0x040E, 0x0F, 0x00}, \
  {0x040F, 0x28, 0x00}, \
  {0x034C, 0x14, 0x00}, \
  {0x034D, 0x40, 0x00}, \
  {0x034E, 0x0F, 0x00}, \
  {0x034F, 0x28, 0x00}, \
  {0x0301, 0x05, 0x00}, \
  {0x0303, 0x02, 0x00}, \
  {0x0305, 0x04, 0x00}, \
  {0x0306, 0x01, 0x00}, \
  {0x0307, 0x5E, 0x00}, \
  {0x030B, 0x01, 0x00}, \
  {0x030D, 0x02, 0x00}, \
  {0x030E, 0x01, 0x00}, \
  {0x030F, 0x5E, 0x00}, \
  {0x0310, 0x00, 0x00}, \
  {0x0820, 0x20, 0x00}, \
  {0x0821, 0xD0, 0x00}, \
  {0x0822, 0x00, 0x00}, \
  {0x0823, 0x00, 0x00}, \
  {0xBC41, 0x03, 0x00}, \
  {0x0106, 0x00, 0x00}, \
  {0x0B00, 0x00, 0x00}, \
  {0x0B05, 0x00, 0x00}, \
  {0x0B06, 0x00, 0x00}, \
  {0x3230, 0x00, 0x00}, \
  {0x3602, 0x00, 0x00}, \
  {0x3C00, 0x5B, 0x00}, \
  {0x3C01, 0x4A, 0x00}, \
  {0x3C02, 0x73, 0x00}, \
  {0x3C03, 0x64, 0x00}, \
  {0x3C04, 0x34, 0x00}, \
  {0x3C05, 0x88, 0x00}, \
  {0x3C06, 0xD4, 0x00}, \
  {0x3C07, 0x00, 0x00}, \
  {0x3C08, 0x00, 0x00}, \
  {0x3C09, 0x01, 0x00}, \
  {0x3C0A, 0x14, 0x00}, \
  {0x3C0B, 0x01, 0x00}, \
  {0x3C0C, 0x01, 0x00}, \
  {0x3F14, 0x01, 0x00}, \
  {0x3F17, 0x00, 0x00}, \
  {0x3F3C, 0x01, 0x00}, \
  {0x3F78, 0x01, 0x00}, \
  {0x3F79, 0xF4, 0x00}, \
  {0x3F7A, 0x00, 0x00}, \
  {0x3F7B, 0x00, 0x00}, \
  {0x562B, 0x32, 0x00}, \
  {0x562D, 0x34, 0x00}, \
  {0x5617, 0x32, 0x00}, \
  {0x9104, 0x04, 0x00}, \
  {0x0202, 0x11, 0x00}, \
  {0x0203, 0x88, 0x00}, \
  {0x0204, 0x00, 0x00}, \
  {0x0205, 0x00, 0x00}, \
  {0x020E, 0x01, 0x00}, \
  {0x020F, 0x00, 0x00}, \
  {0x3614, 0x00, 0x00}, \
  {0x3616, 0x0D, 0x00}, \
  {0x3617, 0x56, 0x00}, \
  {0xB612, 0x2C, 0x00}, \
  {0xB613, 0x2C, 0x00}, \
  {0xB614, 0x1C, 0x00}, \
  {0xB615, 0x1C, 0x00}, \
  {0xB616, 0x06, 0x00}, \
  {0xB617, 0x06, 0x00}, \
  {0xB618, 0x20, 0x00}, \
  {0xB619, 0x20, 0x00}, \
  {0xB61A, 0x0C, 0x00}, \
  {0xB61B, 0x0C, 0x00}, \
  {0xB61C, 0x06, 0x00}, \
  {0xB61D, 0x06, 0x00}, \
  {0xB666, 0x39, 0x00}, \
  {0xB667, 0x39, 0x00}, \
  {0xB668, 0x39, 0x00}, \
  {0xB669, 0x39, 0x00}, \
  {0xB66A, 0x13, 0x00}, \
  {0xB66B, 0x13, 0x00}, \
  {0xB66C, 0x20, 0x00}, \
  {0xB66D, 0x20, 0x00}, \
  {0xB66E, 0x20, 0x00}, \
  {0xB66F, 0x20, 0x00}, \
  {0xB670, 0x10, 0x00}, \
  {0xB671, 0x10, 0x00}, \
  {0x3900, 0x00, 0x00}, \
  {0x3901, 0x00, 0x00}, \
  {0x3237, 0x00, 0x00}, \
  {0x30AC, 0x00, 0x00}, \
}

#define RES1_REG_ARRAY \
{ \
  {0x0112, 0x0A, 0x00}, \
  {0x0113, 0x0A, 0x00}, \
  {0x0114, 0x03, 0x00}, \
  {0x0342, 0x1B, 0x00}, \
  {0x0343, 0x40, 0x00}, \
  {0x0340, 0x0E, 0x00}, \
  {0x0341, 0xF4, 0x00}, \
  {0x0344, 0x00, 0x00}, \
  {0x0345, 0x00, 0x00}, \
  {0x0346, 0x00, 0x00}, \
  {0x0347, 0x00, 0x00}, \
  {0x0348, 0x14, 0x00}, \
  {0x0349, 0x3F, 0x00}, \
  {0x034A, 0x0F, 0x00}, \
  {0x034B, 0x27, 0x00}, \
  {0x0381, 0x01, 0x00}, \
  {0x0383, 0x01, 0x00}, \
  {0x0385, 0x01, 0x00}, \
  {0x0387, 0x01, 0x00}, \
  {0x0900, 0x01, 0x00}, \
  {0x0901, 0x22, 0x00}, \
  {0x0902, 0x08, 0x00}, \
  {0x3F4D, 0x81, 0x00}, \
  {0x3F4C, 0x81, 0x00}, \
  {0x4254, 0x7F, 0x00}, \
  {0x0401, 0x00, 0x00}, \
  {0x0404, 0x00, 0x00}, \
  {0x0405, 0x10, 0x00}, \
  {0x0408, 0x00, 0x00}, \
  {0x0409, 0x00, 0x00}, \
  {0x040A, 0x00, 0x00}, \
  {0x040B, 0x00, 0x00}, \
  {0x040C, 0x0A, 0x00}, \
  {0x040D, 0x20, 0x00}, \
  {0x040E, 0x07, 0x00}, \
  {0x040F, 0x94, 0x00}, \
  {0x034C, 0x0A, 0x00}, \
  {0x034D, 0x20, 0x00}, \
  {0x034E, 0x07, 0x00}, \
  {0x034F, 0x94, 0x00}, \
  {0x0301, 0x05, 0x00}, \
  {0x0303, 0x02, 0x00}, \
  {0x0305, 0x04, 0x00}, \
  {0x0306, 0x01, 0x00}, \
  {0x0307, 0x4E, 0x00}, \
  {0x030B, 0x02, 0x00}, \
  {0x030D, 0x02, 0x00}, \
  {0x030E, 0x01, 0x00}, \
  {0x030F, 0x5E, 0x00}, \
  {0x0310, 0x00, 0x00}, \
  {0x0820, 0x0F, 0x00}, \
  {0x0821, 0xA8, 0x00}, \
  {0x0822, 0x00, 0x00}, \
  {0x0823, 0x00, 0x00}, \
  {0xBC41, 0x03, 0x00}, \
  {0x0106, 0x00, 0x00}, \
  {0x0B00, 0x00, 0x00}, \
  {0x0B05, 0x01, 0x00}, \
  {0x0B06, 0x01, 0x00}, \
  {0x3230, 0x00, 0x00}, \
  {0x3602, 0x01, 0x00}, \
  {0x3C00, 0x74, 0x00}, \
  {0x3C01, 0x5F, 0x00}, \
  {0x3C02, 0x73, 0x00}, \
  {0x3C03, 0x64, 0x00}, \
  {0x3C04, 0x54, 0x00}, \
  {0x3C05, 0xA8, 0x00}, \
  {0x3C06, 0x9E, 0x00}, \
  {0x3C07, 0x00, 0x00}, \
  {0x3C08, 0x00, 0x00}, \
  {0x3C09, 0x01, 0x00}, \
  {0x3C0A, 0x14, 0x00}, \
  {0x3C0B, 0x01, 0x00}, \
  {0x3C0C, 0x00, 0x00}, \
  {0x3F14, 0x00, 0x00}, \
  {0x3F17, 0x00, 0x00}, \
  {0x3F3C, 0x00, 0x00}, \
  {0x3F78, 0x03, 0x00}, \
  {0x3F79, 0xFC, 0x00}, \
  {0x3F7A, 0x00, 0x00}, \
  {0x3F7B, 0x00, 0x00}, \
  {0x562B, 0x32, 0x00}, \
  {0x562D, 0x34, 0x00}, \
  {0x5617, 0x32, 0x00}, \
  {0x9104, 0x04, 0x00}, \
  {0x0202, 0x0E, 0x00}, \
  {0x0203, 0xE0, 0x00}, \
  {0x0204, 0x00, 0x00}, \
  {0x0205, 0x00, 0x00}, \
  {0x020E, 0x01, 0x00}, \
  {0x020F, 0x00, 0x00}, \
  {0x3614, 0x00, 0x00}, \
  {0x3616, 0x0D, 0x00}, \
  {0x3617, 0x56, 0x00}, \
  {0xB612, 0x2C, 0x00}, \
  {0xB613, 0x2C, 0x00}, \
  {0xB614, 0x1C, 0x00}, \
  {0xB615, 0x1C, 0x00}, \
  {0xB616, 0x06, 0x00}, \
  {0xB617, 0x06, 0x00}, \
  {0xB618, 0x20, 0x00}, \
  {0xB619, 0x20, 0x00}, \
  {0xB61A, 0x0C, 0x00}, \
  {0xB61B, 0x0C, 0x00}, \
  {0xB61C, 0x06, 0x00}, \
  {0xB61D, 0x06, 0x00}, \
  {0xB666, 0x39, 0x00}, \
  {0xB667, 0x39, 0x00}, \
  {0xB668, 0x39, 0x00}, \
  {0xB669, 0x39, 0x00}, \
  {0xB66A, 0x13, 0x00}, \
  {0xB66B, 0x13, 0x00}, \
  {0xB66C, 0x20, 0x00}, \
  {0xB66D, 0x20, 0x00}, \
  {0xB66E, 0x20, 0x00}, \
  {0xB66F, 0x20, 0x00}, \
  {0xB670, 0x10, 0x00}, \
  {0xB671, 0x10, 0x00}, \
  {0x3900, 0x00, 0x00}, \
  {0x3901, 0x00, 0x00}, \
  {0x3237, 0x00, 0x00}, \
  {0x30AC, 0x00, 0x00}, \
}

/* Sensor Handler */
static sensor_lib_t sensor_lib_ptr =
{
  .sensor_slave_info =
  {
    .sensor_name = SENSOR_MODEL,
    .slave_addr = 0x20,
    .i2c_freq_mode = SENSOR_I2C_MODE_FAST,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .sensor_id_info =
    {
      .sensor_id_reg_addr = 0x0016,
      .sensor_id = 0x0376,
    },
    .power_setting_array =
    {
      .power_setting_a =
      {
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_VANA,
          .config_val = GPIO_OUT_HIGH,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VANA,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_VDIG,
          .config_val = GPIO_OUT_HIGH,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VDIG,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VIO,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_CLK,
          .seq_val = CAMERA_MCLK,
          .config_val = 24000000,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_HIGH,
          .delay = 10,
        },
      },
      .size = 8,
      .power_down_setting_a =
      {
        {
          .seq_type = CAMERA_POW_SEQ_CLK,
          .seq_val = CAMERA_MCLK,
          .config_val = 0,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VIO,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VDIG,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_VDIG,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VANA,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_VANA,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
      },
      .size_down = 7,
    },
  },
  .sensor_output =
  {
    .output_format = SENSOR_BAYER,
    .connection_mode = SENSOR_MIPI_CSI,
    .raw_output = SENSOR_10_BIT_DIRECT,
    .filter_arrangement = SENSOR_RGGB,
  },
  .output_reg_addr =
  {
    .x_output = 0x034C,
    .y_output = 0x034E,
    .line_length_pclk = 0x0342,
    .frame_length_lines = 0x0340,
  },
  .exp_gain_info =
  {
    .coarse_int_time_addr = 0x0202,
    .global_gain_addr = 0x0204,
    .vert_offset = IMX376_MAX_INTEGRATION_MARGIN,
  },
  .aec_info =
  {
    .min_gain = IMX376_MIN_GAIN,
    .max_gain = IMX376_MAX_GAIN,
    .max_analog_gain = IMX376_MAX_AGAIN,
    .max_linecount = 65535 - IMX376_MAX_INTEGRATION_MARGIN,
  },
  .sensor_num_frame_skip = 2,
  .sensor_num_HDR_frame_skip = 2,
  .sensor_max_pipeline_frame_delay = 2,
  .sensor_property =
  {
    .pix_size = 1.0, /* um */
    .sensing_method = SENSOR_SMETHOD_ONE_CHIP_COLOR_AREA_SENSOR,
    .crop_factor = 1.0,
  },
  .pixel_array_size_info =
  {
    .active_array_size =
    {
      .width = 5184,
      .height = 3880,
    },
    .left_dummy = 16,
    .right_dummy = 16,
    .top_dummy = 8,
    .bottom_dummy = 8,
  },
  .color_level_info =
  {
    .white_level = 1023,
    .r_pedestal = IMX376_DATA_PEDESTAL,
    .gr_pedestal = IMX376_DATA_PEDESTAL,
    .gb_pedestal = IMX376_DATA_PEDESTAL,
    .b_pedestal = IMX376_DATA_PEDESTAL,
  },
  .sensor_stream_info_array =
  {
    .sensor_stream_info =
    {
      {
        .vc_cfg_size = 1,
        .vc_cfg =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT,
          },
        },
        .pix_data_fmt =
        {
          SENSOR_BAYER,
        },
      },
    },
    .size = 1,
  },
  .start_settings =
  {
    .reg_setting_a = START_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .stop_settings =
  {
    .reg_setting_a = STOP_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .groupon_settings =
  {
    .reg_setting_a = GROUPON_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .groupoff_settings =
  {
    .reg_setting_a = GROUPOFF_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .test_pattern_info =
  {
    .test_pattern_settings =
    {
      {
        .mode = SENSOR_TEST_PATTERN_OFF,
        .settings =
        {
          .reg_setting_a =
          {
            {0x0600, 0x0000, 0x00},
          },
          .size = 1,
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_WORD_DATA,
          .delay = 0,
        }
      },
      {
        .mode = SENSOR_TEST_PATTERN_SOLID_COLOR,
        .settings =
        {
          .reg_setting_a =
          {
            {0x0600, 0x0001, 0x00},
          },
          .size = 1,
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_WORD_DATA,
          .delay = 0,
        },
      },
      {
        .mode = SENSOR_TEST_PATTERN_COLOR_BARS,
        .settings =
        {
          .reg_setting_a =
          {
            {0x0600, 0x0002, 0x00},
          },
          .size = 1,
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_WORD_DATA,
          .delay = 0,
        },
      },
      {
        .mode = SENSOR_TEST_PATTERN_COLOR_BARS_FADE_TO_GRAY,
        .settings =
        {
          .reg_setting_a =
          {
            {0x0600, 0x0003, 0x00},
          },
          .size = 1,
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_WORD_DATA,
          .delay = 0,
        },
      },
      {
        .mode = SENSOR_TEST_PATTERN_PN9,
        .settings =
        {
          .reg_setting_a =
          {
            {0x0600, 0x0004, 0x00},
          },
          .size = 1,
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_WORD_DATA,
          .delay = 0,
        },
      },
    },
    .size = 5,
    .solid_mode_addr =
    {
      .r_addr = 0x0602,
      .gr_addr = 0x0604,
      .gb_addr = 0x0606,
      .b_addr = 0x0608,
    },
  },
  .init_settings_array =
  {
    .reg_settings =
    {
      {
        .reg_setting_a = INIT0_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
    },
    .size = 1,
  },
  .res_settings_array =
  {
    .reg_settings =
    {
      /* Res 0 */
      {
        .reg_setting_a = RES0_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
      /* Res 1 */
      {
        .reg_setting_a = RES1_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
    },
    .size = 2,
  },
  .out_info_array =
  {
    .out_info =
    {
      /* Res 0 */
      {
        .x_output = 5184,
        .y_output = 3880,
        .line_length_pclk = 6208,
        .frame_length_lines = 4508,
        .op_pixel_clk = 840000000,
        .binning_factor = 1,
        .min_fps = 7.50,
        .max_fps = 30.01,
        .mode = SENSOR_QUADRA_MODE,
        .offset_x = 0,
        .offset_y = 0,
        .scale_factor = 1.000,
        .is_pdaf_supported = 0,
      },
      /* Res 1 */
      {
        .x_output = 2592,
        .y_output = 1940,
        .line_length_pclk = 6976,
        .frame_length_lines = 3828,
        .op_pixel_clk = 400800000,
        .binning_factor = 2,
        .min_fps = 7.50,
        .max_fps = 30.01,
        .mode = SENSOR_DEFAULT_MODE,
        .offset_x = 0,
        .offset_y = 0,
        .scale_factor = 1.000,
        .is_pdaf_supported = 0,
      },
    },
    .size = 2,
  },
  .csi_params =
  {
    .lane_cnt = 4,
    .settle_cnt = 0xb,
    .is_csi_3phase = 0,
  },
  .csid_lut_params_array =
  {
    .lut_params =
    {
      /* Res 0 */
      {
        .num_cid = 1,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
        },
      },
      /* Res 1 */
      {
        .num_cid = 1,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
        },
      },
    },
    .size = 2,
  },
  .crop_params_array =
  {
    .crop_params =
    {
      /* Res 0 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
      /* Res 1 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
   },
    .size = 2,
  },
  .exposure_func_table =
  {
    .sensor_calculate_exposure = sensor_calculate_exposure,
    .sensor_fill_exposure_array = sensor_fill_exposure_array,
  },
  .sensor_capability = SENSOR_FEATURE_QUADRA_CFA,
  .rolloff_config =
  {
    .enable = FALSE,
    .full_size_info =
    {
      .full_size_width = 0,
      .full_size_height = 0,
      .full_size_left_crop = 0,
      .full_size_top_crop = 0,
    },
  },
  .adc_readout_time = 0,
  .sensor_num_fast_aec_frame_skip = 0,
  .noise_coeff = {
    .gradient_S = 3.738032e-06,
    .offset_S = 3.651935e-04,
    .gradient_O = 4.499952e-07,
    .offset_O = -2.968624e-04,
  },
};

#endif /* __IMX376_LIB_H__ */

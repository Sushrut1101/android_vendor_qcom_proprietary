/* module_gamma.h\
 *
 * Copyright (c) 2012-2016 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 */

#ifndef __MODULE_GAMMA44_H__
#define __MODULE_GAMMA44_H__

/* std headers */
#include "pthread.h"

/* hal headers */
#include "cam_types.h"

/* isp headers */
#include "isp_common.h"
#include "isp_defs.h"
#include "chromatix.h"
#include "gamma_reg.h"
#include "gamma_algo.h"

#define WHITEBOARD_GAMMA_TABLE VFE_Whiteboard_GammaTable
#define BLACKBOARD_GAMMA_TABLE VFE_Blackboard_GammaTable

#define GAMMA_LUT_TYPE float

/* Enum defines */
typedef enum {
  GAMMA_TABLE_DEFAULT = 0,
  GAMMA_TABLE_OUTDOOR,
  GAMMA_TABLE_LOWLIGHT,
  GAMMA_TABLE_BACKLIGHT,
  GAMMA_TABLE_SOLARIZE,
  GAMMA_TABLE_POSTERIZE,
  GAMMA_TABLE_WHITE_BOARD,
  GAMMA_TABLE_BLACK_BOARD,
  GAMMA_TABLE_USER1,
  GAMMA_TABLE_INVALID
} gamma_table_type;

typedef enum {
  ISP_GAMMA_LINEAR_MAPPING_OF_10_BIT_GAMMA_TABLE,
  ISP_GAMMA_PIECEWISE_LINEAR_MAPPING_OF_10_BIT_GAMMA_TABLE,
  ISP_LAST_GAMMA_MAPPING_MODE_ENUM =
    ISP_GAMMA_PIECEWISE_LINEAR_MAPPING_OF_10_BIT_GAMMA_TABLE
} ISP_GammaMappingModeType;

/* Struct defines */
/** gamma_table_t
 *
 *  @hw_table_r: hw update table for R
 *  @hw_table_r: hw update table for G
 *  @hw_table_r: hw update table for B
 **/

typedef struct VFE_GammaTable {
  int32_t       hw_table_r[ISP_GAMMA_NUM_ENTRIES];
  int32_t       hw_table_g[ISP_GAMMA_NUM_ENTRIES];
  int32_t       hw_table_b[ISP_GAMMA_NUM_ENTRIES];
} gamma_table_t;

/** ISP_GammaConfigCmdType
 *
 *  @LutSel: LUT select
 *  @Gamatbl: gamma table
 **/

typedef struct ISP_GammaConfigCmdType {
  ISP_GammaLutSelect    LutSel;
  gamma_table_t         Gamatbl;
} ISP_GammaConfigCmdType;

/** gamma_rgb_t
 *
 *  @gamma_r: R value for gamma
 *  @gamma_g: G value for gamma
 *  @gamma_b: B value for gamma
 **/

typedef struct {
  float       gamma_r[GAMMA_TABLE_SIZE];
  float       gamma_g[GAMMA_TABLE_SIZE];
  float       gamma_b[GAMMA_TABLE_SIZE];
} gamma_rgb_t;

typedef struct {
  float       gamma_r[ISP_GAMMA_NUM_ENTRIES];
  float       gamma_g[ISP_GAMMA_NUM_ENTRIES];
  float       gamma_b[ISP_GAMMA_NUM_ENTRIES];
} gamma_rgb_ds_t;

/** gamma_rgb_ptr_t
 *
 *  @p_gamma_r: pointer to gamma R table
 *  @p_gamma_g: pointer to gamma G table
 *  @p_gamma_b: pointer to gamma B table
 **/

typedef struct {
  uint8_t*      p_gamma_r;
  uint8_t*      p_gamma_g;
  uint8_t*      p_gamma_b;
} gamma_rgb_ptr_t;

typedef boolean (*ext_interpolate)(void *,
  void *, void *);
typedef boolean (*get_trigger_ratio)(void *,
  void *, void *);
typedef boolean (*ext_set_table)(void *,
  void *, void *);
typedef boolean (*ext_set_spl_effect)(void *,
  void *, void *);

typedef struct {
  ext_interpolate ext_interpolate;
  get_trigger_ratio get_trigger_ratio;
  ext_set_table ext_set_table;
  ext_set_spl_effect ext_set_spl_effect;
} ext_override_func;

/** gamma44_t
 *
 *  @isp_out_info: isp output info
 *  @l_stream_info: stram info list
 *  @sensor_out_info: sensor output info
 *  @ISP_GammaCfgCmd: ISP_GammaCfgCmd
 *  @applied_table: applied table value store to pass to eztune diag info
 *  @gamma_table_rgb: gamma table rgb
 *  @default_gamma_tbl: default gamma tbl
 *  @lowlight_gamma_tbl: lowlight gamma tbl
 *  @outdoor_gamma_tbl: outdoor gamma tbl
 *  @solarize_gamma_table: solarize gamma table
 *  @gamma_table_type: gamma table type
 *  @gamma_ratio: gamma ratio
 *  @gamma_lut_size: gamma lut size
 *  @contrast: contrast
 *  @backlight_severity: backlight severity
 *  @vfe_reconfig: vfe reconfig
 *  @enable_backlight_compensation: enable backlight compensation
 *  @reload_params: reload params
 **/
typedef struct {
  isp_out_info_t                 isp_out_info;
  mct_list_t                    *l_stream_info;
  sensor_out_info_t              sensor_out_info;
  aec_update_t                   aec_update;
  asd_update_t                   asd_update;
  int32_t                        backlight_comp_update;

  ISP_GammaConfigCmdType         ISP_GammaCfgCmd;
  gamma_table_t                  applied_table;
  gamma_rgb_ds_t                 gamma_table_rgb;
  gamma_rgb_ds_t                 default_gamma_tbl;
  gamma_rgb_ds_t                 lowlight_gamma_tbl;
  gamma_rgb_ds_t                 outdoor_gamma_tbl;
  gamma_rgb_ds_t                 solarize_gamma_table;
  gamma_table_type               gamma_table_type;
  trigger_ratio_t                gamma_ratio;
  uint32_t                       gamma_startidx;
  uint32_t                       gamma_endidx;
  isp_effects_params_t           effects;
  cam_scene_mode_type            bestshot_mode;

  uint32_t                       gamma_lut_size;
  uint32_t                       backlight_severity;
  uint32_t                       vfe_reconfig;
  int32_t                        enable_backlight_compensation;
  boolean                        effect_applied;
  int32_t                        reload_params;
  int32_t                        preview_trigger;
  ext_override_func             *ext_func_table;
  gamma_algo_t                   gamma_algo;
  boolean                        enable_adrc;
  boolean                        enable_same_data_channel;
} gamma44_t;

#if OVERRIDE_FUNC
boolean gamma44_fill_func_table_ext(gamma44_t *);
#define FILL_FUNC_TABLE(field) gamma44_fill_func_table_ext(field)
#else
boolean gamma44_fill_func_table(gamma44_t *gamma);
#define FILL_FUNC_TABLE(field) gamma44_fill_func_table(field)
#endif

static const uint16_t VFE_Whiteboard_GammaTable[512] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 64, 128, 192, 256, 320,
384, 448, 512, 576, 640, 704, 768, 832, 896, 1024, 1088, 1216, 1280, 1408, 1472, 1536,
1664, 1792, 1856, 1984, 2112, 2240, 2304, 2432, 2560, 2688, 2752, 2880, 3008, 3136, 3264, 3456,
3584, 3712, 3840, 3968, 4096, 4224, 4416, 4544, 4672, 4864, 4992, 5120, 5312, 5440, 5632, 5760,
5888, 6080, 6208, 6400, 6528, 6656, 6848, 6976, 7168, 7296, 7424, 7552, 7744, 7872, 8000, 8128,
8320, 8448, 8576, 8704, 8896, 9024, 9152, 9280, 9408, 9536, 9664, 9792, 9920, 10048, 10176, 10304,
10432, 10560, 10624, 10752, 10880, 11008, 11136, 11200, 11328, 11456, 11520, 11648, 11712, 11840, 11904, 11968,
12096, 12160, 12288, 12352, 12416, 12544, 12608, 12672, 12800, 12864, 12928, 12992, 13120, 13184, 13248, 13312,
13376, 13440, 13440, 13568, 13568, 13696, 13760, 13824, 13824, 13888, 13952, 14016, 14080, 14144, 14208, 14208,
14272, 14336, 14400, 14400, 14464, 14528, 14592, 14592, 14656, 14720, 14784, 14784, 14848, 14848, 14912, 14976,
15040, 15040, 15040, 15104, 15104, 15168, 15168, 15232, 15296, 15296, 15360, 15424, 15424, 15488, 15488, 15488,
15552, 15552, 15616, 15616, 15680, 15680, 15680, 15744, 15744, 15744, 15744, 15808, 15808, 15808, 15872, 15872,
15936, 15936, 15936, 16000, 16000, 16000, 16000, 16000, 16064, 16064, 16128, 16128, 16128, 16128, 16128, 16192,
16192, 16192, 16256, 16256, 16256, 16256, 16256, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320,
16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320,
16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320,
16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320,
16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320,
16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320,
16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320,
16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320,
16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320,
16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320,
16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320,
16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320,
16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320,
16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320,
16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320,
16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320,
16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320, 16320,
};

static const uint16_t VFE_Posterization_GammaTable[1024] = {
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 85, 85, 85, 85, 85, 85,
  85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
  85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
  85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
  85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
  85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
  85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
  85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
  85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
  85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
  85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
  85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 170, 170, 170, 170, 170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  170,
  170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
  255,
};

static const uint16_t VFE_Blackboard_GammaTable[512] = {
  /* Gamma table */
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 64, 128, 128, 192, 192,
256, 256, 320, 320, 384, 384, 448, 512, 512, 576, 576, 640, 704, 704, 768, 832,
832, 896, 960, 1024, 1024, 1088, 1152, 1152, 1216, 1280, 1344, 1408, 1408, 1472, 1536, 1536,
1600, 1664, 1664, 1728, 1792, 1856, 1920, 1920, 1984, 2048, 2112, 2112, 2176, 2240, 2304, 2368,
2432, 2496, 2560, 2560, 2624, 2688, 2752, 2752, 2816, 2880, 2944, 3008, 3072, 3072, 3136, 3200,
3264, 3328, 3392, 3392, 3456, 3520, 3584, 3648, 3712, 3712, 3776, 3840, 3904, 3968, 4032, 4032,
4096, 4160, 4224, 4288, 4288, 4352, 4416, 4480, 4544, 4544, 4608, 4672, 4736, 4800, 4864, 4928,
4928, 4992, 5056, 5120, 5120, 5184, 5248, 5312, 5312, 5376, 5440, 5504, 5568, 5568, 5632, 5696,
5760, 5760, 5824, 5888, 5952, 5952, 6016, 6080, 6144, 6144, 6208, 6272, 6336, 6400, 6464, 6464,
6528, 6592, 6592, 6656, 6720, 6784, 6784, 6848, 6912, 6912, 6976, 7040, 7104, 7168, 7168, 7232,
7296, 7360, 7360, 7424, 7488, 7488, 7552, 7616, 7616, 7680, 7744, 7744, 7808, 7872, 7872, 7936,
8000, 8000, 8064, 8128, 8128, 8192, 8256, 8256, 8320, 8384, 8384, 8448, 8512, 8576, 8576, 8640,
8704, 8704, 8768, 8768, 8832, 8896, 8896, 8960, 9024, 9024, 9088, 9088, 9152, 9152, 9216, 9280,
9280, 9344, 9408, 9408, 9472, 9536, 9536, 9600, 9600, 9664, 9728, 9728, 9792, 9856, 9856, 9920,
9920, 9984, 9984, 10048, 10048, 10112, 10176, 10176, 10240, 10240, 10304, 10304, 10368, 10432, 10432, 10496,
10496, 10560, 10560, 10624, 10624, 10688, 10688, 10752, 10752, 10816, 10880, 10880, 10944, 11008, 11008, 11072,
11072, 11072, 11136, 11136, 11200, 11200, 11264, 11264, 11328, 11328, 11392, 11456, 11456, 11520, 11520, 11584,
11584, 11648, 11648, 11712, 11712, 11776, 11776, 11840, 11840, 11840, 11904, 11904, 11968, 11968, 12032, 12032,
12096, 12096, 12160, 12160, 12224, 12224, 12288, 12288, 12352, 12352, 12416, 12416, 12480, 12480, 12544, 12544,
12608, 12608, 12608, 12672, 12672, 12672, 12736, 12736, 12800, 12800, 12864, 12864, 12928, 12928, 12928, 12992,
12992, 13056, 13056, 13120, 13120, 13184, 13184, 13248, 13248, 13312, 13312, 13312, 13376, 13376, 13440, 13440,
13440, 13504, 13504, 13504, 13504, 13568, 13568, 13632, 13632, 13632, 13696, 13696, 13760, 13760, 13760, 13824,
13824, 13888, 13888, 13952, 13952, 14016, 14016, 14016, 14080, 14080, 14144, 14144, 14144, 14208, 14208, 14272,
14272, 14272, 14336, 14336, 14400, 14400, 14400, 14400, 14464, 14464, 14528, 14528, 14528, 14528, 14592, 14592,
14592, 14592, 14656, 14656, 14720, 14720, 14720, 14720, 14784, 14784, 14848, 14848, 14848, 14912, 14912, 14976,
14976, 14976, 14976, 15040, 15040, 15104, 15104, 15104, 15104, 15168, 15168, 15232, 15232, 15232, 15296, 15296,
15360, 15360, 15360, 15360, 15424, 15424, 15488, 15488, 15488, 15488, 15552, 15552, 15616, 15616, 15616, 15616,
15616, 15616, 15680, 15680, 15680, 15680, 15680, 15744, 15744, 15808, 15808, 15808, 15808, 15872, 15872, 15936,
15936, 15936, 15936, 15936, 16000, 16000, 16064, 16064, 16064, 16064, 16128, 16128, 16192, 16192, 16192, 16256,
};

static const uint16_t Chromatix_default_GammaTable[512] = {
  0, 32, 64, 96, 161, 193, 225, 289, 321, 385, 450, 514, 578,
  642, 707, 803,
  867, 964, 1060, 1124, 1253, 1317, 1446, 1510, 1638, 1703, 1831, 1895, 2024,
  2088, 2217, 2281,
  2409, 2474, 2570, 2666, 2731, 2827, 2923, 2987, 3084, 3148, 3244, 3309, 3405
  , 3501, 3566, 3662,
  3758, 3823, 3919, 4015, 4080, 4176, 4240, 4337, 4401, 4497, 4562, 4658, 4722
  , 4819, 4883, 4947,
  5043, 5108, 5204, 5268, 5333, 5397, 5461, 5525, 5589, 5686, 5750, 5846, 5911
  , 5975, 6039, 6103,
  6168, 6232, 6296, 6360, 6393, 6457, 6489, 6553, 6617, 6682, 6746, 6810, 6874
  , 6939, 6971, 7035,
  7067, 7131, 7196, 7260, 7292, 7356, 7388, 7453, 7517, 7549, 7613, 7645, 7710
  , 7742, 7806, 7838,
  7902, 7935, 7999, 8031, 8095, 8127, 8192, 8224, 8256, 8320, 8352, 8384, 8448
  , 8481, 8513, 8577,
  8609, 8641, 8705, 8738, 8770, 8802, 8834, 8898, 8930, 8962, 9027, 9059, 9091
  , 9123, 9155, 9187,
  9219, 9284, 9316, 9348, 9380, 9412, 9444, 9476, 9509, 9541, 9573, 9605, 9637
  , 9669, 9733, 9766,
  9798, 9830, 9862, 9894, 9926, 9958, 9990, 10023, 10039, 10055, 10087, 10119
  , 10151, 10183, 10215, 10247,
  10280, 10312, 10344, 10376, 10408, 10424, 10440, 10472, 10504, 10537, 10569
  , 10601, 10617, 10633, 10665, 10697,
  10729, 10745, 10761, 10794, 10826, 10858, 10874, 10890, 10922, 10954, 10986
  , 11002, 11018, 11051, 11083, 11115,
  11131, 11147, 11179, 11195, 11211, 11243, 11259, 11275, 11308, 11340, 11372
  , 11388, 11404, 11436, 11452, 11468,
  11500, 11516, 11532, 11564, 11581, 11597, 11629, 11645, 11661, 11693, 11709
  , 11725, 11757, 11773, 11789, 11821,
  11838, 11854, 11886, 11902, 11918, 11950, 11966, 11982, 12014, 12030, 12046
  , 12078, 12095, 12111, 12127, 12143,
  12159, 12175, 12207, 12223, 12239, 12271, 12287, 12303, 12335, 12352, 12368
  , 12400, 12416, 12432, 12464, 12480,
  12496, 12528, 12544, 12560, 12576, 12592, 12609, 12625, 12657, 12673, 12689
  , 12721, 12737, 12753, 12785, 12801,
  12817, 12849, 12866, 12882, 12914, 12930, 12946, 12962, 12978, 12994, 13010
  , 13042, 13058, 13074, 13106, 13123,
  13139, 13155, 13171, 13187, 13203, 13235, 13251, 13267, 13299, 13315, 13331
  , 13363, 13380, 13396, 13412, 13428,
  13444, 13460, 13492, 13508, 13524, 13540, 13556, 13572, 13588, 13620, 13637
  , 13653, 13685, 13701, 13717, 13733,
  13749, 13765, 13781, 13813, 13829, 13845, 13861, 13877, 13893, 13909, 13926
  , 13942, 13958, 13974, 14006, 14022,
  14038, 14054, 14070, 14086, 14102, 14134, 14150, 14166, 14183, 14199, 14215
  , 14231, 14247, 14263, 14279, 14295,
  14311, 14327, 14343, 14359, 14375, 14391, 14407, 14423, 14456, 14472, 14488
  , 14504, 14520, 14536, 14552, 14568,
  14584, 14600, 14616, 14632, 14648, 14664, 14680, 14697, 14705, 14713, 14729
  , 14745, 14761, 14777, 14793, 14809,
  14825, 14841, 14857, 14873, 14889, 14905, 14921, 14937, 14954, 14962, 14970
  , 14986, 15002, 15018, 15034, 15050,
  15066, 15082, 15098, 15114, 15130, 15146, 15154, 15162, 15178, 15194, 15211
  , 15219, 15227, 15243, 15259, 15275,
  15291, 15307, 15323, 15339, 15347, 15355, 15371, 15387, 15403, 15419, 15435
  , 15451, 15468, 15476, 15484, 15500,
  15516, 15532, 15540, 15548, 15564, 15580, 15596, 15604, 15612, 15628, 15644
  , 15660, 15668, 15676, 15692, 15708,
  15725, 15741, 15757, 15773, 15789, 15797, 15805, 15821, 15837, 15853, 15861
  , 15869, 15885, 15901, 15917, 15925,
  15933, 15949, 15965, 15982, 15990, 15998, 16014, 16030, 16046, 16062, 16078
  , 16094, 16110, 16118, 16126, 16142,
  16158, 16174, 16182, 16190, 16206, 16222, 16239, 16255, 16271, 16287, 16303
  , 16311, 16319, 16335, 16351, 16383
};
#endif

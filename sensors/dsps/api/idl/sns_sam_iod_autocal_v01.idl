/*****************************************************************************
  @FILE     sns_sam_iod_autocal_v01.idl

  @BRIEF    Message definition for the Indoor Outdoor Detector (IOD)
  autocalibration algorithm service

  @DESCRIPTION
  This file defines messages used by Indoor Outdoor Detector autocalibration
  algorithm service.

  As prerequisite, the sensor algorithm must use the common Interface
  defined in the Sensor algorithm framework.

  The messages defined herein will be passed to the Sensor framework using
  the sensor1_write() API.

  @COPYRIGHT
  Copyright (c) 2015 Qualcomm Technologies, Inc.  All Rights Reserved
  Qualcomm Technologies Proprietary and Confidential.

*****************************************************************************/

include "sns_sam_common_v01.idl";

revision 0;

const SNS_SAM_IOD_AUTOCAL_SUID = 0xb9b65987126198c3;

//============================================================================
// Global definitions
//============================================================================

//============================================================================
// Enums and Bitmasks
//============================================================================

//! @ENUM SNS_SAM_IOD_OUTPUT_CLASS_ENUM
enum
{
 SNS_SAM_IOD_AUTOCAL_STATUS_NOT_CONVERGED = 0,
 /**< Autocal status not converged */
 SNS_SAM_IOD_AUTOCAL_STATUS_CONVERGED   = 1
 /**< Autocal status converged */
} sns_sam_iod_autocal_status_e;
/**< Enum to specify convergence status of autocal algorithm
*/

//============================================================================
// Structures
//============================================================================

//! @STRUCT sns_sam_iod_autocal_sunset_sunrise_ts_s
struct {
 uint32 sunset_ts;
 /**< UTC timestamp for sunset in secs from Unix epoch */
 uint32 sunrise_ts;
 /**< UTC timestamp for sunrise in secs from Unix epoch */
} sns_sam_iod_autocal_sunset_sunrise_ts_s;
/**< Struct defining sunrise/sunset timestamps for IOD autocal algorithm. */

//============================================================================
// Requests and Responses
//============================================================================

//============================================================================
/** @COMMAND SNS_SAM_IOD_AUTOCAL_ENABLE
    @BRIEF This command enables the IOD Autocal algorithm.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
    @DESCRIPTION This algorithm is going to be run in SNS_SAM_REPORT_MODE_ONESHOT
    report mode which means that it gets disabled by SAM framework as
    soon as it converges and sends SNS_SAM_IOD_AUTOCAL_REPORT back to
    the client. The client is not required to explicitly disable the
    algorithm.
    @CMD_VERSION 1.0
*/
//============================================================================

//! @MSG     SNS_SAM_IOD_AUTOCAL_ENABLE_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
 mandatory uint32 report_period;
 /**< Unit of seconds, Q16; value of 0 means reporting on new event only
   *  and is only supported for this algorithm
   */

 //! Time of Day
 //! @VERSION_INTRODUCED 1.0
 //! @VERSION 1.0
 mandatory uint32 timeofday;
 /**< UTC timestamp in secs from Unix epoch to sync the ADSP clock */

 //! Sunset and Sunrise Timestamps
 //! @VERSION_INTRODUCED 1.0
 //! @VERSION 1.0
 mandatory sns_sam_iod_autocal_sunset_sunrise_ts_s sunset_sunrise_ts;
 /**< UTC sunset/sunrise timestamps in secs from Unix epoch for the current
  *   location of the client. Sunset/sunrise timestamps will be used by
  *   the IOD autocalibration algorithm to determine when to resume/suspend
  *   processing sensors data for autocalibration during the night. Number
  *   of seconds since midnight corresponding to the sunset timestamp must
  *   be greater than number of seconds since midnight corresponding to the
  *   sunrise timestamp. The timestamps specified in this request will be used
  *   by the algorithm until they are updated in the SNS_SAM_IOD_AUTOCAL_UPDATE
  *   request.
  */

 optional sns_suspend_notification_s notify_suspend;
 /**< Identifies if indications for this request should be sent
   when the processor is in suspend state.
   If this field is not specified, default value will be set to
   notify_suspend->proc_type = SNS_PROC_APPS
   notify_suspend->send_indications_during_suspend = FALSE
   This field does not have any bearing on error indication
   messages, which will be sent even during suspend.
   */
} sns_sam_iod_autocal_enable_req_msg;

//! @MSG     SNS_SAM_IOD_AUTOCAL_ENABLE_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
 mandatory sns_common_resp_s resp = 2;

 optional uint8 instance_id;
 /**<
   Algorithm instance ID maintained/assigned by SAM.
   The client shall use this instance ID for future messages associated with
   current algorithm instance.
   */
} sns_sam_iod_autocal_enable_resp_msg;

//============================================================================
/** @COMMAND SNS_SAM_IOD_AUTOCAL_DISABLE
    @BRIEF This command disables the IOD Autocal algorithm.
    @USAGE Production
    @SECURITY_LEVEL Low Risk
    @REQUIRED_ACTION Default
    @CMD_VERSION 1.0
*/
//============================================================================

//! @MSG     SNS_SAM_IOD_AUTOCAL_DISABLE_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
 mandatory uint8 instance_id;
 /**< Identifies the algorithm instance to be disabled.  */
} sns_sam_iod_autocal_disable_req_msg;

//! @MSG     SNS_SAM_IOD_AUTOCAL_DISABLE_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------
message {
 mandatory sns_common_resp_s resp = 2;

 optional uint8 instance_id;
 /**<
   Algorithm instance ID maintained/assigned by SAM.
   The client shall use this instance ID for future messages associated with
   current algorithm instance.
   */
} sns_sam_iod_autocal_disable_resp_msg;

//============================================================================
/** @COMMAND SNS_SAM_IOD_AUTOCAL_GET_REPORT
    @BRIEF This command gets report from the IOD Autocal algorithm.
    @USAGE Production
    @SECURITY_LEVEL Low Risk
    @REQUIRED_ACTION Default
    @CMD_VERSION 1.0
*/
//============================================================================

//! @MSG     SNS_SAM_IOD_AUTOCAL_GET_REPORT_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
 mandatory uint8 instance_id;
 /**< Identifies the algorithm instance.  */
} sns_sam_iod_autocal_get_report_req_msg;

//! @MSG     SNS_SAM_IOD_AUTOCAL_GET_REPORT_RESP
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
 mandatory sns_common_resp_s resp = 2;

 optional uint8 instance_id;
 /**<
   Algorithm instance ID maintained/assigned by SAM.
   The client shall use this instance ID for future messages associated with
   current algorithm instance.
   */

 //! Convergence Status
 //! @VERSION_INTRODUCED 1.0
 //! @VERSION 1.0
 optional sns_sam_iod_autocal_status_e convergence_status;
 /**<
   * Convergence status, can be either
   * SNS_SAM_IOD_AUTOCAL_STATUS_NOT_CONVERGED
   * or SNS_SAM_IOD_AUTOCAL_STATUS_CONVERGED
   * @ENUM ()
  */

 optional uint32 cumulative_num_samples;
 /**<
   * Cumulative number of samples received by IOD autocalibration.
    */
} sns_sam_iod_autocal_get_report_resp_msg;

//============================================================================
// Indications
//============================================================================

//============================================================================

/** @COMMAND SNS_SAM_IOD_AUTOCAL_REPORT
    @BRIEF Output report from the IOD Autocal algorithm.
    @USAGE Production
    @SECURITY_LEVEL Low Risk
    @REQUIRED_ACTION Default
    @DESCRIPTION This report indicates current convergence status of
	the autocal algorithm.
    @CMD_VERSION 1.0
*/
//============================================================================

//! @MSG     SNS_SAM_IOD_AUTOCAL_REPORT_IND
//! @TYPE    Indication
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
 mandatory uint8 instance_id;
 /**< Identifies the algorithm instance.  */

 //! Convergence Status
 //! @VERSION_INTRODUCED 1.0
 //! @VERSION 1.0
 mandatory sns_sam_iod_autocal_status_e convergence_status;
 /**<
   * Convergence status, can be either
   * SNS_SAM_IOD_AUTOCAL_STATUS_NOT_CONVERGED
   * or SNS_SAM_IOD_AUTOCAL_STATUS_CONVERGED
   * @ENUM ()
  */

 optional float auto_cal_coeff;
 /**<
   * Autocalibration coefficient. It will be reported only if Autocal has
   * converged.
  */
} sns_sam_iod_autocal_report_ind_msg;

//============================================================================
/** @COMMAND SNS_SAM_IOD_AUTOCAL_ERROR
    @BRIEF Asynchronous error report from a sensor algorithm.
*/
//============================================================================

//! @MSG     SNS_SAM_IOD_AUTOCAL_ERROR_IND
//! @TYPE    Indication
//! @SENDER  Service
//============================================================================

message {
  mandatory uint8                            error; /**< sensors error code */
  mandatory uint8                            instance_id;
} sns_sam_iod_autocal_error_ind_msg;

//============================================================================
/** @COMMAND SNS_SAM_IOD_AUTOCAL_UPDATE
    @BRIEF This command configures the IOD Autocal algorithm after it has been enabled.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
    @CMD_VERSION 1.0
*/
//============================================================================

//! @MSG     SNS_SAM_IOD_AUTOCAL_UPDATE_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------
message {
 mandatory uint8 instance_id;
 /**< Identifies the algorithm instance.  */

 //! Sunset and Sunrise Timestamps
 //! @VERSION_INTRODUCED 1.0
 //! @VERSION 1.0
 mandatory sns_sam_iod_autocal_sunset_sunrise_ts_s sunset_sunrise_ts;
 /**< UTC sunset/sunrise timestamps in secs from Unix epoch for the current
  *   location of the client Sunset/sunrise timestamps will be used by
  *   the IOD autocalibration algorithm to determine when to resume/suspend
  *   processing sensors data for autocalibration during the night
  */
} sns_sam_iod_autocal_update_req_msg;
/**< Parameters are optional, but one parameter should be present or an error
  *  response code will be sent back */

//! @MSG     SNS_SAM_IOD_AUTOCAL_UPDATE_RESP
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
 mandatory sns_common_resp_s resp = 2;

 optional uint8 instance_id;
 /**<
   Algorithm instance ID maintained/assigned by SAM.
   The client shall use this instance ID for future messages associated with
   current algorithm instance.
   */
} sns_sam_iod_autocal_update_resp_msg;

//============================================================================
/** @COMMAND SNS_SAM_IOD_AUTOCAL_CANCEL
    @BRIEF Cancels all requests to the algorithm service from this client.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//============================================================================
/** @COMMAND SNS_SAM_IOD_AUTOCAL_VERSION
    @BRIEF This command requests algorithm service version.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//============================================================================
// Service definition
//============================================================================

service SNS_SAM_IOD_AUTOCAL_SVC {
 //! @ID SNS_SAM_IOD_AUTOCAL_CANCEL
 sns_common_cancel_req_msg          SNS_SAM_IOD_AUTOCAL_CANCEL_REQ,
 sns_common_cancel_resp_msg         SNS_SAM_IOD_AUTOCAL_CANCEL_RESP
   = 0x00;

 //! @ID SNS_SAM_IOD_AUTOCAL_VERSION
 sns_common_version_req_msg         SNS_SAM_IOD_AUTOCAL_VERSION_REQ,
 sns_common_version_resp_msg        SNS_SAM_IOD_AUTOCAL_VERSION_RESP
   = 0x01;

 //! @ID SNS_SAM_IOD_AUTOCAL_ENABLE
 sns_sam_iod_autocal_enable_req_msg      SNS_SAM_IOD_AUTOCAL_ENABLE_REQ,
 sns_sam_iod_autocal_enable_resp_msg     SNS_SAM_IOD_AUTOCAL_ENABLE_RESP
   = 0x02;

 //! @ID SNS_SAM_IOD_AUTOCAL_DISABLE
 sns_sam_iod_autocal_disable_req_msg     SNS_SAM_IOD_AUTOCAL_DISABLE_REQ,
 sns_sam_iod_autocal_disable_resp_msg    SNS_SAM_IOD_AUTOCAL_DISABLE_RESP
   = 0x03;

 //! @ID SNS_SAM_IOD_AUTOCAL_GET_REPORT
 sns_sam_iod_autocal_get_report_req_msg  SNS_SAM_IOD_AUTOCAL_GET_REPORT_REQ,
 sns_sam_iod_autocal_get_report_resp_msg SNS_SAM_IOD_AUTOCAL_GET_REPORT_RESP
   = 0x04;

 //! @ID SNS_SAM_IOD_AUTOCAL_REPORT
 sns_sam_iod_autocal_report_ind_msg      SNS_SAM_IOD_AUTOCAL_REPORT_IND
   = 0x05;

 //! @ID SNS_SAM_IOD_AUTOCAL_ERROR
 sns_sam_iod_autocal_error_ind_msg       SNS_SAM_IOD_AUTOCAL_ERROR_IND
   = 0x06;

 //! @ID SNS_SAM_IOD_AUTOCAL_UPDATE
 sns_sam_iod_autocal_update_req_msg   SNS_SAM_IOD_AUTOCAL_UPDATE_REQ,
 sns_sam_iod_autocal_update_resp_msg  SNS_SAM_IOD_AUTOCAL_UPDATE_RESP
   = 0x20;

 //! @ID SNS_SAM_GET_ALGO_ATTRIBUTES
 sns_sam_get_algo_attrib_req_msg    SNS_SAM_IOD_AUTOCAL_GET_ATTRIBUTES_REQ,
 sns_sam_get_algo_attrib_resp_msg   SNS_SAM_IOD_AUTOCAL_GET_ATTRIBUTES_RESP
   = 0x24;

} = SNS_QMI_SVC_ID_55;

//============================================================================
// File footer
//============================================================================
/**
@FOOTER
*/

//============================================================================
// End of Module
//============================================================================

/*
 * Copyright (c) 2018 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 *
 * Not a Contribution.
 * Apache license notifications and license are retained
 * for attribution purposes only.
 */

/*
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package vendor.qti.hardware.radio.ims@1.3;

import @1.2::IImsRadioResponse;

interface IImsRadioResponse extends @1.2::IImsRadioResponse {

    /**
     *
     * Response to Supplementary service requests -
     *             MessageId.REQUEST_SET_CALL_FORWARD_STATUS
     *             MessageId.REQUEST_SET_CALL_WAITING
     *             MessageId.REQUEST_SUPP_SVC_STATUS
     *             MessageId.REQUEST_SET_COLR
     *
     * @param token Id to match request/response. Response must include same token.
     * @param errorCode - errorCode of type ImsErrorCode.Error returned from RIL.
     * @param suppServiceStatus supplementary service query status for call forwarding,
     * call waiting, etc. Has service class type enabled/disabled, facility type, error code, etc.
     *
     */
    oneway suppServiceStatusResponse_1_3(int32_t token, uint32_t errorCode,
        SuppServiceStatus suppServiceStatus);

    /**
     * Response to MessageId.REQUEST_QUERY_COLR
     *
     * @param token Id to match request/response. Response must include same token.
     * @param errorCode - errorCode of type ImsErrorCode.Error returned from RIL.
     * @param colrInfo COLR Info - IP presentation and error details
     *
     */
    oneway getColrResponse_1_3(int32_t token, uint32_t errorCode, ColrInfo colrInfo);
};

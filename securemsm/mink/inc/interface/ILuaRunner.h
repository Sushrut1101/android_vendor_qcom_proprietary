// =======================================================================
// Copyright (c) 2020 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
// =======================================================================

#pragma once
// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"

#define ILuaRunner_OP_run 0
#define ILuaRunner_OP_setObject 1
#define ILuaRunner_OP_clearObject 2

static inline int32_t
ILuaRunner_release(Object self)
{
  return Object_invoke(self, Object_OP_release, 0, 0);
}

static inline int32_t
ILuaRunner_retain(Object self)
{
  return Object_invoke(self, Object_OP_retain, 0, 0);
}

static inline int32_t
ILuaRunner_run(Object self)
{
  return Object_invoke(self, ILuaRunner_OP_run, 0, 0);
}

static inline int32_t
ILuaRunner_setObject(Object self, uint32_t uid_val, Object obj_val)
{
  ObjectArg a[2];
  a[0].b = (ObjectBuf) { &uid_val, sizeof(uint32_t) };
  a[1].o = obj_val;

  return Object_invoke(self, ILuaRunner_OP_setObject, a, ObjectCounts_pack(1, 0, 1, 0));
}

static inline int32_t
ILuaRunner_clearObject(Object self, uint32_t uid_val)
{
  ObjectArg a[1];
  a[0].b = (ObjectBuf) { &uid_val, sizeof(uint32_t) };

  return Object_invoke(self, ILuaRunner_OP_clearObject, a, ObjectCounts_pack(1, 0, 0, 0));
}




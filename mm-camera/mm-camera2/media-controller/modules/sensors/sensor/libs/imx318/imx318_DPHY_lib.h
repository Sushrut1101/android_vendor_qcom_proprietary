/* imx318_DPHY_lib.h
 *
 * Copyright (c) 2016 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 */


#ifndef __IMX318_LIB_H__
#define __IMX318_LIB_H__

#include "sensor_lib.h"
#define SENSOR_MODEL "imx318"

/* IMX318 Regs */
#define IMX318_DIG_GAIN_GLOBAL_ADDR   0x020E
#define IMX318_DIG_GAIN_R_ADDR        0x0210
#define IMX318_DIG_GAIN_B_ADDR        0x0212
#define IMX318_DIG_GAIN_GB_ADDR       0x0214
#define IMX318_EXP_RATIO_ADDR         0x0222
#define IMX318_ABS_GAIN_R_WORD_ADDR   0x0B90
#define IMX318_ABS_GAIN_B_WORD_ADDR   0x0B92

#define PD_ENABLE_HDR_ADDR 0x3011
#define PD_ENABLE_ADDR 0x3031
#define AREA_MODE_ADDR 0x315d
#define PD_OUT_EN_ADDR 0x3033
#define PD_AREA_X_OFFSET_ADDR 0x3100
#define PD_AREA_Y_OFFSET_ADDR 0x3102
#define PD_AREA_WIDTH_ADDR 0x3104
#define PD_AREA_HEIGHT_ADDR 0x3106
#define FLEX_AREA_EN_ADDR 0x315E
#define FLEX_AREA_XSTA0_ADDR 0x3108
#define CL_SHIFT_ADDR 0x3167

/* IMX318 CONSTANTS */
#define IMX318_MAX_INTEGRATION_MARGIN   10

/* STATS DATA TYPE */
#define IMX318_CSI_HDR_ISTATS           0x35
#define IMX318_CSI_PD_ISTATS            0x36

#define IMX318_DATA_PEDESTAL            0x40 /* 10bit value */

#define IMX318_MIN_AGAIN_REG_VAL        0 /* 1.0x */
#define IMX318_MAX_AGAIN_REG_VAL        480 /* 16.0x */

#define IMX318_MIN_DGAIN_REG_VAL        256 /* 1.0x */
#define IMX318_MAX_DGAIN_REG_VAL        256 /* 1.0x */

#define IMX318_MAX_DGAIN_DECIMATOR      256

/* IMX318 FORMULAS */
#define IMX318_MIN_AGAIN    (512 / (512 - IMX318_MIN_AGAIN_REG_VAL))
#define IMX318_MAX_AGAIN    (512 / (512 - IMX318_MAX_AGAIN_REG_VAL))

#define IMX318_MIN_DGAIN    (IMX318_MIN_DGAIN_REG_VAL / 256)
#define IMX318_MAX_DGAIN    (IMX318_MAX_DGAIN_REG_VAL / 256)

#define IMX318_MIN_GAIN     IMX318_MIN_AGAIN * IMX318_MIN_DGAIN
#define IMX318_MAX_GAIN     IMX318_MAX_AGAIN * IMX318_MAX_DGAIN

#define IMX318_SHORT_COARSE_INT_TIME_ADDR 0x0224
#define IMX318_SHORT_GAIN_ADDR 0x0216

#define FULL_SIZE_WIDTH 5488
#define FULL_SIZE_HEIGHT 4112

#define PD_FLEX_WIN_NUM 6

#define PD_AREA_MODE  2 /* AREA_MODE: 0 - 16x12, 1 - 8x6, 2 - Flexible */
#define PD_WIN_X (PD_AREA_MODE==2 ? 1 : (16/(PD_AREA_MODE+1)))
#define PD_WIN_Y (PD_AREA_MODE==2 ? PD_FLEX_WIN_NUM : (12/(PD_AREA_MODE+1)))

/* PD area settings for full-size */
#define PD_AREA_WIDTH (334*(PD_AREA_MODE+1))
#define PD_AREA_HEIGHT (336*(PD_AREA_MODE+1))
#define PD_AREA_X_OFFSET 72
#define PD_AREA_Y_OFFSET 40

#define CL_SHIFT 3 /* confidence level shift to prevent overflow */
#define CL_SHIFT_BINNING 2

#define PD_WIN_X_S_0  2087
#define PD_WIN_Y_S_0  1401
#define PD_WIN_X_E_0  2908
#define PD_WIN_Y_E_0  2220
#define PD_WIN_X_S_1  2579
#define PD_WIN_Y_S_1  1401
#define PD_WIN_X_E_1  3400
#define PD_WIN_Y_E_1  2220
#define PD_WIN_X_S_2  2087
#define PD_WIN_Y_S_2  1891
#define PD_WIN_X_E_2  2908
#define PD_WIN_Y_E_2  2710
#define PD_WIN_X_S_3  2579
#define PD_WIN_Y_S_3  1891
#define PD_WIN_X_E_3  3400
#define PD_WIN_Y_E_3  2710
#define PD_WIN_X_S_4  2087
#define PD_WIN_Y_S_4  1401
#define PD_WIN_X_E_4  3400
#define PD_WIN_Y_E_4  2710
#define PD_WIN_X_S_5  1646
#define PD_WIN_Y_S_5  1234
#define PD_WIN_X_E_5  3840
#define PD_WIN_Y_E_5  2877

#define SCALE_X(n) (n/(float)FULL_SIZE_WIDTH)
#define SCALE_Y(n) (n/(float)FULL_SIZE_HEIGHT)

#define START_REG_ARRAY \
{ \
  {0x0100, 0x01, 0x00}, \
}

#define STOP_REG_ARRAY \
{ \
  {0x0100, 0x00, 0x00}, \
}

#define GROUPON_REG_ARRAY \
{ \
  {0x0104, 0x01, 0x00}, \
}

#define GROUPOFF_REG_ARRAY \
{ \
  {0x0104, 0x00, 0x00}, \
}

#define INIT0_REG_ARRAY \
{ \
  /* External Clock Setting  */ \
  {0x0136, 0x18, 0x00}, \
  {0x0137, 0x00, 0x00}, \
  /* Global Setting   */ \
  {0x3067, 0x00, 0x00}, \
  {0x41B6, 0x0A, 0x00}, \
  {0x4600, 0x1B, 0x00}, \
  {0x46C2, 0x00, 0x00}, \
  {0x4877, 0x11, 0x00}, \
  {0x487B, 0x4D, 0x00}, \
  {0x487F, 0x27, 0x00}, \
  {0x4883, 0xB4, 0x00}, \
  {0x4C6F, 0x5E, 0x00}, \
  {0x5113, 0xF4, 0x00}, \
  {0x5115, 0xF6, 0x00}, \
  {0x5125, 0xF4, 0x00}, \
  {0x5127, 0xF8, 0x00}, \
  {0x51CF, 0xF4, 0x00}, \
  {0x51E9, 0xF4, 0x00}, \
  {0x5483, 0x7A, 0x00}, \
  {0x5485, 0x7C, 0x00}, \
  {0x5495, 0x7A, 0x00}, \
  {0x5497, 0x7F, 0x00}, \
  {0x5515, 0xC3, 0x00}, \
  {0x5517, 0xC7, 0x00}, \
  {0x552B, 0x7A, 0x00}, \
  {0x5535, 0x7A, 0x00}, \
  {0x5A35, 0x1B, 0x00}, \
  {0x5C13, 0x00, 0x00}, \
  {0x5D89, 0xB1, 0x00}, \
  {0x5D8B, 0x2C, 0x00}, \
  {0x5D8D, 0x61, 0x00}, \
  {0x5D8F, 0xE1, 0x00}, \
  {0x5D91, 0x4D, 0x00}, \
  {0x5D93, 0xB4, 0x00}, \
  {0x5D95, 0x41, 0x00}, \
  {0x5D97, 0x96, 0x00}, \
  {0x5D99, 0x37, 0x00}, \
  {0x5D9B, 0x81, 0x00}, \
  {0x5D9D, 0x31, 0x00}, \
  {0x5D9F, 0x71, 0x00}, \
  {0x5DA1, 0x2B, 0x00}, \
  {0x5DA3, 0x64, 0x00}, \
  {0x5DA5, 0x27, 0x00}, \
  {0x5DA7, 0x5A, 0x00}, \
  {0x6008, 0x0A, 0x00}, \
  {0x6009, 0x03, 0x00}, \
  {0x613A, 0x05, 0x00}, \
  {0x613C, 0x23, 0x00}, \
  {0x6142, 0x02, 0x00}, \
  {0x6143, 0x63, 0x00}, \
  {0x6144, 0x09, 0x00}, \
  {0x6145, 0x0B, 0x00}, \
  {0x6146, 0x24, 0x00}, \
  {0x6147, 0x30, 0x00}, \
  {0x6148, 0x90, 0x00}, \
  {0x6149, 0xB2, 0x00}, \
  {0x614A, 0x43, 0x00}, \
  {0x614B, 0x0A, 0x00}, \
  {0x614C, 0x01, 0x00}, \
  {0x614D, 0x12, 0x00}, \
  {0x614E, 0x30, 0x00}, \
  {0x614F, 0x98, 0x00}, \
  {0x6150, 0xA2, 0x00}, \
  {0x615C, 0x40, 0x00}, \
  {0x615D, 0x40, 0x00}, \
  {0x615E, 0x66, 0x00}, \
  {0x615F, 0xC0, 0x00}, \
  {0x616C, 0x42, 0x00}, \
  {0x616D, 0x40, 0x00}, \
  {0x616E, 0xAC, 0x00}, \
  {0x616F, 0x4A, 0x00}, \
  {0x6170, 0x49, 0x00}, \
  {0x6171, 0x02, 0x00}, \
  {0x6172, 0xB1, 0x00}, \
  {0x6173, 0x29, 0x00}, \
  {0x6176, 0x24, 0x00}, \
  {0x6177, 0x93, 0x00}, \
  {0x6178, 0x4B, 0x00}, \
  {0x6179, 0x45, 0x00}, \
  {0x617A, 0x48, 0x00}, \
  {0x617B, 0x14, 0x00}, \
  {0x617C, 0x26, 0x00}, \
  {0x617D, 0x94, 0x00}, \
  {0x617E, 0x5A, 0x00}, \
  {0x617F, 0x35, 0x00}, \
  {0x6182, 0x15, 0x00}, \
  {0x618E, 0x06, 0x00}, \
  {0x618F, 0xA5, 0x00}, \
  {0x6190, 0x2F, 0x00}, \
  {0x6A5F, 0x03, 0x00}, \
  {0x9300, 0x80, 0x00}, \
  {0x9301, 0xCD, 0x00}, \
  {0x9302, 0xFF, 0x00}, \
  {0x9303, 0x32, 0x00}, \
  {0x9306, 0x50, 0x00}, \
  {0x9307, 0x50, 0x00}, \
  {0x9309, 0x46, 0x00}, \
  {0x930A, 0x46, 0x00}, \
  {0x930C, 0x50, 0x00}, \
  {0x930D, 0x50, 0x00}, \
  {0x930F, 0x51, 0x00}, \
  {0x9310, 0x3C, 0x00}, \
  {0x9312, 0x30, 0x00}, \
  {0x9313, 0x16, 0x00}, \
  {0x9324, 0x05, 0x00}, \
  {0x9327, 0x05, 0x00}, \
  {0x932A, 0x05, 0x00}, \
  {0x932D, 0x06, 0x00}, \
  {0x9330, 0x10, 0x00}, \
  {0x9331, 0x10, 0x00}, \
  {0x9332, 0x15, 0x00}, \
  {0x9333, 0x05, 0x00}, \
  {0x9334, 0x0C, 0x00}, \
  {0x9335, 0x10, 0x00}, \
  {0x9336, 0x05, 0x00}, \
  {0x9337, 0x0C, 0x00}, \
  {0x9338, 0x10, 0x00}, \
  {0x9339, 0x05, 0x00}, \
  {0x933A, 0x0C, 0x00}, \
  {0x933B, 0x10, 0x00}, \
  {0x933C, 0x06, 0x00}, \
  {0x933D, 0x0C, 0x00}, \
  {0x933E, 0x10, 0x00}, \
  {0x9343, 0x16, 0x00}, \
  {0x9344, 0x16, 0x00}, \
  {0x9345, 0x16, 0x00}, \
  {0x9346, 0x16, 0x00}, \
  /* Image Tuning Setting  */ \
  {0x0B91, 0xB0, 0x00}, \
  {0x0B93, 0xB2, 0x00}, \
  {0x3150, 0x04, 0x00}, \
  {0x3151, 0x03, 0x00}, \
  {0x3152, 0x02, 0x00}, \
  {0x3153, 0x01, 0x00}, \
  {0x3190, 0x01, 0x00}, \
  {0x3260, 0x02, 0x00}, \
  {0x327D, 0x04, 0x00}, \
  {0x3280, 0x01, 0x00}, \
  {0x3281, 0x01, 0x00}, \
  {0x3282, 0x01, 0x00}, \
  {0x3283, 0x01, 0x00}, \
  {0x3284, 0x01, 0x00}, \
  {0x3285, 0x01, 0x00}, \
  {0x3286, 0x01, 0x00}, \
  {0x3287, 0x01, 0x00}, \
  {0x3288, 0x01, 0x00}, \
  {0x3289, 0x01, 0x00}, \
  {0x328A, 0x01, 0x00}, \
  {0x7468, 0x03, 0x00}, \
  {0x7B65, 0x8C, 0x00}, \
  {0x7B67, 0x4B, 0x00}, \
  {0x7B69, 0x8C, 0x00}, \
  {0x7B6B, 0x4B, 0x00}, \
  {0x7B6D, 0x8C, 0x00}, \
  {0x7B6F, 0x4B, 0x00}, \
  {0x7B70, 0x40, 0x00}, \
  {0x861E, 0x00, 0x00}, \
  {0x8760, 0x02, 0x00}, \
  {0x901F, 0x64, 0x00}, \
  {0x9805, 0x04, 0x00}, \
  {0x9822, 0x03, 0x00}, \
  {0x9843, 0x01, 0x00}, \
  {0x9902, 0x00, 0x00}, \
  {0x9903, 0x01, 0x00}, \
  {0x9904, 0x00, 0x00}, \
  {0x9905, 0x01, 0x00}, \
  {0x990E, 0x00, 0x00}, \
  {0x9944, 0x3C, 0x00}, \
  {0x9947, 0x3C, 0x00}, \
  {0x994A, 0x8C, 0x00}, \
  {0x994B, 0x1B, 0x00}, \
  {0x994C, 0x0A, 0x00}, \
  {0x994D, 0x8C, 0x00}, \
  {0x994E, 0x1B, 0x00}, \
  {0x994F, 0x0A, 0x00}, \
  {0x9950, 0x8C, 0x00}, \
  {0x9951, 0x50, 0x00}, \
  {0x9952, 0x1B, 0x00}, \
  {0x9953, 0x8C, 0x00}, \
  {0x9954, 0x50, 0x00}, \
  {0x9955, 0x1B, 0x00}, \
  {0x996E, 0x50, 0x00}, \
  {0x996F, 0x3C, 0x00}, \
  {0x9970, 0x1B, 0x00}, \
  {0x9A08, 0x04, 0x00}, \
  {0x9A09, 0x05, 0x00}, \
  {0x9A0A, 0x04, 0x00}, \
  {0x9A0B, 0x05, 0x00}, \
  {0x9A0C, 0x04, 0x00}, \
  {0x9A0D, 0x05, 0x00}, \
  {0x9A0E, 0x06, 0x00}, \
  {0x9A0F, 0x07, 0x00}, \
  {0x9A10, 0x06, 0x00}, \
  {0x9A11, 0x07, 0x00}, \
  {0x9A12, 0x07, 0x00}, \
  {0x9A13, 0x07, 0x00}, \
  {0x9A14, 0x07, 0x00}, \
  {0x9A2B, 0x0F, 0x00}, \
  {0x9A2C, 0x0F, 0x00}, \
  {0x9A2D, 0x0F, 0x00}, \
  {0x9A2E, 0x0F, 0x00}, \
  {0x9A2F, 0x0F, 0x00}, \
  {0x9A36, 0x02, 0x00}, \
  {0x9A37, 0x02, 0x00}, \
  {0x9A3F, 0x0E, 0x00}, \
  {0x9A40, 0x0E, 0x00}, \
  {0x9A41, 0x0E, 0x00}, \
  {0x9A42, 0x0E, 0x00}, \
  {0x9A43, 0x0F, 0x00}, \
  {0x9A44, 0x0F, 0x00}, \
  {0x9A4C, 0x0F, 0x00}, \
  {0x9A4D, 0x0F, 0x00}, \
  {0x9A4E, 0x0F, 0x00}, \
  {0x9A4F, 0x0F, 0x00}, \
  {0x9A50, 0x0F, 0x00}, \
  {0x9A54, 0x0F, 0x00}, \
  {0x9A55, 0x0F, 0x00}, \
  {0x9A5C, 0x03, 0x00}, \
  {0x9A5E, 0x03, 0x00}, \
  {0x9A64, 0x0E, 0x00}, \
  {0x9A65, 0x0E, 0x00}, \
  {0x9A66, 0x0E, 0x00}, \
  {0x9A67, 0x0E, 0x00}, \
  {0x9A6F, 0x0F, 0x00}, \
  {0x9A70, 0x0F, 0x00}, \
  {0x9A71, 0x0F, 0x00}, \
  {0x9A72, 0x0F, 0x00}, \
  {0x9A73, 0x0F, 0x00}, \
  {0x9AAC, 0x06, 0x00}, \
  {0x9AAD, 0x06, 0x00}, \
  {0x9AAE, 0x06, 0x00}, \
  {0x9AAF, 0x06, 0x00}, \
  {0x9AB0, 0x06, 0x00}, \
  {0x9AB1, 0x06, 0x00}, \
  {0x9AB2, 0x06, 0x00}, \
  {0x9AB3, 0x07, 0x00}, \
  {0x9AB4, 0x07, 0x00}, \
  {0x9AB5, 0x07, 0x00}, \
  {0x9AB6, 0x07, 0x00}, \
  {0x9AB7, 0x07, 0x00}, \
  {0x9AB8, 0x06, 0x00}, \
  {0x9AB9, 0x06, 0x00}, \
  {0x9ABA, 0x06, 0x00}, \
  {0x9ABB, 0x06, 0x00}, \
  {0x9ABC, 0x06, 0x00}, \
  {0x9ABD, 0x07, 0x00}, \
  {0x9ABE, 0x07, 0x00}, \
  {0x9ABF, 0x07, 0x00}, \
  {0x9AC0, 0x07, 0x00}, \
  {0x9AC1, 0x07, 0x00}, \
  {0xA000, 0x00, 0x00}, \
  {0xA001, 0x00, 0x00}, \
  {0xA002, 0x00, 0x00}, \
  {0xA003, 0x00, 0x00}, \
  {0xA004, 0x00, 0x00}, \
  {0xA005, 0x00, 0x00}, \
  {0xA017, 0x10, 0x00}, \
  {0xA019, 0x10, 0x00}, \
  {0xA01B, 0x10, 0x00}, \
  {0xA01D, 0x35, 0x00}, \
  {0xA023, 0x31, 0x00}, \
  {0xA02F, 0x50, 0x00}, \
  {0xA041, 0x6B, 0x00}, \
  {0xA047, 0x40, 0x00}, \
  {0xA068, 0x00, 0x00}, \
  {0xA069, 0x00, 0x00}, \
  {0xA06A, 0x00, 0x00}, \
  {0xA06B, 0x00, 0x00}, \
  {0xA06C, 0x00, 0x00}, \
  {0xA06D, 0x00, 0x00}, \
  {0xA06E, 0x00, 0x00}, \
  {0xA06F, 0x00, 0x00}, \
  {0xA070, 0x00, 0x00}, \
  {0xA075, 0x50, 0x00}, \
  {0xA077, 0x50, 0x00}, \
  {0xA079, 0x50, 0x00}, \
  {0xA07B, 0x40, 0x00}, \
  {0xA07D, 0x40, 0x00}, \
  {0xA07F, 0x40, 0x00}, \
  {0xA0AD, 0x18, 0x00}, \
  {0xA0AE, 0x18, 0x00}, \
  {0xA0AF, 0x18, 0x00}, \
  {0xA0B6, 0x00, 0x00}, \
  {0xA0B7, 0x00, 0x00}, \
  {0xA0B8, 0x00, 0x00}, \
  {0xA0B9, 0x00, 0x00}, \
  {0xA0BA, 0x00, 0x00}, \
  {0xA0BB, 0x00, 0x00}, \
  {0xA0BD, 0x2D, 0x00}, \
  {0xA0C3, 0x2D, 0x00}, \
  {0xA0C9, 0x40, 0x00}, \
  {0xA0D5, 0x2F, 0x00}, \
  {0xA100, 0x00, 0x00}, \
  {0xA101, 0x00, 0x00}, \
  {0xA102, 0x00, 0x00}, \
  {0xA103, 0x00, 0x00}, \
  {0xA104, 0x00, 0x00}, \
  {0xA105, 0x00, 0x00}, \
  {0xA117, 0x10, 0x00}, \
  {0xA119, 0x10, 0x00}, \
  {0xA11B, 0x10, 0x00}, \
  {0xA11D, 0x35, 0x00}, \
  {0xA123, 0x31, 0x00}, \
  {0xA12F, 0x50, 0x00}, \
  {0xA13B, 0x35, 0x00}, \
  {0xA13D, 0x35, 0x00}, \
  {0xA13F, 0x35, 0x00}, \
  {0xA141, 0x6B, 0x00}, \
  {0xA147, 0x5A, 0x00}, \
  {0xA168, 0x3F, 0x00}, \
  {0xA169, 0x3F, 0x00}, \
  {0xA16A, 0x3F, 0x00}, \
  {0xA16B, 0x00, 0x00}, \
  {0xA16C, 0x00, 0x00}, \
  {0xA16D, 0x00, 0x00}, \
  {0xA16E, 0x3F, 0x00}, \
  {0xA16F, 0x3F, 0x00}, \
  {0xA170, 0x3F, 0x00}, \
  {0xA1B6, 0x00, 0x00}, \
  {0xA1B7, 0x00, 0x00}, \
  {0xA1B8, 0x00, 0x00}, \
  {0xA1B9, 0x00, 0x00}, \
  {0xA1BA, 0x00, 0x00}, \
  {0xA1BB, 0x00, 0x00}, \
  {0xA1BD, 0x42, 0x00}, \
  {0xA1C3, 0x42, 0x00}, \
  {0xA1C9, 0x5A, 0x00}, \
  {0xA1D5, 0x2F, 0x00}, \
  {0xA200, 0x00, 0x00}, \
  {0xA201, 0x00, 0x00}, \
  {0xA202, 0x00, 0x00}, \
  {0xA203, 0x00, 0x00}, \
  {0xA204, 0x00, 0x00}, \
  {0xA205, 0x00, 0x00}, \
  {0xA217, 0x10, 0x00}, \
  {0xA219, 0x10, 0x00}, \
  {0xA21B, 0x10, 0x00}, \
  {0xA21D, 0x35, 0x00}, \
  {0xA223, 0x31, 0x00}, \
  {0xA22F, 0x50, 0x00}, \
  {0xA241, 0x6B, 0x00}, \
  {0xA247, 0x40, 0x00}, \
  {0xA268, 0x00, 0x00}, \
  {0xA269, 0x00, 0x00}, \
  {0xA26A, 0x00, 0x00}, \
  {0xA26B, 0x00, 0x00}, \
  {0xA26C, 0x00, 0x00}, \
  {0xA26D, 0x00, 0x00}, \
  {0xA26E, 0x00, 0x00}, \
  {0xA26F, 0x00, 0x00}, \
  {0xA270, 0x00, 0x00}, \
  {0xA271, 0x00, 0x00}, \
  {0xA272, 0x00, 0x00}, \
  {0xA273, 0x00, 0x00}, \
  {0xA275, 0x50, 0x00}, \
  {0xA277, 0x50, 0x00}, \
  {0xA279, 0x50, 0x00}, \
  {0xA27B, 0x40, 0x00}, \
  {0xA27D, 0x40, 0x00}, \
  {0xA27F, 0x40, 0x00}, \
  {0xA2B6, 0x00, 0x00}, \
  {0xA2B7, 0x00, 0x00}, \
  {0xA2B8, 0x00, 0x00}, \
  {0xA2B9, 0x00, 0x00}, \
  {0xA2BA, 0x00, 0x00}, \
  {0xA2BB, 0x00, 0x00}, \
  {0xA2BD, 0x2D, 0x00}, \
  {0xA2D5, 0x2F, 0x00}, \
  {0xA300, 0x00, 0x00}, \
  {0xA301, 0x00, 0x00}, \
  {0xA302, 0x00, 0x00}, \
  {0xA303, 0x00, 0x00}, \
  {0xA304, 0x00, 0x00}, \
  {0xA305, 0x00, 0x00}, \
  {0xA317, 0x10, 0x00}, \
  {0xA319, 0x10, 0x00}, \
  {0xA31B, 0x10, 0x00}, \
  {0xA31D, 0x35, 0x00}, \
  {0xA323, 0x31, 0x00}, \
  {0xA32F, 0x50, 0x00}, \
  {0xA341, 0x6B, 0x00}, \
  {0xA347, 0x5A, 0x00}, \
  {0xA368, 0x0F, 0x00}, \
  {0xA369, 0x0F, 0x00}, \
  {0xA36A, 0x0F, 0x00}, \
  {0xA36B, 0x30, 0x00}, \
  {0xA36C, 0x00, 0x00}, \
  {0xA36D, 0x00, 0x00}, \
  {0xA36E, 0x3F, 0x00}, \
  {0xA36F, 0x3F, 0x00}, \
  {0xA370, 0x2F, 0x00}, \
  {0xA371, 0x30, 0x00}, \
  {0xA372, 0x00, 0x00}, \
  {0xA373, 0x00, 0x00}, \
  {0xA3B6, 0x00, 0x00}, \
  {0xA3B7, 0x00, 0x00}, \
  {0xA3B8, 0x00, 0x00}, \
  {0xA3B9, 0x00, 0x00}, \
  {0xA3BA, 0x00, 0x00}, \
  {0xA3BB, 0x00, 0x00}, \
  {0xA3BD, 0x42, 0x00}, \
  {0xA3D5, 0x2F, 0x00}, \
  {0xA400, 0x00, 0x00}, \
  {0xA401, 0x00, 0x00}, \
  {0xA402, 0x00, 0x00}, \
  {0xA403, 0x00, 0x00}, \
  {0xA404, 0x00, 0x00}, \
  {0xA405, 0x00, 0x00}, \
  {0xA407, 0x10, 0x00}, \
  {0xA409, 0x10, 0x00}, \
  {0xA40B, 0x10, 0x00}, \
  {0xA40D, 0x35, 0x00}, \
  {0xA413, 0x31, 0x00}, \
  {0xA41F, 0x50, 0x00}, \
  {0xA431, 0x6B, 0x00}, \
  {0xA437, 0x40, 0x00}, \
  {0xA454, 0x00, 0x00}, \
  {0xA455, 0x00, 0x00}, \
  {0xA456, 0x00, 0x00}, \
  {0xA457, 0x00, 0x00}, \
  {0xA458, 0x00, 0x00}, \
  {0xA459, 0x00, 0x00}, \
  {0xA45A, 0x00, 0x00}, \
  {0xA45B, 0x00, 0x00}, \
  {0xA45C, 0x00, 0x00}, \
  {0xA45D, 0x00, 0x00}, \
  {0xA45E, 0x00, 0x00}, \
  {0xA45F, 0x00, 0x00}, \
  {0xA48D, 0x18, 0x00}, \
  {0xA48E, 0x18, 0x00}, \
  {0xA48F, 0x18, 0x00}, \
  {0xA496, 0x00, 0x00}, \
  {0xA497, 0x00, 0x00}, \
  {0xA498, 0x00, 0x00}, \
  {0xA499, 0x00, 0x00}, \
  {0xA49A, 0x00, 0x00}, \
  {0xA49B, 0x00, 0x00}, \
  {0xA49D, 0x2D, 0x00}, \
  {0xA4A3, 0x2D, 0x00}, \
  {0xA4A9, 0x40, 0x00}, \
  {0xA4B5, 0x2F, 0x00}, \
  {0xA500, 0x00, 0x00}, \
  {0xA501, 0x00, 0x00}, \
  {0xA502, 0x00, 0x00}, \
  {0xA503, 0x00, 0x00}, \
  {0xA504, 0x00, 0x00}, \
  {0xA505, 0x00, 0x00}, \
  {0xA507, 0x10, 0x00}, \
  {0xA509, 0x10, 0x00}, \
  {0xA50B, 0x10, 0x00}, \
  {0xA50D, 0x35, 0x00}, \
  {0xA513, 0x31, 0x00}, \
  {0xA51F, 0x50, 0x00}, \
  {0xA52B, 0x35, 0x00}, \
  {0xA52D, 0x35, 0x00}, \
  {0xA52F, 0x35, 0x00}, \
  {0xA531, 0x6B, 0x00}, \
  {0xA537, 0x5A, 0x00}, \
  {0xA554, 0x3F, 0x00}, \
  {0xA555, 0x3F, 0x00}, \
  {0xA556, 0x3F, 0x00}, \
  {0xA557, 0x00, 0x00}, \
  {0xA558, 0x00, 0x00}, \
  {0xA559, 0x00, 0x00}, \
  {0xA55A, 0x3F, 0x00}, \
  {0xA55B, 0x3F, 0x00}, \
  {0xA55C, 0x3F, 0x00}, \
  {0xA55D, 0x00, 0x00}, \
  {0xA55E, 0x00, 0x00}, \
  {0xA55F, 0x00, 0x00}, \
  {0xA596, 0x00, 0x00}, \
  {0xA597, 0x00, 0x00}, \
  {0xA598, 0x00, 0x00}, \
  {0xA599, 0x00, 0x00}, \
  {0xA59A, 0x00, 0x00}, \
  {0xA59B, 0x00, 0x00}, \
  {0xA59D, 0x42, 0x00}, \
  {0xA5A3, 0x42, 0x00}, \
  {0xA5A9, 0x5A, 0x00}, \
  {0xA5B5, 0x2F, 0x00}, \
  {0xA653, 0x84, 0x00}, \
  {0xA65F, 0x00, 0x00}, \
  {0xA6B5, 0xFF, 0x00}, \
  {0xA6C1, 0x00, 0x00}, \
  {0xA74F, 0xA0, 0x00}, \
  {0xA753, 0xFE, 0x00}, \
  {0xA75D, 0x00, 0x00}, \
  {0xA75F, 0x00, 0x00}, \
  {0xA7B5, 0xFF, 0x00}, \
  {0xA7C1, 0x00, 0x00}, \
  {0xCA00, 0x01, 0x00}, \
  {0xCA12, 0x2C, 0x00}, \
  {0xCA13, 0x2C, 0x00}, \
  {0xCA14, 0x1C, 0x00}, \
  {0xCA15, 0x1C, 0x00}, \
  {0xCA16, 0x06, 0x00}, \
  {0xCA17, 0x06, 0x00}, \
  {0xCA1A, 0x0C, 0x00}, \
  {0xCA1B, 0x0C, 0x00}, \
  {0xCA1C, 0x06, 0x00}, \
  {0xCA1D, 0x06, 0x00}, \
  {0xCA1E, 0x00, 0x00}, \
  {0xCA1F, 0x00, 0x00}, \
  {0xCA21, 0x04, 0x00}, \
  {0xCA23, 0x04, 0x00}, \
  {0xCA2C, 0x00, 0x00}, \
  {0xCA2D, 0x10, 0x00}, \
  {0xCA2F, 0x10, 0x00}, \
  {0xCA30, 0x00, 0x00}, \
  {0xCA32, 0x10, 0x00}, \
  {0xCA35, 0x28, 0x00}, \
  {0xCA37, 0x80, 0x00}, \
  {0xCA39, 0x10, 0x00}, \
  {0xCA3B, 0x10, 0x00}, \
  {0xCA3C, 0x20, 0x00}, \
  {0xCA3D, 0x20, 0x00}, \
  {0xCA43, 0x02, 0x00}, \
  {0xCA45, 0x02, 0x00}, \
  {0xCA46, 0x01, 0x00}, \
  {0xCA47, 0x99, 0x00}, \
  {0xCA48, 0x01, 0x00}, \
  {0xCA49, 0x99, 0x00}, \
  {0xCA66, 0x26, 0x00}, \
  {0xCA67, 0x26, 0x00}, \
  {0xCA68, 0x19, 0x00}, \
  {0xCA69, 0x19, 0x00}, \
  {0xCA6A, 0x06, 0x00}, \
  {0xCA6B, 0x06, 0x00}, \
  {0xCA6C, 0x20, 0x00}, \
  {0xCA6D, 0x20, 0x00}, \
  {0xCA6E, 0x10, 0x00}, \
  {0xCA6F, 0x10, 0x00}, \
  {0xCA70, 0x06, 0x00}, \
  {0xCA71, 0x06, 0x00}, \
  {0xCA72, 0x00, 0x00}, \
  {0xCA73, 0x00, 0x00}, \
  {0xCA75, 0x04, 0x00}, \
  {0xCA77, 0x04, 0x00}, \
  {0xCA80, 0x00, 0x00}, \
  {0xCA81, 0x30, 0x00}, \
  {0xCA84, 0x00, 0x00}, \
  {0xCA86, 0x10, 0x00}, \
  {0xCA89, 0x28, 0x00}, \
  {0xCA8B, 0x80, 0x00}, \
  {0xCA8D, 0x10, 0x00}, \
  {0xCA8F, 0x10, 0x00}, \
  {0xCA90, 0x20, 0x00}, \
  {0xCA91, 0x20, 0x00}, \
  {0xCA97, 0x02, 0x00}, \
  {0xCA99, 0x02, 0x00}, \
  {0xCA9A, 0x01, 0x00}, \
  {0xCA9B, 0x99, 0x00}, \
  {0xCA9C, 0x01, 0x00}, \
  {0xCA9D, 0x99, 0x00}, \
  {0xCAAB, 0x28, 0x00}, \
  {0xCAAD, 0x39, 0x00}, \
  {0xCAAE, 0x53, 0x00}, \
  {0xCAAF, 0x67, 0x00}, \
  {0xCAB0, 0x45, 0x00}, \
  {0xCAB1, 0x47, 0x00}, \
  {0xCAB2, 0x01, 0x00}, \
  {0xCAB3, 0x6B, 0x00}, \
  {0xCAB4, 0x06, 0x00}, \
  {0xCAB5, 0x8C, 0x00}, \
  {0xCAB7, 0xA6, 0x00}, \
  {0xCAB8, 0x06, 0x00}, \
  {0xCAB9, 0x0A, 0x00}, \
  {0xCABA, 0x08, 0x00}, \
  {0xCABB, 0x05, 0x00}, \
  {0xCABC, 0x33, 0x00}, \
  {0xCABD, 0x73, 0x00}, \
  {0xCABE, 0x02, 0x00}, \
  {0xCABF, 0x17, 0x00}, \
  {0xCAC0, 0x28, 0x00}, \
  {0xCAC1, 0xC5, 0x00}, \
  {0xCAC2, 0x08, 0x00}, \
  {0xCAC4, 0x25, 0x00}, \
  {0xCAC5, 0x0A, 0x00}, \
  {0xCAC6, 0x00, 0x00}, \
  {0xCAC8, 0x15, 0x00}, \
  {0xCAC9, 0x78, 0x00}, \
  {0xCACA, 0x1E, 0x00}, \
  {0xCACF, 0x60, 0x00}, \
  {0xCAD1, 0x28, 0x00}, \
  {0xD01A, 0x00, 0x00}, \
  {0xD080, 0x0A, 0x00}, \
  {0xD081, 0x10, 0x00}, \
  /* PDAF settings */ \
  {PD_ENABLE_ADDR, 0x01, 0x00}, \
  {PD_ENABLE_HDR_ADDR, 0x11, 0x00}, \
  {PD_OUT_EN_ADDR, 0x01, 0x00}, \
  {PD_AREA_X_OFFSET_ADDR, PD_AREA_X_OFFSET>>8, 0x00}, \
  {PD_AREA_X_OFFSET_ADDR+1, PD_AREA_X_OFFSET&0xFF, 0x00}, \
  {PD_AREA_Y_OFFSET_ADDR, PD_AREA_Y_OFFSET>>8, 0x00},\
  {PD_AREA_Y_OFFSET_ADDR+1, PD_AREA_Y_OFFSET&0xFF, 0x00}, \
  {PD_AREA_WIDTH_ADDR, PD_AREA_WIDTH>>8, 0x00}, \
  {PD_AREA_WIDTH_ADDR+1, PD_AREA_WIDTH&0xFF, 0x00}, \
  {PD_AREA_HEIGHT_ADDR, PD_AREA_HEIGHT>>8, 0x00}, \
  {PD_AREA_HEIGHT_ADDR+1, PD_AREA_HEIGHT&0xFF, 0x00}, \
  {AREA_MODE_ADDR, PD_AREA_MODE, 0x00}, /* 0-16x12, 1-8x6, 2-Flexible */ \
  /* Flexiable PDAF windows */ \
  {FLEX_AREA_EN_ADDR, 0x01, 0x00}, \
  {FLEX_AREA_EN_ADDR+1, 0x01, 0x00}, \
  {FLEX_AREA_EN_ADDR+2, 0x01, 0x00}, \
  {FLEX_AREA_EN_ADDR+3, 0x01, 0x00}, \
  {FLEX_AREA_EN_ADDR+4, 0x01, 0x00}, \
  {FLEX_AREA_EN_ADDR+5, 0x01, 0x00}, \
  {FLEX_AREA_EN_ADDR+6, 0x01, 0x00}, \
  {FLEX_AREA_EN_ADDR+7, 0x01, 0x00}, \
}

#define RES0_REG_ARRAY \
{ \
  /* reg_E-D4  Full-pixel 30fps  */ \
  /* MIPI setting   */ \
  {0x0111, 0x02, 0x00}, \
  {0x0112, 0x0A, 0x00}, \
  {0x0113, 0x0A, 0x00}, \
  {0x0114, 0x03, 0x00}, \
  /* Frame Horizontal Clock Count */ \
  {0x0342, 0x18, 0x00}, \
  {0x0343, 0x50, 0x00}, \
  /* Frame Vertical Clock Count */ \
  {0x0340, 0x10, 0x00}, \
  {0x0341, 0xB8, 0x00}, \
  /* Visible Size   */ \
  {0x0344, 0x00, 0x00}, \
  {0x0345, 0x00, 0x00}, \
  {0x0346, 0x00, 0x00}, \
  {0x0347, 0x00, 0x00}, \
  {0x0348, 0x15, 0x00}, \
  {0x0349, 0x6F, 0x00}, \
  {0x034A, 0x10, 0x00}, \
  {0x034B, 0x0F, 0x00}, \
  {0x31A2, 0x00, 0x00}, \
  /* Mode Setting   */ \
  {0x0220, 0x00, 0x00}, \
  {0x0221, 0x11, 0x00}, \
  {0x0222, 0x01, 0x00}, \
  {0x0381, 0x01, 0x00}, \
  {0x0383, 0x01, 0x00}, \
  {0x0385, 0x01, 0x00}, \
  {0x0387, 0x01, 0x00}, \
  {0x0900, 0x00, 0x00}, \
  {0x0901, 0x11, 0x00}, \
  {0x0902, 0x00, 0x00}, \
  {0x3010, 0x65, 0x00}, \
  {0x3011, 0x11, 0x00}, \
  {0x301C, 0x00, 0x00}, \
  {0x3045, 0x01, 0x00}, \
  {0x3194, 0x01, 0x00}, \
  {0x31A0, 0x00, 0x00}, \
  {0x31A1, 0x00, 0x00}, \
  {0xD5EC, 0x3A, 0x00}, \
  {0xD5ED, 0x00, 0x00}, \
  /* Digital Crop & Scaling */ \
  {0x0401, 0x00, 0x00}, \
  {0x0404, 0x00, 0x00}, \
  {0x0405, 0x10, 0x00}, \
  {0x0408, 0x00, 0x00}, \
  {0x0409, 0x00, 0x00}, \
  {0x040A, 0x00, 0x00}, \
  {0x040B, 0x00, 0x00}, \
  {0x040C, 0x15, 0x00}, \
  {0x040D, 0x70, 0x00}, \
  {0x040E, 0x10, 0x00}, \
  {0x040F, 0x10, 0x00}, \
  /* Digital Crop & Scaling */ \
  {0x034C, 0x15, 0x00}, \
  {0x034D, 0x70, 0x00}, \
  {0x034E, 0x10, 0x00}, \
  {0x034F, 0x10, 0x00}, \
  /* Clock Setting   */ \
  {0x0301, 0x05, 0x00}, \
  {0x0303, 0x02, 0x00}, \
  {0x0305, 0x04, 0x00}, \
  {0x0306, 0x01, 0x00}, \
  {0x0307, 0x4D, 0x00}, \
  {0x0309, 0x0A, 0x00}, \
  {0x030B, 0x01, 0x00}, \
  {0x030D, 0x04, 0x00}, \
  {0x030E, 0x01, 0x00}, \
  {0x030F, 0x40, 0x00}, \
  {0x0820, 0x1E, 0x00}, \
  {0x0821, 0x00, 0x00}, \
  {0x0822, 0x00, 0x00}, \
  {0x0823, 0x00, 0x00}, \
  /* Output Data Select Setting */ \
  {0x3039, 0x00, 0x00}, \
  {0x303B, 0x00, 0x00}, \
  /* EIS Setting   */ \
  {0x306C, 0x00, 0x00}, \
  {0x306E, 0x0D, 0x00}, \
  {0x306F, 0x56, 0x00}, \
  {0x6636, 0x00, 0x00}, \
  {0x6637, 0x14, 0x00}, \
  /* DLC Setting   */ \
  {0x3066, 0x00, 0x00}, \
  /* LSC Setting   */ \
  {0x7B63, 0x00, 0x00}, \
  /* Analog Setting   */ \
  {0x4024, 0x0C, 0x00}, \
  {0x4025, 0x30, 0x00}, \
  {0x56FB, 0x50, 0x00}, \
  {0x56FF, 0x50, 0x00}, \
  {0x6174, 0x28, 0x00}, \
  {0x6175, 0x28, 0x00}, \
  {0x910A, 0x02, 0x00}, \
  {0x9323, 0x0D, 0x00}, \
  {0xBC60, 0x00, 0x00}, \
  /* CIT Setting   */ \
  {0x0202, 0x10, 0x00}, \
  {0x0203, 0xA4, 0x00}, \
  {0x0224, 0x01, 0x00}, \
  {0x0225, 0xF4, 0x00}, \
  /* Gain Setting   */ \
  {0x0204, 0x00, 0x00}, \
  {0x0205, 0x00, 0x00}, \
  {0x020E, 0x01, 0x00}, \
  {0x020F, 0x00, 0x00}, \
  {0x0210, 0x01, 0x00}, \
  {0x0211, 0x00, 0x00}, \
  {0x0212, 0x01, 0x00}, \
  {0x0213, 0x00, 0x00}, \
  {0x0214, 0x01, 0x00}, \
  {0x0215, 0x00, 0x00}, \
  {0x0216, 0x00, 0x00}, \
  {0x0217, 0x00, 0x00}, \
  {0x0218, 0x01, 0x00}, \
  {0x0219, 0x00, 0x00}, \
  /* PDAF Setting */ \
  {CL_SHIFT_ADDR, CL_SHIFT, 0x00}, \
  {PD_AREA_X_OFFSET_ADDR, PD_AREA_X_OFFSET>>8, 0x00}, \
  {PD_AREA_X_OFFSET_ADDR+1, PD_AREA_X_OFFSET&0xFF, 0x00}, \
  {PD_AREA_Y_OFFSET_ADDR, PD_AREA_Y_OFFSET>>8, 0x00},\
  {PD_AREA_Y_OFFSET_ADDR+1, PD_AREA_Y_OFFSET&0xFF, 0x00}, \
  {PD_AREA_WIDTH_ADDR, PD_AREA_WIDTH>>8, 0x00}, \
  {PD_AREA_WIDTH_ADDR+1, PD_AREA_WIDTH&0xFF, 0x00}, \
  {PD_AREA_HEIGHT_ADDR, PD_AREA_HEIGHT>>8, 0x00}, \
  {PD_AREA_HEIGHT_ADDR+1, PD_AREA_HEIGHT&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR, PD_WIN_X_S_0>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+1, PD_WIN_X_S_0&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+2, PD_WIN_Y_S_0>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+3, PD_WIN_Y_S_0&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+4, PD_WIN_X_E_0>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+5, PD_WIN_X_E_0&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+6, PD_WIN_Y_E_0>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+7, PD_WIN_Y_E_0&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+8, PD_WIN_X_S_1>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+9, PD_WIN_X_S_1&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+10, PD_WIN_Y_S_1>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+11, PD_WIN_Y_S_1&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+12, PD_WIN_X_E_1>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+13, PD_WIN_X_E_1&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+14, PD_WIN_Y_E_1>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+15, PD_WIN_Y_E_1&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+16, PD_WIN_X_S_2>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+17, PD_WIN_X_S_2&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+18, PD_WIN_Y_S_2>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+19, PD_WIN_Y_S_2&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+20, PD_WIN_X_E_2>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+21, PD_WIN_X_E_2&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+22, PD_WIN_Y_E_2>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+23, PD_WIN_Y_E_2&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+24, PD_WIN_X_S_3>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+25, PD_WIN_X_S_3&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+26, PD_WIN_Y_S_3>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+27, PD_WIN_Y_S_3&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+28, PD_WIN_X_E_3>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+29, PD_WIN_X_E_3&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+30, PD_WIN_Y_E_3>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+31, PD_WIN_Y_E_3&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+32, PD_WIN_X_S_4>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+33, PD_WIN_X_S_4&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+34, PD_WIN_Y_S_4>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+35, PD_WIN_Y_S_4&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+36, PD_WIN_X_E_4>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+37, PD_WIN_X_E_4&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+38, PD_WIN_Y_E_4>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+39, PD_WIN_Y_E_4&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+40, PD_WIN_X_S_5>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+41, PD_WIN_X_S_5&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+42, PD_WIN_Y_S_5>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+43, PD_WIN_Y_S_5&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+44, PD_WIN_X_E_5>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+45, PD_WIN_X_E_5&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+46, PD_WIN_Y_E_5>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+47, PD_WIN_Y_E_5&0xFF, 0x00}, \
}

#define RES1_REG_ARRAY \
{ \
  /* reg_D-D4-1 H: 3840 V: 2160, 30fps */ \
  /* MIPI setting   */ \
  {0x0111, 0x02, 0x00}, \
  {0x0112, 0x0A, 0x00}, \
  {0x0113, 0x0A, 0x00}, \
  {0x0114, 0x03, 0x00}, \
  /* Frame Horizontal Clock Count */ \
  {0x0342, 0x1C, 0x00}, \
  {0x0343, 0xB8, 0x00}, \
  /* Frame Vertical Clock Count */ \
  {0x0340, 0x0E, 0x00}, \
  {0x0341, 0x26, 0x00}, \
  /* Visible Size   */ \
  {0x0344, 0x00, 0x00}, \
  {0x0345, 0x00, 0x00}, \
  {0x0346, 0x02, 0x00}, \
  {0x0347, 0x00, 0x00}, \
  {0x0348, 0x15, 0x00}, \
  {0x0349, 0x6F, 0x00}, \
  {0x034A, 0x0E, 0x00}, \
  {0x034B, 0x0F, 0x00}, \
  {0x31A2, 0x00, 0x00}, \
  /* Mode Setting   */ \
  {0x0220, 0x00, 0x00}, \
  {0x0221, 0x11, 0x00}, \
  {0x0222, 0x01, 0x00}, \
  {0x0381, 0x01, 0x00}, \
  {0x0383, 0x01, 0x00}, \
  {0x0385, 0x01, 0x00}, \
  {0x0387, 0x01, 0x00}, \
  {0x0900, 0x00, 0x00}, \
  {0x0901, 0x11, 0x00}, \
  {0x0902, 0x00, 0x00}, \
  {0x3010, 0x65, 0x00}, \
  {0x3011, 0x11, 0x00}, \
  {0x301C, 0x00, 0x00}, \
  {0x3045, 0x01, 0x00}, \
  {0x3194, 0x00, 0x00}, \
  {0x31A0, 0x00, 0x00}, \
  {0x31A1, 0x00, 0x00}, \
  {0xD5EC, 0x3A, 0x00}, \
  {0xD5ED, 0x00, 0x00}, \
  /* Digital Crop & Scaling */ \
  {0x0401, 0x02, 0x00}, \
  {0x0404, 0x00, 0x00}, \
  {0x0405, 0x16, 0x00}, \
  {0x0408, 0x00, 0x00}, \
  {0x0409, 0x68, 0x00}, \
  {0x040A, 0x00, 0x00}, \
  {0x040B, 0x3A, 0x00}, \
  {0x040C, 0x14, 0x00}, \
  {0x040D, 0xA0, 0x00}, \
  {0x040E, 0x0B, 0x00}, \
  {0x040F, 0x9A, 0x00}, \
  /* Digital Crop & Scaling */ \
  {0x034C, 0x0F, 0x00}, \
  {0x034D, 0x00, 0x00}, \
  {0x034E, 0x08, 0x00}, \
  {0x034F, 0x70, 0x00}, \
  /* Clock Setting   */ \
  {0x0301, 0x05, 0x00}, \
  {0x0303, 0x02, 0x00}, \
  {0x0305, 0x04, 0x00}, \
  {0x0306, 0x01, 0x00}, \
  {0x0307, 0x4D, 0x00}, \
  {0x0309, 0x0A, 0x00}, \
  {0x030B, 0x02, 0x00}, \
  {0x030D, 0x04, 0x00}, \
  {0x030E, 0x01, 0x00}, \
  {0x030F, 0x84, 0x00}, \
  {0x0820, 0x12, 0x00}, \
  {0x0821, 0x30, 0x00}, \
  {0x0822, 0x00, 0x00}, \
  {0x0823, 0x00, 0x00}, \
  /* Output Data Select Setting */ \
  {0x3039, 0x00, 0x00}, \
  {0x303B, 0x00, 0x00}, \
  /* EIS Setting   */ \
  {0x306C, 0x00, 0x00}, \
  {0x306E, 0x0D, 0x00}, \
  {0x306F, 0x56, 0x00}, \
  {0x6636, 0x00, 0x00}, \
  {0x6637, 0x14, 0x00}, \
  /* DLC Setting   */ \
  {0x3066, 0x00, 0x00}, \
  /* LSC Setting   */ \
  {0x7B63, 0x00, 0x00}, \
  /* Analog Setting   */ \
  {0x4024, 0x0A, 0x00}, \
  {0x4025, 0xB8, 0x00}, \
  {0x56FB, 0x33, 0x00}, \
  {0x56FF, 0x33, 0x00}, \
  {0x6174, 0x29, 0x00}, \
  {0x6175, 0x29, 0x00}, \
  {0x910A, 0x00, 0x00}, \
  {0x9323, 0x15, 0x00}, \
  {0xBC60, 0x01, 0x00}, \
  /* CIT Setting   */ \
  {0x0202, 0x0E, 0x00}, \
  {0x0203, 0x1C, 0x00}, \
  {0x0224, 0x01, 0x00}, \
  {0x0225, 0xF4, 0x00}, \
  /* Gain Setting   */ \
  {0x0204, 0x00, 0x00}, \
  {0x0205, 0x00, 0x00}, \
  {0x020E, 0x01, 0x00}, \
  {0x020F, 0x00, 0x00}, \
  {0x0210, 0x01, 0x00}, \
  {0x0211, 0x00, 0x00}, \
  {0x0212, 0x01, 0x00}, \
  {0x0213, 0x00, 0x00}, \
  {0x0214, 0x01, 0x00}, \
  {0x0215, 0x00, 0x00}, \
  {0x0216, 0x00, 0x00}, \
  {0x0217, 0x00, 0x00}, \
  {0x0218, 0x01, 0x00}, \
  {0x0219, 0x00, 0x00}, \
  /*PDAF Settings */ \
  {CL_SHIFT_ADDR, CL_SHIFT, 0x00}, \
  {PD_AREA_X_OFFSET_ADDR, (int)(SCALE_X(3840)*PD_AREA_X_OFFSET)>>8, 0x00}, \
  {PD_AREA_X_OFFSET_ADDR+1, (int)(SCALE_X(3840)*PD_AREA_X_OFFSET)&0xFF, 0x00},\
  {PD_AREA_Y_OFFSET_ADDR, (int)(SCALE_Y(2160)*PD_AREA_Y_OFFSET)>>8, 0x00},\
  {PD_AREA_Y_OFFSET_ADDR+1, (int)(SCALE_Y(2160)*PD_AREA_Y_OFFSET)&0xFF, 0x00},\
  {PD_AREA_WIDTH_ADDR, (int)(SCALE_X(3840)*PD_AREA_WIDTH)>>8, 0x00}, \
  {PD_AREA_WIDTH_ADDR+1, (int)(SCALE_X(3840)*PD_AREA_WIDTH)&0xFF, 0x00}, \
  {PD_AREA_HEIGHT_ADDR, (int)(SCALE_Y(2160)*PD_AREA_HEIGHT)>>8, 0x00}, \
  {PD_AREA_HEIGHT_ADDR+1, (int)(SCALE_Y(2160)*PD_AREA_HEIGHT)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR, (int)(SCALE_X(3840)*PD_WIN_X_S_0)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+1, (int)(SCALE_X(3840)*PD_WIN_X_S_0)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+2, (int)(SCALE_Y(2160)*PD_WIN_Y_S_0)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+3, (int)(SCALE_Y(2160)*PD_WIN_Y_S_0)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+4, (int)(SCALE_X(3840)*PD_WIN_X_E_0)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+5, (int)(SCALE_X(3840)*PD_WIN_X_E_0)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+6, (int)(SCALE_Y(2160)*PD_WIN_Y_E_0)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+7, (int)(SCALE_Y(2160)*PD_WIN_Y_E_0)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+8, (int)(SCALE_X(3840)*PD_WIN_X_S_1)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+9, (int)(SCALE_X(3840)*PD_WIN_X_S_1)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+10, (int)(SCALE_Y(2160)*PD_WIN_Y_S_1)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+11, (int)(SCALE_Y(2160)*PD_WIN_Y_S_1)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+12, (int)(SCALE_X(3840)*PD_WIN_X_E_1)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+13, (int)(SCALE_X(3840)*PD_WIN_X_E_1)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+14, (int)(SCALE_Y(2160)*PD_WIN_Y_E_1)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+15, (int)(SCALE_Y(2160)*PD_WIN_Y_E_1)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+16, (int)(SCALE_X(3840)*PD_WIN_X_S_2)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+17, (int)(SCALE_X(3840)*PD_WIN_X_S_2)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+18, (int)(SCALE_Y(2160)*PD_WIN_Y_S_2)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+19, (int)(SCALE_Y(2160)*PD_WIN_Y_S_2)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+20, (int)(SCALE_X(3840)*PD_WIN_X_E_2)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+21, (int)(SCALE_X(3840)*PD_WIN_X_E_2)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+22, (int)(SCALE_Y(2160)*PD_WIN_Y_E_2)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+23, (int)(SCALE_Y(2160)*PD_WIN_Y_E_2)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+24, (int)(SCALE_X(3840)*PD_WIN_X_S_3)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+25, (int)(SCALE_X(3840)*PD_WIN_X_S_3)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+26, (int)(SCALE_Y(2160)*PD_WIN_Y_S_3)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+27, (int)(SCALE_Y(2160)*PD_WIN_Y_S_3)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+28, (int)(SCALE_X(3840)*PD_WIN_X_E_3)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+29, (int)(SCALE_X(3840)*PD_WIN_X_E_3)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+30, (int)(SCALE_Y(2160)*PD_WIN_Y_E_3)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+31, (int)(SCALE_Y(2160)*PD_WIN_Y_E_3)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+32, (int)(SCALE_X(3840)*PD_WIN_X_S_4)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+33, (int)(SCALE_X(3840)*PD_WIN_X_S_4)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+34, (int)(SCALE_Y(2160)*PD_WIN_Y_S_4)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+35, (int)(SCALE_Y(2160)*PD_WIN_Y_S_4)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+36, (int)(SCALE_X(3840)*PD_WIN_X_E_4)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+37, (int)(SCALE_X(3840)*PD_WIN_X_E_4)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+38, (int)(SCALE_Y(2160)*PD_WIN_Y_E_4)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+39, (int)(SCALE_Y(2160)*PD_WIN_Y_E_4)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+40, (int)(SCALE_X(3840)*PD_WIN_X_S_5)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+41, (int)(SCALE_X(3840)*PD_WIN_X_S_5)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+42, (int)(SCALE_Y(2160)*PD_WIN_Y_S_5)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+43, (int)(SCALE_Y(2160)*PD_WIN_Y_S_5)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+44, (int)(SCALE_X(3840)*PD_WIN_X_E_5)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+45, (int)(SCALE_X(3840)*PD_WIN_X_E_5)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+46, (int)(SCALE_Y(2160)*PD_WIN_Y_E_5)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+47, (int)(SCALE_Y(2160)*PD_WIN_Y_E_5)&0xFF, 0x00}, \
}

#define RES2_REG_ARRAY \
{ \
  /* reg_I-D4-1 1080P 30fps    */ \
  /* MIPI setting   */ \
  {0x0111, 0x02, 0x00}, \
  {0x0112, 0x0A, 0x00}, \
  {0x0113, 0x0A, 0x00}, \
  {0x0114, 0x03, 0x00}, \
  /* Frame Horizontal Clock Count */ \
  {0x0342, 0x1C, 0x00}, \
  {0x0343, 0xB8, 0x00}, \
  /* Frame Vertical Clock Count */ \
  {0x0340, 0x07, 0x00}, \
  {0x0341, 0x12, 0x00}, \
  /* Visible Size   */ \
  {0x0344, 0x00, 0x00}, \
  {0x0345, 0x00, 0x00}, \
  {0x0346, 0x02, 0x00}, \
  {0x0347, 0x00, 0x00}, \
  {0x0348, 0x15, 0x00}, \
  {0x0349, 0x6F, 0x00}, \
  {0x034A, 0x0E, 0x00}, \
  {0x034B, 0x0F, 0x00}, \
  {0x31A2, 0x00, 0x00}, \
  /* Mode Setting   */ \
  {0x0220, 0x00, 0x00}, \
  {0x0221, 0x11, 0x00}, \
  {0x0222, 0x01, 0x00}, \
  {0x0381, 0x01, 0x00}, \
  {0x0383, 0x01, 0x00}, \
  {0x0385, 0x01, 0x00}, \
  {0x0387, 0x01, 0x00}, \
  {0x0900, 0x01, 0x00}, \
  {0x0901, 0x22, 0x00}, \
  {0x0902, 0x02, 0x00}, \
  {0x3010, 0x65, 0x00}, \
  {0x3011, 0x11, 0x00}, \
  {0x301C, 0x00, 0x00}, \
  {0x3045, 0x01, 0x00}, \
  {0x3194, 0x00, 0x00}, \
  {0x31A0, 0x00, 0x00}, \
  {0x31A1, 0x00, 0x00}, \
  {0xD5EC, 0x3A, 0x00}, \
  {0xD5ED, 0x00, 0x00}, \
  /* Digital Crop & Scaling */ \
  {0x0401, 0x02, 0x00}, \
  {0x0404, 0x00, 0x00}, \
  {0x0405, 0x16, 0x00}, \
  {0x0408, 0x00, 0x00}, \
  {0x0409, 0x34, 0x00}, \
  {0x040A, 0x00, 0x00}, \
  {0x040B, 0x1C, 0x00}, \
  {0x040C, 0x0A, 0x00}, \
  {0x040D, 0x50, 0x00}, \
  {0x040E, 0x05, 0x00}, \
  {0x040F, 0xCE, 0x00}, \
  /* Digital Crop & Scaling */ \
  {0x034C, 0x07, 0x00}, \
  {0x034D, 0x80, 0x00}, \
  {0x034E, 0x04, 0x00}, \
  {0x034F, 0x38, 0x00}, \
  /* Clock Setting   */ \
  {0x0301, 0x05, 0x00}, \
  {0x0303, 0x02, 0x00}, \
  {0x0305, 0x04, 0x00}, \
  {0x0306, 0x00, 0x00}, \
  {0x0307, 0xA7, 0x00}, \
  {0x0309, 0x0A, 0x00}, \
  {0x030B, 0x04, 0x00}, \
  {0x030D, 0x04, 0x00}, \
  {0x030E, 0x01, 0x00}, \
  {0x030F, 0x4E, 0x00}, \
  {0x0820, 0x07, 0x00}, \
  {0x0821, 0xD4, 0x00}, \
  {0x0822, 0x00, 0x00}, \
  {0x0823, 0x00, 0x00}, \
  /* Output Data Select Setting */ \
  {0x3039, 0x00, 0x00}, \
  {0x303B, 0x00, 0x00}, \
  /* EIS Setting   */ \
  {0x306C, 0x00, 0x00}, \
  {0x306E, 0x0D, 0x00}, \
  {0x306F, 0x56, 0x00}, \
  {0x6636, 0x00, 0x00}, \
  {0x6637, 0x14, 0x00}, \
  /* DLC Setting   */ \
  {0x3066, 0x00, 0x00}, \
  /* LSC Setting   */ \
  {0x7B63, 0x00, 0x00}, \
  /* Analog Setting   */ \
  {0x4024, 0x0A, 0x00}, \
  {0x4025, 0xB8, 0x00}, \
  {0x56FB, 0x33, 0x00}, \
  {0x56FF, 0x33, 0x00}, \
  {0x6174, 0x29, 0x00}, \
  {0x6175, 0x29, 0x00}, \
  {0x910A, 0x00, 0x00}, \
  {0x9323, 0x15, 0x00}, \
  {0xBC60, 0x01, 0x00}, \
  /* CIT Setting   */ \
  {0x0202, 0x07, 0x00}, \
  {0x0203, 0x08, 0x00}, \
  {0x0224, 0x01, 0x00}, \
  {0x0225, 0xF4, 0x00}, \
  /* Gain Setting   */ \
  {0x0204, 0x00, 0x00}, \
  {0x0205, 0x00, 0x00}, \
  {0x020E, 0x01, 0x00}, \
  {0x020F, 0x00, 0x00}, \
  {0x0210, 0x01, 0x00}, \
  {0x0211, 0x00, 0x00}, \
  {0x0212, 0x01, 0x00}, \
  {0x0213, 0x00, 0x00}, \
  {0x0214, 0x01, 0x00}, \
  {0x0215, 0x00, 0x00}, \
  {0x0216, 0x00, 0x00}, \
  {0x0217, 0x00, 0x00}, \
  {0x0218, 0x01, 0x00}, \
  {0x0219, 0x00, 0x00}, \
  /*PDAF Setting */ \
  {CL_SHIFT_ADDR, CL_SHIFT_BINNING, 0x00}, \
  {PD_AREA_X_OFFSET_ADDR, (int)(SCALE_X(1920)*PD_AREA_X_OFFSET)>>8, 0x00}, \
  {PD_AREA_X_OFFSET_ADDR+1, (int)(SCALE_X(1920)*PD_AREA_X_OFFSET)&0xFF, 0x00},\
  {PD_AREA_Y_OFFSET_ADDR, (int)(SCALE_Y(1080)*PD_AREA_Y_OFFSET)>>8, 0x00},\
  {PD_AREA_Y_OFFSET_ADDR+1, (int)(SCALE_Y(1080)*PD_AREA_Y_OFFSET)&0xFF, 0x00},\
  {PD_AREA_WIDTH_ADDR, (int)(SCALE_X(1920)*PD_AREA_WIDTH)>>8, 0x00}, \
  {PD_AREA_WIDTH_ADDR+1, (int)(SCALE_X(1920)*PD_AREA_WIDTH)&0xFF, 0x00}, \
  {PD_AREA_HEIGHT_ADDR, (int)(SCALE_Y(1080)*PD_AREA_HEIGHT)>>8, 0x00}, \
  {PD_AREA_HEIGHT_ADDR+1, (int)(SCALE_Y(1080)*PD_AREA_HEIGHT)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR, (int)(SCALE_X(1920)*PD_WIN_X_S_0)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+1, (int)(SCALE_X(1920)*PD_WIN_X_S_0)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+2, (int)(SCALE_Y(1080)*PD_WIN_Y_S_0)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+3, (int)(SCALE_Y(1080)*PD_WIN_Y_S_0)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+4, (int)(SCALE_X(1920)*PD_WIN_X_E_0)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+5, (int)(SCALE_X(1920)*PD_WIN_X_E_0)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+6, (int)(SCALE_Y(1080)*PD_WIN_Y_E_0)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+7, (int)(SCALE_Y(1080)*PD_WIN_Y_E_0)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+8, (int)(SCALE_X(1920)*PD_WIN_X_S_1)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+9, (int)(SCALE_X(1920)*PD_WIN_X_S_1)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+10, (int)(SCALE_Y(1080)*PD_WIN_Y_S_1)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+11, (int)(SCALE_Y(1080)*PD_WIN_Y_S_1)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+12, (int)(SCALE_X(1920)*PD_WIN_X_E_1)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+13, (int)(SCALE_X(1920)*PD_WIN_X_E_1)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+14, (int)(SCALE_Y(1080)*PD_WIN_Y_E_1)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+15, (int)(SCALE_Y(1080)*PD_WIN_Y_E_1)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+16, (int)(SCALE_X(1920)*PD_WIN_X_S_2)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+17, (int)(SCALE_X(1920)*PD_WIN_X_S_2)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+18, (int)(SCALE_Y(1080)*PD_WIN_Y_S_2)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+19, (int)(SCALE_Y(1080)*PD_WIN_Y_S_2)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+20, (int)(SCALE_X(1920)*PD_WIN_X_E_2)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+21, (int)(SCALE_X(1920)*PD_WIN_X_E_2)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+22, (int)(SCALE_Y(1080)*PD_WIN_Y_E_2)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+23, (int)(SCALE_Y(1080)*PD_WIN_Y_E_2)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+24, (int)(SCALE_X(1920)*PD_WIN_X_S_3)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+25, (int)(SCALE_X(1920)*PD_WIN_X_S_3)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+26, (int)(SCALE_Y(1080)*PD_WIN_Y_S_3)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+27, (int)(SCALE_Y(1080)*PD_WIN_Y_S_3)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+28, (int)(SCALE_X(1920)*PD_WIN_X_E_3)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+29, (int)(SCALE_X(1920)*PD_WIN_X_E_3)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+30, (int)(SCALE_Y(1080)*PD_WIN_Y_E_3)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+31, (int)(SCALE_Y(1080)*PD_WIN_Y_E_3)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+32, (int)(SCALE_X(1920)*PD_WIN_X_S_4)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+33, (int)(SCALE_X(1920)*PD_WIN_X_S_4)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+34, (int)(SCALE_Y(1080)*PD_WIN_Y_S_4)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+35, (int)(SCALE_Y(1080)*PD_WIN_Y_S_4)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+36, (int)(SCALE_X(1920)*PD_WIN_X_E_4)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+37, (int)(SCALE_X(1920)*PD_WIN_X_E_4)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+38, (int)(SCALE_Y(1080)*PD_WIN_Y_E_4)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+39, (int)(SCALE_Y(1080)*PD_WIN_Y_E_4)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+40, (int)(SCALE_X(1920)*PD_WIN_X_S_5)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+41, (int)(SCALE_X(1920)*PD_WIN_X_S_5)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+42, (int)(SCALE_Y(1080)*PD_WIN_Y_S_5)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+43, (int)(SCALE_Y(1080)*PD_WIN_Y_S_5)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+44, (int)(SCALE_X(1920)*PD_WIN_X_E_5)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+45, (int)(SCALE_X(1920)*PD_WIN_X_E_5)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+46, (int)(SCALE_Y(1080)*PD_WIN_Y_E_5)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+47, (int)(SCALE_Y(1080)*PD_WIN_Y_E_5)&0xFF, 0x00}, \
}

#define RES3_REG_ARRAY \
{ \
  /* reg_I-D4-2 1080P 60fps    */ \
  /* MIPI setting   */ \
  {0x0111, 0x02, 0x00}, \
  {0x0112, 0x0A, 0x00}, \
  {0x0113, 0x0A, 0x00}, \
  {0x0114, 0x03, 0x00}, \
  /* Frame Horizontal Clock Count */ \
  {0x0342, 0x1C, 0x00}, \
  {0x0343, 0xB8, 0x00}, \
  /* Frame Vertical Clock Count */ \
  {0x0340, 0x07, 0x00}, \
  {0x0341, 0x12, 0x00}, \
  /* Visible Size   */ \
  {0x0344, 0x00, 0x00}, \
  {0x0345, 0x00, 0x00}, \
  {0x0346, 0x02, 0x00}, \
  {0x0347, 0x00, 0x00}, \
  {0x0348, 0x15, 0x00}, \
  {0x0349, 0x6F, 0x00}, \
  {0x034A, 0x0E, 0x00}, \
  {0x034B, 0x0F, 0x00}, \
  {0x31A2, 0x00, 0x00}, \
  /* Mode Setting   */ \
  {0x0220, 0x00, 0x00}, \
  {0x0221, 0x11, 0x00}, \
  {0x0222, 0x01, 0x00}, \
  {0x0381, 0x01, 0x00}, \
  {0x0383, 0x01, 0x00}, \
  {0x0385, 0x01, 0x00}, \
  {0x0387, 0x01, 0x00}, \
  {0x0900, 0x01, 0x00}, \
  {0x0901, 0x22, 0x00}, \
  {0x0902, 0x02, 0x00}, \
  {0x3010, 0x65, 0x00}, \
  {0x3011, 0x11, 0x00}, \
  {0x301C, 0x00, 0x00}, \
  {0x3045, 0x01, 0x00}, \
  {0x3194, 0x00, 0x00}, \
  {0x31A0, 0x00, 0x00}, \
  {0x31A1, 0x00, 0x00}, \
  {0xD5EC, 0x3A, 0x00}, \
  {0xD5ED, 0x00, 0x00}, \
  /* Digital Crop & Scaling */ \
  {0x0401, 0x02, 0x00}, \
  {0x0404, 0x00, 0x00}, \
  {0x0405, 0x16, 0x00}, \
  {0x0408, 0x00, 0x00}, \
  {0x0409, 0x34, 0x00}, \
  {0x040A, 0x00, 0x00}, \
  {0x040B, 0x1C, 0x00}, \
  {0x040C, 0x0A, 0x00}, \
  {0x040D, 0x50, 0x00}, \
  {0x040E, 0x05, 0x00}, \
  {0x040F, 0xCE, 0x00}, \
  /* Digital Crop & Scaling */ \
  {0x034C, 0x07, 0x00}, \
  {0x034D, 0x80, 0x00}, \
  {0x034E, 0x04, 0x00}, \
  {0x034F, 0x38, 0x00}, \
  /* Clock Setting   */ \
  {0x0301, 0x05, 0x00}, \
  {0x0303, 0x02, 0x00}, \
  {0x0305, 0x04, 0x00}, \
  {0x0306, 0x01, 0x00}, \
  {0x0307, 0x4D, 0x00}, \
  {0x0309, 0x0A, 0x00}, \
  {0x030B, 0x02, 0x00}, \
  {0x030D, 0x04, 0x00}, \
  {0x030E, 0x00, 0x00}, \
  {0x030F, 0xD5, 0x00}, \
  {0x0820, 0x09, 0x00}, \
  {0x0821, 0xFC, 0x00}, \
  {0x0822, 0x00, 0x00}, \
  {0x0823, 0x00, 0x00}, \
  /* Output Data Select Setting */ \
  {0x3039, 0x00, 0x00}, \
  {0x303B, 0x00, 0x00}, \
  /* EIS Setting   */ \
  {0x306C, 0x00, 0x00}, \
  {0x306E, 0x0D, 0x00}, \
  {0x306F, 0x56, 0x00}, \
  {0x6636, 0x00, 0x00}, \
  {0x6637, 0x14, 0x00}, \
  /* DLC Setting   */ \
  {0x3066, 0x00, 0x00}, \
  /* LSC Setting   */ \
  {0x7B63, 0x00, 0x00}, \
  /* Analog Setting   */ \
  {0x4024, 0x0A, 0x00}, \
  {0x4025, 0xB8, 0x00}, \
  {0x56FB, 0x33, 0x00}, \
  {0x56FF, 0x33, 0x00}, \
  {0x6174, 0x29, 0x00}, \
  {0x6175, 0x29, 0x00}, \
  {0x910A, 0x00, 0x00}, \
  {0x9323, 0x15, 0x00}, \
  {0xBC60, 0x01, 0x00}, \
  /* CIT Setting   */ \
  {0x0202, 0x07, 0x00}, \
  {0x0203, 0x08, 0x00}, \
  {0x0224, 0x01, 0x00}, \
  {0x0225, 0xF4, 0x00}, \
  /* Gain Setting   */ \
  {0x0204, 0x00, 0x00}, \
  {0x0205, 0x00, 0x00}, \
  {0x020E, 0x01, 0x00}, \
  {0x020F, 0x00, 0x00}, \
  {0x0210, 0x01, 0x00}, \
  {0x0211, 0x00, 0x00}, \
  {0x0212, 0x01, 0x00}, \
  {0x0213, 0x00, 0x00}, \
  {0x0214, 0x01, 0x00}, \
  {0x0215, 0x00, 0x00}, \
  {0x0216, 0x00, 0x00}, \
  {0x0217, 0x00, 0x00}, \
  {0x0218, 0x01, 0x00}, \
  {0x0219, 0x00, 0x00}, \
  /* PDAF Setting */ \
  {CL_SHIFT_ADDR, CL_SHIFT_BINNING, 0x00}, \
  {PD_AREA_X_OFFSET_ADDR, (int)(SCALE_X(1920)*PD_AREA_X_OFFSET)>>8, 0x00}, \
  {PD_AREA_X_OFFSET_ADDR+1, (int)(SCALE_X(1920)*PD_AREA_X_OFFSET)&0xFF, 0x00},\
  {PD_AREA_Y_OFFSET_ADDR, (int)(SCALE_Y(1080)*PD_AREA_Y_OFFSET)>>8, 0x00},\
  {PD_AREA_Y_OFFSET_ADDR+1, (int)(SCALE_Y(1080)*PD_AREA_Y_OFFSET)&0xFF, 0x00},\
  {PD_AREA_WIDTH_ADDR, (int)(SCALE_X(1920)*PD_AREA_WIDTH)>>8, 0x00}, \
  {PD_AREA_WIDTH_ADDR+1, (int)(SCALE_X(1920)*PD_AREA_WIDTH)&0xFF, 0x00}, \
  {PD_AREA_HEIGHT_ADDR, (int)(SCALE_Y(1080)*PD_AREA_HEIGHT)>>8, 0x00}, \
  {PD_AREA_HEIGHT_ADDR+1, (int)(SCALE_Y(1080)*PD_AREA_HEIGHT)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR, (int)(SCALE_X(1920)*PD_WIN_X_S_0)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+1, (int)(SCALE_X(1920)*PD_WIN_X_S_0)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+2, (int)(SCALE_Y(1080)*PD_WIN_Y_S_0)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+3, (int)(SCALE_Y(1080)*PD_WIN_Y_S_0)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+4, (int)(SCALE_X(1920)*PD_WIN_X_E_0)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+5, (int)(SCALE_X(1920)*PD_WIN_X_E_0)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+6, (int)(SCALE_Y(1080)*PD_WIN_Y_E_0)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+7, (int)(SCALE_Y(1080)*PD_WIN_Y_E_0)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+8, (int)(SCALE_X(1920)*PD_WIN_X_S_1)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+9, (int)(SCALE_X(1920)*PD_WIN_X_S_1)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+10, (int)(SCALE_Y(1080)*PD_WIN_Y_S_1)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+11, (int)(SCALE_Y(1080)*PD_WIN_Y_S_1)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+12, (int)(SCALE_X(1920)*PD_WIN_X_E_1)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+13, (int)(SCALE_X(1920)*PD_WIN_X_E_1)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+14, (int)(SCALE_Y(1080)*PD_WIN_Y_E_1)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+15, (int)(SCALE_Y(1080)*PD_WIN_Y_E_1)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+16, (int)(SCALE_X(1920)*PD_WIN_X_S_2)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+17, (int)(SCALE_X(1920)*PD_WIN_X_S_2)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+18, (int)(SCALE_Y(1080)*PD_WIN_Y_S_2)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+19, (int)(SCALE_Y(1080)*PD_WIN_Y_S_2)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+20, (int)(SCALE_X(1920)*PD_WIN_X_E_2)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+21, (int)(SCALE_X(1920)*PD_WIN_X_E_2)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+22, (int)(SCALE_Y(1080)*PD_WIN_Y_E_2)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+23, (int)(SCALE_Y(1080)*PD_WIN_Y_E_2)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+24, (int)(SCALE_X(1920)*PD_WIN_X_S_3)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+25, (int)(SCALE_X(1920)*PD_WIN_X_S_3)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+26, (int)(SCALE_Y(1080)*PD_WIN_Y_S_3)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+27, (int)(SCALE_Y(1080)*PD_WIN_Y_S_3)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+28, (int)(SCALE_X(1920)*PD_WIN_X_E_3)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+29, (int)(SCALE_X(1920)*PD_WIN_X_E_3)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+30, (int)(SCALE_Y(1080)*PD_WIN_Y_E_3)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+31, (int)(SCALE_Y(1080)*PD_WIN_Y_E_3)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+32, (int)(SCALE_X(1920)*PD_WIN_X_S_4)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+33, (int)(SCALE_X(1920)*PD_WIN_X_S_4)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+34, (int)(SCALE_Y(1080)*PD_WIN_Y_S_4)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+35, (int)(SCALE_Y(1080)*PD_WIN_Y_S_4)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+36, (int)(SCALE_X(1920)*PD_WIN_X_E_4)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+37, (int)(SCALE_X(1920)*PD_WIN_X_E_4)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+38, (int)(SCALE_Y(1080)*PD_WIN_Y_E_4)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+39, (int)(SCALE_Y(1080)*PD_WIN_Y_E_4)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+40, (int)(SCALE_X(1920)*PD_WIN_X_S_5)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+41, (int)(SCALE_X(1920)*PD_WIN_X_S_5)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+42, (int)(SCALE_Y(1080)*PD_WIN_Y_S_5)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+43, (int)(SCALE_Y(1080)*PD_WIN_Y_S_5)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+44, (int)(SCALE_X(1920)*PD_WIN_X_E_5)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+45, (int)(SCALE_X(1920)*PD_WIN_X_E_5)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+46, (int)(SCALE_Y(1080)*PD_WIN_Y_E_5)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+47, (int)(SCALE_Y(1080)*PD_WIN_Y_E_5)&0xFF, 0x00}, \
}

#define RES4_REG_ARRAY \
{ \
  /* reg_I-D4-3 1080p_120fps   */ \
  /* MIPI setting   */ \
  {0x0111, 0x02, 0x00}, \
  {0x0112, 0x0A, 0x00}, \
  {0x0113, 0x0A, 0x00}, \
  {0x0114, 0x03, 0x00}, \
  /* Frame Horizontal Clock Count */ \
  {0x0342, 0x0E, 0x00}, \
  {0x0343, 0x60, 0x00}, \
  /* Frame Vertical Clock Count */ \
  {0x0340, 0x06, 0x00}, \
  {0x0341, 0x38, 0x00}, \
  /* Visible Size   */ \
  {0x0344, 0x00, 0x00}, \
  {0x0345, 0x00, 0x00}, \
  {0x0346, 0x02, 0x00}, \
  {0x0347, 0x00, 0x00}, \
  {0x0348, 0x15, 0x00}, \
  {0x0349, 0x6F, 0x00}, \
  {0x034A, 0x0E, 0x00}, \
  {0x034B, 0x0F, 0x00}, \
  {0x31A2, 0x00, 0x00}, \
  /* Mode Setting   */ \
  {0x0220, 0x00, 0x00}, \
  {0x0221, 0x11, 0x00}, \
  {0x0222, 0x01, 0x00}, \
  {0x0381, 0x01, 0x00}, \
  {0x0383, 0x01, 0x00}, \
  {0x0385, 0x01, 0x00}, \
  {0x0387, 0x01, 0x00}, \
  {0x0900, 0x01, 0x00}, \
  {0x0901, 0x22, 0x00}, \
  {0x0902, 0x02, 0x00}, \
  {0x3010, 0x65, 0x00}, \
  {0x3011, 0x11, 0x00}, \
  {0x301C, 0x00, 0x00}, \
  {0x3045, 0x00, 0x00}, \
  {0x3194, 0x00, 0x00}, \
  {0x31A0, 0x00, 0x00}, \
  {0x31A1, 0x02, 0x00}, \
  {0xD5EC, 0x3A, 0x00}, \
  {0xD5ED, 0x00, 0x00}, \
  /* Digital Crop & Scaling */ \
  {0x0401, 0x00, 0x00}, \
  {0x0404, 0x00, 0x00}, \
  {0x0405, 0x10, 0x00}, \
  {0x0408, 0x01, 0x00}, \
  {0x0409, 0x9C, 0x00}, \
  {0x040A, 0x00, 0x00}, \
  {0x040B, 0xE8, 0x00}, \
  {0x040C, 0x07, 0x00}, \
  {0x040D, 0x80, 0x00}, \
  {0x040E, 0x04, 0x00}, \
  {0x040F, 0x38, 0x00}, \
  /* Digital Crop & Scaling */ \
  {0x034C, 0x07, 0x00}, \
  {0x034D, 0x80, 0x00}, \
  {0x034E, 0x04, 0x00}, \
  {0x034F, 0x38, 0x00}, \
  /* Clock Setting   */ \
  {0x0301, 0x05, 0x00}, \
  {0x0303, 0x02, 0x00}, \
  {0x0305, 0x04, 0x00}, \
  {0x0306, 0x01, 0x00}, \
  {0x0307, 0x25, 0x00}, \
  {0x0309, 0x0A, 0x00}, \
  {0x030B, 0x02, 0x00}, \
  {0x030D, 0x04, 0x00}, \
  {0x030E, 0x01, 0x00}, \
  {0x030F, 0x78, 0x00}, \
  {0x0820, 0x11, 0x00}, \
  {0x0821, 0xA0, 0x00}, \
  {0x0822, 0x00, 0x00}, \
  {0x0823, 0x00, 0x00}, \
  /* Output Data Select Setting */ \
  {0x3039, 0x00, 0x00}, \
  {0x303B, 0x00, 0x00}, \
  /* EIS Setting   */ \
  {0x306C, 0x00, 0x00}, \
  {0x306E, 0x0D, 0x00}, \
  {0x306F, 0x56, 0x00}, \
  {0x6636, 0x00, 0x00}, \
  {0x6637, 0x14, 0x00}, \
  /* DLC Setting   */ \
  {0x3066, 0x00, 0x00}, \
  /* LSC Setting   */ \
  {0x7B63, 0x00, 0x00}, \
  /* Analog Setting   */ \
  {0x4024, 0x0A, 0x00}, \
  {0x4025, 0xB8, 0x00}, \
  {0x56FB, 0x33, 0x00}, \
  {0x56FF, 0x33, 0x00}, \
  {0x6174, 0x29, 0x00}, \
  {0x6175, 0x29, 0x00}, \
  {0x910A, 0x00, 0x00}, \
  {0x9323, 0x15, 0x00}, \
  {0xBC60, 0x01, 0x00}, \
  /* CIT Setting   */ \
  {0x0202, 0x06, 0x00}, \
  {0x0203, 0x2E, 0x00}, \
  {0x0224, 0x01, 0x00}, \
  {0x0225, 0xF4, 0x00}, \
  /* Gain Setting   */ \
  {0x0204, 0x00, 0x00}, \
  {0x0205, 0x00, 0x00}, \
  {0x020E, 0x01, 0x00}, \
  {0x020F, 0x00, 0x00}, \
  {0x0210, 0x01, 0x00}, \
  {0x0211, 0x00, 0x00}, \
  {0x0212, 0x01, 0x00}, \
  {0x0213, 0x00, 0x00}, \
  {0x0214, 0x01, 0x00}, \
  {0x0215, 0x00, 0x00}, \
  {0x0216, 0x00, 0x00}, \
  {0x0217, 0x00, 0x00}, \
  {0x0218, 0x01, 0x00}, \
  {0x0219, 0x00, 0x00}, \
  /* PDAF Setting */ \
  {CL_SHIFT_ADDR, CL_SHIFT_BINNING, 0x00}, \
  {PD_AREA_X_OFFSET_ADDR, (int)(SCALE_X(1920)*PD_AREA_X_OFFSET)>>8, 0x00}, \
  {PD_AREA_X_OFFSET_ADDR+1, (int)(SCALE_X(1920)*PD_AREA_X_OFFSET)&0xFF, 0x00},\
  {PD_AREA_Y_OFFSET_ADDR, (int)(SCALE_Y(1080)*PD_AREA_Y_OFFSET)>>8, 0x00},\
  {PD_AREA_Y_OFFSET_ADDR+1, (int)(SCALE_Y(1080)*PD_AREA_Y_OFFSET)&0xFF, 0x00},\
  {PD_AREA_WIDTH_ADDR, (int)(SCALE_X(1920)*PD_AREA_WIDTH)>>8, 0x00}, \
  {PD_AREA_WIDTH_ADDR+1, (int)(SCALE_X(1920)*PD_AREA_WIDTH)&0xFF, 0x00}, \
  {PD_AREA_HEIGHT_ADDR, (int)(SCALE_Y(1080)*PD_AREA_HEIGHT)>>8, 0x00}, \
  {PD_AREA_HEIGHT_ADDR+1, (int)(SCALE_Y(1080)*PD_AREA_HEIGHT)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR, (int)(SCALE_X(1920)*PD_WIN_X_S_0)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+1, (int)(SCALE_X(1920)*PD_WIN_X_S_0)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+2, (int)(SCALE_Y(1080)*PD_WIN_Y_S_0)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+3, (int)(SCALE_Y(1080)*PD_WIN_Y_S_0)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+4, (int)(SCALE_X(1920)*PD_WIN_X_E_0)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+5, (int)(SCALE_X(1920)*PD_WIN_X_E_0)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+6, (int)(SCALE_Y(1080)*PD_WIN_Y_E_0)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+7, (int)(SCALE_Y(1080)*PD_WIN_Y_E_0)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+8, (int)(SCALE_X(1920)*PD_WIN_X_S_1)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+9, (int)(SCALE_X(1920)*PD_WIN_X_S_1)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+10, (int)(SCALE_Y(1080)*PD_WIN_Y_S_1)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+11, (int)(SCALE_Y(1080)*PD_WIN_Y_S_1)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+12, (int)(SCALE_X(1920)*PD_WIN_X_E_1)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+13, (int)(SCALE_X(1920)*PD_WIN_X_E_1)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+14, (int)(SCALE_Y(1080)*PD_WIN_Y_E_1)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+15, (int)(SCALE_Y(1080)*PD_WIN_Y_E_1)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+16, (int)(SCALE_X(1920)*PD_WIN_X_S_2)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+17, (int)(SCALE_X(1920)*PD_WIN_X_S_2)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+18, (int)(SCALE_Y(1080)*PD_WIN_Y_S_2)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+19, (int)(SCALE_Y(1080)*PD_WIN_Y_S_2)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+20, (int)(SCALE_X(1920)*PD_WIN_X_E_2)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+21, (int)(SCALE_X(1920)*PD_WIN_X_E_2)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+22, (int)(SCALE_Y(1080)*PD_WIN_Y_E_2)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+23, (int)(SCALE_Y(1080)*PD_WIN_Y_E_2)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+24, (int)(SCALE_X(1920)*PD_WIN_X_S_3)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+25, (int)(SCALE_X(1920)*PD_WIN_X_S_3)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+26, (int)(SCALE_Y(1080)*PD_WIN_Y_S_3)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+27, (int)(SCALE_Y(1080)*PD_WIN_Y_S_3)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+28, (int)(SCALE_X(1920)*PD_WIN_X_E_3)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+29, (int)(SCALE_X(1920)*PD_WIN_X_E_3)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+30, (int)(SCALE_Y(1080)*PD_WIN_Y_E_3)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+31, (int)(SCALE_Y(1080)*PD_WIN_Y_E_3)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+32, (int)(SCALE_X(1920)*PD_WIN_X_S_4)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+33, (int)(SCALE_X(1920)*PD_WIN_X_S_4)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+34, (int)(SCALE_Y(1080)*PD_WIN_Y_S_4)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+35, (int)(SCALE_Y(1080)*PD_WIN_Y_S_4)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+36, (int)(SCALE_X(1920)*PD_WIN_X_E_4)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+37, (int)(SCALE_X(1920)*PD_WIN_X_E_4)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+38, (int)(SCALE_Y(1080)*PD_WIN_Y_E_4)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+39, (int)(SCALE_Y(1080)*PD_WIN_Y_E_4)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+40, (int)(SCALE_X(1920)*PD_WIN_X_S_5)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+41, (int)(SCALE_X(1920)*PD_WIN_X_S_5)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+42, (int)(SCALE_Y(1080)*PD_WIN_Y_S_5)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+43, (int)(SCALE_Y(1080)*PD_WIN_Y_S_5)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+44, (int)(SCALE_X(1920)*PD_WIN_X_E_5)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+45, (int)(SCALE_X(1920)*PD_WIN_X_E_5)&0xFF, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+46, (int)(SCALE_Y(1080)*PD_WIN_Y_E_5)>>8, 0x00}, \
  {FLEX_AREA_XSTA0_ADDR+47, (int)(SCALE_Y(1080)*PD_WIN_Y_E_5)&0xFF, 0x00}, \
}

#define RES5_REG_ARRAY \
{ \
  /* reg_H-D4-4  720P_240fps_DPHY */ \
  /* MIPI setting   */ \
  {0x0111, 0x02, 0x00}, \
  {0x0112, 0x0A, 0x00}, \
  {0x0113, 0x0A, 0x00}, \
  {0x0114, 0x03, 0x00}, \
  /* Frame Horizontal Clock Count */ \
  {0x0342, 0x0E, 0x00}, \
  {0x0343, 0x60, 0x00}, \
  /* Frame Vertical Clock Count */ \
  {0x0340, 0x03, 0x00}, \
  {0x0341, 0x34, 0x00}, \
  /* Visible Size   */ \
  {0x0344, 0x00, 0x00}, \
  {0x0345, 0x00, 0x00}, \
  {0x0346, 0x02, 0x00}, \
  {0x0347, 0x04, 0x00}, \
  {0x0348, 0x15, 0x00}, \
  {0x0349, 0x6F, 0x00}, \
  {0x034A, 0x0E, 0x00}, \
  {0x034B, 0x13, 0x00}, \
  {0x31A2, 0x00, 0x00}, \
  /* Mode Setting   */ \
  {0x0220, 0x00, 0x00}, \
  {0x0221, 0x11, 0x00}, \
  {0x0222, 0x01, 0x00}, \
  {0x0381, 0x01, 0x00}, \
  {0x0383, 0x01, 0x00}, \
  {0x0385, 0x01, 0x00}, \
  {0x0387, 0x01, 0x00}, \
  {0x0900, 0x01, 0x00}, \
  {0x0901, 0x44, 0x00}, \
  {0x0902, 0x02, 0x00}, \
  {0x3010, 0x65, 0x00}, \
  {0x3011, 0x11, 0x00}, \
  {0x301C, 0x00, 0x00}, \
  {0x3045, 0x00, 0x00}, \
  {0x3194, 0x00, 0x00}, \
  {0x31A0, 0x00, 0x00}, \
  {0x31A1, 0x02, 0x00}, \
  {0xD5EC, 0x3A, 0x00}, \
  {0xD5ED, 0x00, 0x00}, \
  /* Digital Crop & Scaling */ \
  {0x0401, 0x00, 0x00}, \
  {0x0404, 0x00, 0x00}, \
  {0x0405, 0x10, 0x00}, \
  {0x0408, 0x00, 0x00}, \
  {0x0409, 0x2E, 0x00}, \
  {0x040A, 0x00, 0x00}, \
  {0x040B, 0x1A, 0x00}, \
  {0x040C, 0x05, 0x00}, \
  {0x040D, 0x00, 0x00}, \
  {0x040E, 0x02, 0x00}, \
  {0x040F, 0xD0, 0x00}, \
  /* Digital Crop & Scaling */ \
  {0x034C, 0x05, 0x00}, \
  {0x034D, 0x00, 0x00}, \
  {0x034E, 0x02, 0x00}, \
  {0x034F, 0xD0, 0x00}, \
  /* Clock Setting   */ \
  {0x0301, 0x05, 0x00}, \
  {0x0303, 0x02, 0x00}, \
  {0x0305, 0x04, 0x00}, \
  {0x0306, 0x01, 0x00}, \
  {0x0307, 0x2E, 0x00}, \
  {0x0309, 0x0A, 0x00}, \
  {0x030B, 0x02, 0x00}, \
  {0x030D, 0x04, 0x00}, \
  {0x030E, 0x01, 0x00}, \
  {0x030F, 0x1B, 0x00}, \
  {0x0820, 0x0D, 0x00}, \
  {0x0821, 0x44, 0x00}, \
  {0x0822, 0x00, 0x00}, \
  {0x0823, 0x00, 0x00}, \
  /* Output Data Select Setting */ \
  {0x3039, 0x00, 0x00}, \
  {0x303B, 0x00, 0x00}, \
  /* EIS Setting   */ \
  {0x306C, 0x00, 0x00}, \
  {0x306E, 0x0D, 0x00}, \
  {0x306F, 0x56, 0x00}, \
  {0x6636, 0x00, 0x00}, \
  {0x6637, 0x14, 0x00}, \
  /* DLC Setting   */ \
  {0x3066, 0x00, 0x00}, \
  /* LSC Setting   */ \
  {0x7B63, 0x00, 0x00}, \
  /* Analog Setting   */ \
  {0x4024, 0x0A, 0x00}, \
  {0x4025, 0xB8, 0x00}, \
  {0x56FB, 0x33, 0x00}, \
  {0x56FF, 0x33, 0x00}, \
  {0x6174, 0x29, 0x00}, \
  {0x6175, 0x29, 0x00}, \
  {0x910A, 0x00, 0x00}, \
  {0x9323, 0x15, 0x00}, \
  {0xBC60, 0x01, 0x00}, \
  /* CIT Setting   */ \
  {0x0202, 0x03, 0x00}, \
  {0x0203, 0x2A, 0x00}, \
  {0x0224, 0x01, 0x00}, \
  {0x0225, 0xF4, 0x00}, \
  /* Gain Setting   */ \
  {0x0204, 0x00, 0x00}, \
  {0x0205, 0x00, 0x00}, \
  {0x020E, 0x01, 0x00}, \
  {0x020F, 0x00, 0x00}, \
  {0x0210, 0x01, 0x00}, \
  {0x0211, 0x00, 0x00}, \
  {0x0212, 0x01, 0x00}, \
  {0x0213, 0x00, 0x00}, \
  {0x0214, 0x01, 0x00}, \
  {0x0215, 0x00, 0x00}, \
  {0x0216, 0x00, 0x00}, \
  {0x0217, 0x00, 0x00}, \
  {0x0218, 0x01, 0x00}, \
  {0x0219, 0x00, 0x00}, \
}

/* Sensor Handler */
static sensor_lib_t sensor_lib_ptr =
{
  .sensor_slave_info =
  {
    .sensor_name = SENSOR_MODEL,
    .slave_addr = 0x34,
    .i2c_freq_mode = SENSOR_I2C_MODE_FAST_PLUS,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .sensor_id_info =
    {
      .sensor_id_reg_addr = 0x0016,
      .sensor_id = 0x0318,
    },
    .power_setting_array =
    {
      .power_setting_a =
      {
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_VANA,
          .config_val = GPIO_OUT_HIGH,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VANA,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_VDIG,
          .config_val = GPIO_OUT_HIGH,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VDIG,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VIO,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_CLK,
          .seq_val = CAMERA_MCLK,
          .config_val = 24000000,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_HIGH,
          .delay = 18,
        },
      },
      .size = 8,
      .power_down_setting_a =
      {
        {
          .seq_type = CAMERA_POW_SEQ_CLK,
          .seq_val = CAMERA_MCLK,
          .config_val = 0,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VIO,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VDIG,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_VDIG,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VANA,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_VANA,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
      },
      .size_down = 7,
    },
  },
  .sensor_output =
  {
    .output_format = SENSOR_BAYER,
    .connection_mode = SENSOR_MIPI_CSI,
    .raw_output = SENSOR_10_BIT_DIRECT,
    .filter_arrangement = SENSOR_RGGB,
  },
  .output_reg_addr =
  {
    .x_output = 0x034C,
    .y_output = 0x034E,
    .line_length_pclk = 0x0342,
    .frame_length_lines = 0x0340,
  },
  .exp_gain_info =
  {
    .coarse_int_time_addr = 0x0202,
    .global_gain_addr = 0x0204,
    .vert_offset = IMX318_MAX_INTEGRATION_MARGIN,
  },
  .aec_info =
  {
    .min_gain = IMX318_MIN_GAIN,
    .max_gain = IMX318_MAX_GAIN,
    .max_analog_gain = IMX318_MAX_AGAIN,
    .max_linecount = 65535 - IMX318_MAX_INTEGRATION_MARGIN,
  },
  .sensor_num_frame_skip = 1,
  .sensor_num_HDR_frame_skip = 2,
  .sensor_max_pipeline_frame_delay = 2,
  .sensor_property =
  {
    .pix_size = 1.12, /* um */
    .sensing_method = SENSOR_SMETHOD_ONE_CHIP_COLOR_AREA_SENSOR,
    .crop_factor = 5.78,
  },
  .pixel_array_size_info =
  {
    .active_array_size =
    {
      .width = 5344,
      .height = 4016,
    },
    .left_dummy = 8,
    .right_dummy = 8,
    .top_dummy = 8,
    .bottom_dummy = 8,
  },
  .color_level_info =
  {
    .white_level = 1023,
    .r_pedestal = IMX318_DATA_PEDESTAL,
    .gr_pedestal = IMX318_DATA_PEDESTAL,
    .gb_pedestal = IMX318_DATA_PEDESTAL,
    .b_pedestal = IMX318_DATA_PEDESTAL,
  },
  .sensor_stream_info_array =
  {
    .sensor_stream_info =
    {
      {
        .vc_cfg_size = 3,
        .vc_cfg =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT,
          },
          {
            .cid = 1,
            .dt = IMX318_CSI_PD_ISTATS,
            .decode_format = CSI_DECODE_10BIT,
          },
          {
            .cid = 2,
            .dt = IMX318_CSI_HDR_ISTATS,
            .decode_format = CSI_DECODE_10BIT,
          },
        },
        .pix_data_fmt =
        {
          SENSOR_BAYER,
          SENSOR_META,
          SENSOR_META,
        },
      },
      {
        .vc_cfg_size = 1,
        .vc_cfg =
        {
          {
            .cid = 3,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_8BIT,
          },
        },
        .pix_data_fmt =
        {
          SENSOR_META,
        },
      },
    },
    .size = 2,
  },
  .start_settings =
  {
    .reg_setting_a = START_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .stop_settings =
  {
    .reg_setting_a = STOP_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .groupon_settings =
  {
    .reg_setting_a = GROUPON_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .groupoff_settings =
  {
    .reg_setting_a = GROUPOFF_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .test_pattern_info =
  {
    .test_pattern_settings =
    {
      {
        .mode = SENSOR_TEST_PATTERN_OFF,
        .settings =
        {
          .reg_setting_a =
          {
            {0x0600, 0x0000, 0x00},
          },
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_WORD_DATA,
          .delay = 0,
        }
      },
      {
        .mode = SENSOR_TEST_PATTERN_SOLID_COLOR,
        .settings =
        {
          .reg_setting_a =
          {
            {0x0600, 0x0001, 0x00},
          },
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_WORD_DATA,
          .delay = 0,
        },
      },
      {
        .mode = SENSOR_TEST_PATTERN_COLOR_BARS,
        .settings =
        {
          .reg_setting_a =
          {
            {0x0600, 0x0002, 0x00},
          },
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_WORD_DATA,
          .delay = 0,
        },
      },
      {
        .mode = SENSOR_TEST_PATTERN_COLOR_BARS_FADE_TO_GRAY,
        .settings =
        {
          .reg_setting_a =
          {
            {0x0600, 0x0003, 0x00},
          },
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_WORD_DATA,
          .delay = 0,
        },
      },
      {
        .mode = SENSOR_TEST_PATTERN_PN9,
        .settings =
        {
          .reg_setting_a =
          {
            {0x0600, 0x0004, 0x00},
          },
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_WORD_DATA,
          .delay = 0,
        },
      },
    },
    .size = 5,
    .solid_mode_addr =
    {
      .r_addr = 0x0602,
      .gr_addr = 0x0604,
      .gb_addr = 0x0606,
      .b_addr = 0x0608,
    },
  },
  .init_settings_array =
  {
    .reg_settings =
    {
      {
        .reg_setting_a = INIT0_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
    },
    .size = 1,
  },
  .res_settings_array =
  {
    .reg_settings =
    {
      /* Res 0 */
      {
        .reg_setting_a = RES0_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
      /* Res 1 */
      {
        .reg_setting_a = RES1_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
      /* Res 2 */
      {
        .reg_setting_a = RES2_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
      /* Res 3 */
      {
        .reg_setting_a = RES3_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
      /* Res 4 */
      {
        .reg_setting_a = RES4_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
      /* Res 5 */
      {
        .reg_setting_a = RES5_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
    },
    .size = 6,
  },
  .out_info_array =
  {
    .out_info =
    {
      /* Res 0 */
      {
        .x_output = 5488,
        .y_output = 4112,
        .line_length_pclk = 6224,
        .frame_length_lines = 4280,
        .op_pixel_clk = 768000000,
        .binning_factor = 1,
        .binning_method = 0,
        .min_fps = 7.500,
        .max_fps = 30.00,
        .mode = SENSOR_DEFAULT_MODE,
        .is_pdaf_supported = 1,
      },

      /* Res 1 */
      {
        .x_output = 3840,
        .y_output = 2160,
        .line_length_pclk = 7352,
        .frame_length_lines = 3622,
        .op_pixel_clk = 465600000,
        .binning_factor = 1,
        .binning_method = 0,
        .min_fps = 7.500,
        .max_fps = 30.01,
        .mode = SENSOR_DEFAULT_MODE,
        .is_pdaf_supported = 1,
      },
      /* Res 2 */
      {
        .x_output = 1920,
        .y_output = 1080,
        .line_length_pclk = 7352,
        .frame_length_lines = 1810,
        .op_pixel_clk = 200400000,
        .binning_factor = 2,
        .binning_method = 0,
        .min_fps = 7.500,
        .max_fps = 30.11,
        .mode = SENSOR_DEFAULT_MODE,
        .is_pdaf_supported = 1,
      },
      /* Res 3 */
      {
        .x_output = 1920,
        .y_output = 1080,
        .line_length_pclk = 7352,
        .frame_length_lines = 1810,
        .op_pixel_clk = 255600000,
        .binning_factor = 2,
        .binning_method = 0,
        .min_fps = 7.500,
        .max_fps = 60.05,
        .mode = SENSOR_HFR_MODE,
        .is_pdaf_supported = 1,
      },
      /* Res 4 */
      {
        .x_output = 1920,
        .y_output = 1080,
        .line_length_pclk = 3680,
        .frame_length_lines = 1952,
        .op_pixel_clk = 451200000,
        .binning_factor = 2,
        .binning_method = 0,
        .min_fps = 7.500,
        .max_fps = 120.02,
        .mode = SENSOR_HFR_MODE,
        .is_pdaf_supported = 1,
      },
      /* Res 5 */
      {
        .x_output = 1280,
        .y_output = 720,
        .line_length_pclk = 3680,
        .frame_length_lines = 820,
        .op_pixel_clk = 339600000,
        .binning_factor = 4,
        .binning_method = 0,
        .min_fps = 7.500,
        .max_fps = 240.19,
        .mode = SENSOR_HFR_MODE,
        .is_pdaf_supported = 0,
      },
    },
    .size = 6,
  },
  .csi_params =
  {
    .lane_cnt = 4,
    .settle_cnt = 0xE,
    .is_csi_3phase = 0,
  },
  .csid_lut_params_array =
  {
    .lut_params =
    {
      /* Res 0 */
      {
        .num_cid = 3,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 1,
            .dt = IMX318_CSI_PD_ISTATS,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 3,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_8BIT
          },
        },
      },
      /* Res 1 */
      {
        .num_cid = 3,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 1,
            .dt = IMX318_CSI_PD_ISTATS,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 3,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_8BIT
          },
        },
      },
      /* Res 2 */
      {
        .num_cid = 3,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 1,
            .dt = IMX318_CSI_PD_ISTATS,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 3,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_8BIT
          },
        },
      },
      /* Res 3 */
      {
        .num_cid = 3,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 1,
            .dt = IMX318_CSI_PD_ISTATS,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 3,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_8BIT
          },
        },
      },
      /* Res 4 */
      {
        .num_cid = 3,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 1,
            .dt = IMX318_CSI_PD_ISTATS,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 3,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_8BIT
          },
        },
      },
      /* Res 5 */
      {
        .num_cid = 2,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 3,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_8BIT
          },
        },
      },
    },
    .size = 6,
  },
  .crop_params_array =
  {
    .crop_params =
    {
      /* Res 0 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
      /* Res 1 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
      /* Res 2 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
      /* Res 3 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
      /* Res 4 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
      /* Res 5 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
    },
    .size = 6,
  },
  .exposure_func_table =
  {
    .sensor_calculate_exposure = sensor_calculate_exposure,
    .sensor_fill_exposure_array = sensor_fill_exposure_array,
  },
  .meta_data_out_info_array =
  {
    .meta_data_out_info =
    {
      {
        .width = 5488,
        .height = 2,
        .stats_type = HDR_STATS,
        .dt = IMX318_CSI_HDR_ISTATS,
      },
      {
        .width = 5488,
        .height = 2,
        .stats_type = PD_STATS,
        .dt = IMX318_CSI_PD_ISTATS,
      },
    },
    .size = 2,
  },
  .sensor_capability = (SENSOR_VIDEO_HDR_FLAG | SENSOR_SNAPSHOT_HDR_FLAG),
  .awb_func_table =
  {
    .sensor_fill_awb_array = sensor_fill_awb_array,
    .awb_table_size = 2,
  },
  .parse_RDI_stats =
  {
    .parse_VHDR_stats = NULL,
    .pd_data_format = SENSOR_STATS_RAW10_11B_CONF_11B_PD,
  },
  .sensorlib_pdaf_api =
  {
    .calcdefocus = "imx318_pdaf_calculate_defocus",
  },
  .rolloff_config =
  {
    .enable = FALSE,
    .full_size_info =
    {
      .full_size_width = 0,
      .full_size_height = 0,
      .full_size_left_crop = 0,
      .full_size_top_crop = 0,
    },
  },
  .adc_readout_time = 0,
  .sensor_num_fast_aec_frame_skip = 0,
  .noise_coeff = {
    .gradient_S = 3.738032e-06,
    .offset_S = 3.651935e-04,
    .gradient_O = 4.499952e-07,
    .offset_O = -2.968624e-04,
  },
};

#endif /* __IMX318_LIB_H__ */

/* Copyright (c) 2017 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 */

package vendor.qti.hardware.fingerprint@1.0;

interface IQtiExtendedFingerprintCallback {
    /**
     * Callback fired when fingerprint match is successfull.
     *
     * @param fingerprintId      id of authenticated fingerprint.
     * @param user               name of authenticated user.
     * @param userId             id of autheticated user.
     * @param encapsulatedResult encapsulated match result.
     * @param authToken          authentication token.
     */
    onMatch(int32_t fingerprintId, string user, uint64_t userId,
            vec<uint8_t> encapsulatedResult, vec<uint8_t> authToken);
 
    /**
     * Callback fired when fingerprint operation returns error.
     *
     * @param error error code.
     */
    onError(int32_t error);

    /**
     * Callback fired to propagate status of fingerprint operation.
     *
     * @param status    status info.
     * @param extension additional status info.
     */
    onStatus(int32_t status, vec<uint8_t> extension);

    /**
     * Callback fired when fingerprint enrollment is successfull.
     *
     * @param user               name of authenticated user.
     * @param fingerprintId      id of authenticated fingerprint.
     * @param remaining          number of enrolled fingerprints.
     */
    onEnroll(string user, int32_t fingeprintId, int32_t remaining);

    /**
     * Callback fired when fingerprint removal is successfull..
     *
     * @param user               name of authenticated user.
     * @param fingerprintId      id of authenticated fingerprint.
     */
    onRemove(string user, int32_t fingeprintId);

    /**
     * Callback fired when fingerprint enumeration is successfull.
     *
     * @param user               name of authenticated user.
     * @param fingerprintId      id of authenticated fingerprint.
     * @param remaining          number of enrolled fingerprints.
     */
    onEnumerate(string user, int32_t fingeprintId, int32_t remaining);

    /**
     * Callback fired when complete user is removed.
     *
     * @param user name of authenticated user.
     */
    onRemoveUser(string user);

    /**
     * Callback fired when debug data is captured.
     *
     * @datas debug data.
     */
    onCaptureDebugData(vec<CaptureDebugData> datas);

    /**
     * Callback fired when fingerprint image capture is successfull.
     *
     * @param width  image width.
     * @param height image height.
     * @param image image data.
     */
    onCapture(uint32_t width, uint32_t height, vec<uint8_t> image);
};

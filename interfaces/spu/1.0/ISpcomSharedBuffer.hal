/*!
 *
 * Copyright (c) 2019 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 *
 */

package vendor.qti.spu@1.0;

// Generated by ISpcom::getSpcomSharedBuffer()

interface ISpcomSharedBuffer {

    /**
     * Copies shared buffer changes to spu side after direct write was done
     *
     * The shared memory is a double buffer. Between HIDL server and client
     * hidl_memory is used to share data betweeb hidl client and server.
     * Client side need to allocate the hidl_memory and both client and server
     * map the same memory.
     * Client side need to call IMemory::update() before updating the
     * hidl_memory direcrly and IMemory::commit() after the data was updated
     * Then call ISPUSharedBuffer::copyToSpu() to copy the data from
     * hidl_memory shared buffer to SPU side.
     *
     * @return error 0 on success, nonzero otherwise (see errno.h)
     */
    copyToSpu() generates (int32_t error);

    /**
     * Copies spu side changes to shared buffer before read is done
     *
     * To see data which was updated from spu side, need to call
     * ISpcomSharedBuffer::copyFromSpu()
     *
     * @return error 0 on success, nonzero otherwise (see errno.h)
     */
    copyFromSpu() generates(int32_t error);
};

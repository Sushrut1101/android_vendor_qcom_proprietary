// =======================================================================
// Copyright (c) 2016-2019 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
// =======================================================================
#pragma once
// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"
#include "IIO.h"

#define IClientEnv_OP_open 0
#define IClientEnv_OP_registerLegacy 1
#define IClientEnv_OP_registerAsClient 2
#define IClientEnv_OP_registerWithWhitelist 3

static inline int32_t
IClientEnv_release(Object self)
{
  return Object_invoke(self, Object_OP_release, 0, 0);
}

static inline int32_t
IClientEnv_retain(Object self)
{
  return Object_invoke(self, Object_OP_retain, 0, 0);
}

static inline int32_t
IClientEnv_open(Object self, uint32_t uid_val, Object *obj_ptr)
{
  ObjectArg a[2];
  a[0].b = (ObjectBuf) { &uid_val, sizeof(uint32_t) };

  int32_t result = Object_invoke(self, IClientEnv_OP_open, a, ObjectCounts_pack(1, 0, 0, 1));

  *obj_ptr = a[1].o;

  return result;
}

static inline int32_t
IClientEnv_registerLegacy(Object self, const void *credentials_ptr, size_t credentials_len, Object *clientEnv_ptr)
{
  ObjectArg a[2];
  a[0].bi = (ObjectBufIn) { credentials_ptr, credentials_len * 1 };

  int32_t result = Object_invoke(self, IClientEnv_OP_registerLegacy, a, ObjectCounts_pack(1, 0, 0, 1));

  *clientEnv_ptr = a[1].o;

  return result;
}

static inline int32_t
IClientEnv_registerAsClient(Object self, Object credentials_val, Object *clientEnv_ptr)
{
  ObjectArg a[2];
  a[0].o = credentials_val;

  int32_t result = Object_invoke(self, IClientEnv_OP_registerAsClient, a, ObjectCounts_pack(0, 0, 1, 1));

  *clientEnv_ptr = a[1].o;

  return result;
}

static inline int32_t
IClientEnv_registerWithWhitelist(Object self, Object credentials_val, const uint32_t *uids_ptr, size_t uids_len, Object *clientEnv_ptr)
{
  ObjectArg a[3];
  a[1].o = credentials_val;
  a[0].bi = (ObjectBufIn) { uids_ptr, uids_len * sizeof(uint32_t) };

  int32_t result = Object_invoke(self, IClientEnv_OP_registerWithWhitelist, a, ObjectCounts_pack(1, 0, 1, 1));

  *clientEnv_ptr = a[2].o;

  return result;
}



